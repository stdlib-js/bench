{"version":3,"file":"index.mjs","sources":["../harness/lib/benchmark-class/set_timeout.js","../harness/lib/benchmark-class/clear_timeout.js","../harness/lib/benchmark-class/run.js","../harness/lib/benchmark-class/exit.js","../harness/lib/benchmark-class/ended.js","../harness/lib/benchmark-class/assert.js","../harness/lib/benchmark-class/comment.js","../harness/lib/benchmark-class/skip.js","../harness/lib/benchmark-class/todo.js","../harness/lib/benchmark-class/fail.js","../harness/lib/benchmark-class/pass.js","../harness/lib/benchmark-class/ok.js","../harness/lib/benchmark-class/not_ok.js","../harness/lib/benchmark-class/equal.js","../harness/lib/benchmark-class/not_equal.js","../harness/lib/benchmark-class/deep_equal.js","../harness/lib/benchmark-class/not_deep_equal.js","../harness/lib/utils/next_tick.js","../harness/lib/benchmark-class/end.js","../harness/lib/benchmark-class/index.js","../harness/lib/runner/encode_assertion.js","../harness/lib/runner/encode_result.js","../harness/lib/runner/push.js","../harness/lib/runner/create_stream.js","../harness/lib/runner/run.js","../harness/lib/runner/clear.js","../harness/lib/runner/close.js","../harness/lib/runner/exit.js","../harness/lib/runner/index.js","../harness/lib/harness/validate.js","../harness/lib/harness/pretest.js","../harness/lib/harness/iterations.js","../harness/lib/harness/init.js","../harness/lib/harness/index.js","../harness/lib/utils/process.js","../harness/lib/utils/can_exit.js","../harness/lib/utils/can_emit_exit.js","../harness/lib/log/log.js","../harness/lib/log/index.js","../harness/lib/exit_harness.js","../harness/lib/get_harness.js","../harness/lib/main.js","../harness/lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = setTimeout;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = clearTimeout;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar timeout = require( './set_timeout.js' );\nvar clear = require( './clear_timeout.js' );\n\n\n// MAIN //\n\n/**\n* Runs a benchmark.\n*\n* @private\n* @returns {void}\n*/\nfunction run() {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tvar id;\n\tif ( this._skip ) {\n\t\tthis.comment( 'SKIP '+this.name );\n\t\treturn this.end();\n\t}\n\tif ( !this._benchmark ) {\n\t\tthis.comment( 'TODO '+this.name );\n\t\treturn this.end();\n\t}\n\tself = this;\n\tthis._running = true;\n\n\tid = timeout( onTimeout, this.timeout );\n\tthis.once( 'end', endTimeout );\n\n\tthis.emit( 'prerun' );\n\tthis._benchmark( this );\n\tthis.emit( 'run' );\n\n\t/**\n\t* Callback invoked once a timeout ends.\n\t*\n\t* @private\n\t*/\n\tfunction onTimeout() {\n\t\tself.fail( 'benchmark timed out after '+self.timeout+'ms' );\n\t}\n\n\t/**\n\t* Clears a timeout.\n\t*\n\t* @private\n\t*/\n\tfunction endTimeout() {\n\t\tclear( id );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = run;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Forcefully ends a benchmark.\n*\n* @private\n* @returns {void}\n*/\nfunction exit() {\n\t/* eslint-disable no-invalid-this */\n\tif ( this._exited ) {\n\t\t// If we have already \"exited\", do not create more failing assertions when one should suffice...\n\t\treturn;\n\t}\n\t// Only \"exit\" when a benchmark has either not yet been run or is currently running. If a benchmark has already ended, no need to generate a failing assertion.\n\tif ( !this._ended ) {\n\t\tthis._exited = true;\n\t\tthis.fail( 'benchmark exited without ending' );\n\n\t\t// Allow running benchmarks to call `end` on their own...\n\t\tif ( !this._running ) {\n\t\t\tthis.end();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = exit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a `boolean` indicating if a benchmark has ended.\n*\n* @private\n* @returns {boolean} boolean indicating if a benchmark has ended\n*/\nfunction ended() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._ended;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ended;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Generates an assertion.\n*\n* @private\n* @param {boolean} ok - assertion outcome\n* @param {Options} opts - options\n*/\nfunction assert( ok, opts ) {\n\tvar result;\n\tvar err;\n\n\tresult = {\n\t\t'id': this._count,\n\t\t'ok': ok,\n\t\t'skip': opts.skip,\n\t\t'todo': opts.todo,\n\t\t'name': opts.message || '(unnamed assert)',\n\t\t'operator': opts.operator\n\t};\n\tif ( hasOwnProp( opts, 'actual' ) ) {\n\t\tresult.actual = opts.actual;\n\t}\n\tif ( hasOwnProp( opts, 'expected' ) ) {\n\t\tresult.expected = opts.expected;\n\t}\n\tif ( !ok ) {\n\t\tresult.error = opts.error || new Error( this.name );\n\t\terr = new Error( 'not implemented' ); // eslint-disable-line no-unused-vars\n\n\t\t// TODO: generate an exception in order to locate the calling function (https://github.com/substack/tape/blob/master/lib/test.js#L215)\n\t}\n\tthis._count += 1;\n\tthis.emit( 'result', result );\n}\n\n\n// EXPORTS //\n\nmodule.exports = assert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar trim = require( '@stdlib/string/base/trim' );\nvar replace = require( '@stdlib/string/base/replace' );\nvar EOL = require( '@stdlib/regexp/eol' ).REGEXP;\n\n\n// VARIABLES //\n\nvar RE_COMMENT = /^#\\s*/;\n\n\n// MAIN //\n\n/**\n* Writes a comment.\n*\n* @private\n* @param {string} msg - comment message\n*/\nfunction comment( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tvar lines;\n\tvar i;\n\tmsg = trim( msg );\n\tlines = msg.split( EOL );\n\tfor ( i = 0; i < lines.length; i++ ) {\n\t\tmsg = trim( lines[ i ] );\n\t\tmsg = replace( msg, RE_COMMENT, '' );\n\t\tthis.emit( 'result', msg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = comment;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates an assertion which will be skipped.\n*\n* @private\n* @param {*} value - value\n* @param {string} msg - message\n*/\nfunction skip( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( true, {\n\t\t'message': msg,\n\t\t'operator': 'skip',\n\t\t'skip': true\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = skip;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates an assertion which should be implemented.\n*\n* @private\n* @param {*} value - value\n* @param {string} msg - message\n*/\nfunction todo( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !!value, {\n\t\t'message': msg,\n\t\t'operator': 'todo',\n\t\t'todo': true\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = todo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a failing assertion.\n*\n* @private\n* @param {string} msg - message\n*/\nfunction fail( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( false, {\n\t\t'message': msg,\n\t\t'operator': 'fail'\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = fail;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a passing assertion.\n*\n* @private\n* @param {string} msg - message\n*/\nfunction pass( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( true, {\n\t\t'message': msg,\n\t\t'operator': 'pass'\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = pass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that a `value` is truthy.\n*\n* @private\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nfunction ok( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !!value, {\n\t\t'message': msg || 'should be truthy',\n\t\t'operator': 'ok',\n\t\t'expected': true,\n\t\t'actual': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = ok;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that a `value` is falsy.\n*\n* @private\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nfunction notOk( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !value, {\n\t\t'message': msg || 'should be falsy',\n\t\t'operator': 'notOk',\n\t\t'expected': false,\n\t\t'actual': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = notOk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is strictly equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nfunction equal( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( actual === expected, {\n\t\t'message': msg || 'should be equal',\n\t\t'operator': 'equal',\n\t\t'expected': expected,\n\t\t'actual': actual\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = equal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is not strictly equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nfunction notEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( actual !== expected, {\n\t\t'message': msg || 'should not be equal',\n\t\t'operator': 'notEqual',\n\t\t'expected': expected,\n\t\t'actual': actual\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = notEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is deeply equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nfunction deepEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis.comment( 'actual: '+actual+'. expected: '+expected+'. msg: '+msg+'.' );\n\n\t// TODO: implement\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is not deeply equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nfunction notDeepEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis.comment( 'actual: '+actual+'. expected: '+expected+'. msg: '+msg+'.' );\n\n\t// TODO: implement\n}\n\n\n// EXPORTS //\n\nmodule.exports = notDeepEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Runs a function on a subsequent turn of the event loop.\n*\n* ## Notes\n*\n* -   `process.nextTick` is only Node.js.\n* -   `setImmediate` is non-standard.\n* -   Everything else is browser based (e.g., mutation observer, requestAnimationFrame, etc).\n* -   Only API which is universal is `setTimeout`.\n* -   Note that `0` is not actually `0ms`. Browser environments commonly have a minimum delay of `4ms`. This is acceptable. Here, the main intent of this function is to give the runtime a chance to run garbage collection, clear state, and tend to any other pending tasks before returning control to benchmark tasks. The larger aim (attainable or not) is to provide each benchmark run with as much of a fresh state as possible.\n*\n*\n* @private\n* @param {Function} fcn - function to run upon a subsequent turn of the event loop\n*/\nfunction nextTick( fcn ) {\n\tsetTimeout( fcn, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nextTick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nextTick = require( './../utils/next_tick.js' );\n\n\n// MAIN //\n\n/**\n* Ends a benchmark.\n*\n* @private\n*/\nfunction end() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( this._ended ) {\n\t\tthis.fail( '.end() called more than once' );\n\t} else {\n\t\t// Prevents releasing the zalgo when running synchronous benchmarks.\n\t\tnextTick( onTick );\n\t}\n\tthis._ended = true;\n\tthis._running = false;\n\n\t/**\n\t* Callback invoked upon a subsequent tick of the event loop.\n\t*\n\t* @private\n\t*/\n\tfunction onTick() {\n\t\tself.emit( 'end' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = end;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar EventEmitter = require( 'events' ).EventEmitter;\nvar inherit = require( '@stdlib/utils/inherit' );\nvar defineProperty = require( '@stdlib/utils/define-property' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar tic = require( '@stdlib/time/tic' );\nvar toc = require( '@stdlib/time/toc' );\nvar run = require( './run.js' );\nvar exit = require( './exit.js' );\nvar ended = require( './ended.js' );\nvar assert = require( './assert.js' );\nvar comment = require( './comment.js' );\nvar skip = require( './skip.js' );\nvar todo = require( './todo.js' );\nvar fail = require( './fail.js' );\nvar pass = require( './pass.js' );\nvar ok = require( './ok.js' );\nvar notOk = require( './not_ok.js' );\nvar equal = require( './equal.js' );\nvar notEqual = require( './not_equal.js' );\nvar deepEqual = require( './deep_equal.js' );\nvar notDeepEqual = require( './not_deep_equal.js' );\nvar end = require( './end.js' );\n\n\n// MAIN //\n\n/**\n* Benchmark constructor.\n*\n* @constructor\n* @param {string} name - benchmark name\n* @param {Options} opts - benchmark options\n* @param {boolean} opts.skip - boolean indicating whether to skip a benchmark\n* @param {PositiveInteger} opts.iterations - number of iterations\n* @param {PositiveInteger} opts.timeout - number of milliseconds before a benchmark automatically fails\n* @param {Function} [benchmark] - function containing benchmark code\n* @returns {Benchmark} Benchmark instance\n*\n* @example\n* var bench = new Benchmark( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.comment( 'Running benchmarks...' );\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.comment( 'Finished running benchmarks.' );\n*     b.end();\n* });\n*/\nfunction Benchmark( name, opts, benchmark ) {\n\tvar hasTicked;\n\tvar hasTocked;\n\tvar self;\n\tvar time;\n\tif ( !( this instanceof Benchmark ) ) {\n\t\treturn new Benchmark( name, opts, benchmark );\n\t}\n\tself = this;\n\thasTicked = false;\n\thasTocked = false;\n\n\tEventEmitter.call( this );\n\n\t// Private properties:\n\tsetReadOnly( this, '_benchmark', benchmark );\n\tsetReadOnly( this, '_skip', opts.skip );\n\n\tdefineProperty( this, '_ended', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_running', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_exited', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_count', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': 0\n\t});\n\n\t// Read-only:\n\tsetReadOnly( this, 'name', name );\n\tsetReadOnly( this, 'tic', start );\n\tsetReadOnly( this, 'toc', stop );\n\tsetReadOnly( this, 'iterations', opts.iterations );\n\tsetReadOnly( this, 'timeout', opts.timeout );\n\n\treturn this;\n\n\t/**\n\t* Starts a benchmark timer.\n\t*\n\t* ## Notes\n\t*\n\t* -   Using a scoped variable prevents nefarious mutation by bad actors hoping to manipulate benchmark results.\n\t* -   The one attack vector which remains is manipulation of the `require` cache for `tic` and `toc`.\n\t* -   One way to combat cache manipulation is by comparing the checksum of `Function#toString()` against known values.\n\t*\n\t* @private\n\t*/\n\tfunction start() {\n\t\tif ( hasTicked ) {\n\t\t\tself.fail( '.tic() called more than once' );\n\t\t} else {\n\t\t\tself.emit( 'tic' );\n\t\t\thasTicked = true;\n\t\t\ttime = tic();\n\t\t}\n\t}\n\n\t/**\n\t* Stops a benchmark timer.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction stop() {\n\t\tvar elapsed;\n\t\tvar secs;\n\t\tvar rate;\n\t\tvar out;\n\n\t\tif ( hasTicked === false ) {\n\t\t\treturn self.fail( '.toc() called before .tic()' );\n\t\t}\n\t\telapsed = toc( time );\n\t\tif ( hasTocked ) {\n\t\t\treturn self.fail( '.toc() called more than once' );\n\t\t}\n\t\thasTocked = true;\n\t\tself.emit( 'toc' );\n\n\t\tsecs = elapsed[ 0 ] + ( elapsed[ 1 ]/1e9 );\n\t\trate = self.iterations / secs;\n\n\t\tout = {\n\t\t\t'ok': true,\n\t\t\t'operator': 'result',\n\t\t\t'iterations': self.iterations,\n\t\t\t'elapsed': secs,\n\t\t\t'rate': rate\n\t\t};\n\t\tself.emit( 'result', out );\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Benchmark, EventEmitter );\n\n/**\n* Runs a benchmark.\n*\n* @private\n* @name run\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'run', run );\n\n/**\n* Forcefully ends a benchmark.\n*\n* @private\n* @name exit\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'exit', exit );\n\n/**\n* Returns a `boolean` indicating if a benchmark has ended.\n*\n* @private\n* @name ended\n* @memberof Benchmark.prototype\n* @type {Function}\n* @returns {boolean} boolean indicating if a benchmark has ended\n*/\nsetReadOnly( Benchmark.prototype, 'ended', ended );\n\n/**\n* Generates an assertion.\n*\n* @private\n* @name _assert\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {boolean} ok - assertion outcome\n* @param {Options} opts - options\n*/\nsetReadOnly( Benchmark.prototype, '_assert', assert );\n\n/**\n* Writes a comment.\n*\n* @name comment\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - comment message\n*/\nsetReadOnly( Benchmark.prototype, 'comment', comment );\n\n/**\n* Generates an assertion which will be skipped.\n*\n* @name skip\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'skip', skip );\n\n/**\n* Generates an assertion which should be implemented.\n*\n* @name todo\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'todo', todo );\n\n/**\n* Generates a failing assertion.\n*\n* @name fail\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'fail', fail );\n\n/**\n* Generates a passing assertion.\n*\n* @name pass\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'pass', pass );\n\n/**\n* Asserts that a `value` is truthy.\n*\n* @name ok\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'ok', ok );\n\n/**\n* Asserts that a `value` is falsy.\n*\n* @name notOk\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'notOk', notOk );\n\n/**\n* Asserts that `actual` is strictly equal to `expected`.\n*\n* @name equal\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'equal', equal );\n\n/**\n* Asserts that `actual` is not strictly equal to `expected`.\n*\n* @name notEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'notEqual', notEqual );\n\n/**\n* Asserts that `actual` is deeply equal to `expected`.\n*\n* @name deepEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nsetReadOnly( Benchmark.prototype, 'deepEqual', deepEqual );\n\n/**\n* Asserts that `actual` is not deeply equal to `expected`.\n*\n* @name notDeepEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nsetReadOnly( Benchmark.prototype, 'notDeepEqual', notDeepEqual );\n\n/**\n* Ends a benchmark.\n*\n* @name end\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'end', end );\n\n\n// EXPORTS //\n\nmodule.exports = Benchmark;\n","/* eslint-disable stdlib/jsdoc-require-throws-tags */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( '@stdlib/string/base/replace' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar RE_EOL = require( '@stdlib/regexp/eol' ).REGEXP;\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\n\n\n// MAIN //\n\n/**\n* Encodes an assertion.\n*\n* @private\n* @param {Object} result - result\n* @param {PositiveInteger} count - result count\n* @returns {string} encoded assertion\n*/\nfunction encodeAssertion( result, count ) {\n\tvar actualStack;\n\tvar errorStack;\n\tvar expected;\n\tvar actual;\n\tvar indent;\n\tvar stack;\n\tvar lines;\n\tvar out;\n\tvar i;\n\n\tout = '';\n\n\tif ( !result.ok ) {\n\t\tout += 'not ';\n\t}\n\t// Add result count:\n\tout += 'ok ' + count;\n\n\t// Add description:\n\tif ( result.name ) {\n\t\tout += ' ' + replace( result.name.toString(), RE_WHITESPACE, ' ' );\n\t}\n\t// Append directives:\n\tif ( result.skip ) {\n\t\tout += ' # SKIP';\n\t} else if ( result.todo ) {\n\t\tout += ' # TODO';\n\t}\n\tout += '\\n';\n\tif ( result.ok ) {\n\t\treturn out;\n\t}\n\t// Format diagnostics as YAML...\n\tindent = '  ';\n\tout += indent + '---\\n';\n\tout += indent + 'operator: ' + result.operator + '\\n';\n\tif (\n\t\thasOwnProp( result, 'actual' ) ||\n\t\thasOwnProp( result, 'expected' )\n\t) {\n\t\t// TODO: inspect object logic (https://github.com/substack/tape/blob/master/lib/results.js#L145)\n\t\texpected = result.expected;\n\t\tactual = result.actual;\n\t\tif ( actual !== actual && expected !== expected ) {\n\t\t\tthrow new Error( 'unexpected error.' ); // TODO: remove me\n\t\t}\n\t}\n\tif ( result.at ) {\n\t\tout += indent + 'at: ' + result.at + '\\n';\n\t}\n\tif ( result.actual ) {\n\t\tactualStack = result.actual.stack;\n\t}\n\tif ( result.error ) {\n\t\terrorStack = result.error.stack;\n\t}\n\tif ( actualStack ) {\n\t\tstack = actualStack;\n\t} else {\n\t\tstack = errorStack;\n\t}\n\tif ( stack ) {\n\t\tlines = stack.toString().split( RE_EOL );\n\t\tout += indent + 'stack: |-\\n';\n\t\tfor ( i = 0; i < lines.length; i++ ) {\n\t\t\tout += indent + '  ' + lines[ i ] + '\\n';\n\t\t}\n\t}\n\tout += indent + '...\\n';\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = encodeAssertion;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar YAML_INDENT = '  ';\nvar YAML_BEGIN = YAML_INDENT + '---\\n';\nvar YAML_END = YAML_INDENT + '...\\n';\n\n\n// MAIN //\n\n/**\n* Encodes a result as a YAML block.\n*\n* @private\n* @param {Object} result - result\n* @returns {string} encoded result\n*/\nfunction encodeResult( result ) {\n\tvar out = YAML_BEGIN;\n\tout += YAML_INDENT + 'iterations: '+result.iterations+'\\n';\n\tout += YAML_INDENT + 'elapsed: '+result.elapsed+'\\n';\n\tout += YAML_INDENT + 'rate: '+result.rate+'\\n';\n\tout += YAML_END;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = encodeResult;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar encodeAssertion = require( './encode_assertion.js' );\nvar encodeResult = require( './encode_result.js' );\n\n\n// MAIN //\n\n/**\n* Adds a new benchmark.\n*\n* @private\n* @param {Benchmark} b - benchmark\n*/\nfunction push( b ) {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\n\tthis._benchmarks.push( b );\n\n\tb.once( 'prerun', onPreRun );\n\tb.on( 'result', onResult );\n\n\tthis.emit( '_push', b );\n\n\t/**\n\t* Callback invoked upon a `prerun` event.\n\t*\n\t* @private\n\t*/\n\tfunction onPreRun() {\n\t\tself._stream.write( '# '+b.name+'\\n' );\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(Object|string)} res - result\n\t* @returns {void}\n\t*/\n\tfunction onResult( res ) {\n\t\t// Check for a comment...\n\t\tif ( isString( res ) ) {\n\t\t\treturn self._stream.write( '# '+res+'\\n' );\n\t\t}\n\t\tif ( res.operator === 'result' ) {\n\t\t\tres = encodeResult( res );\n\t\t\treturn self._stream.write( res );\n\t\t}\n\t\tself.total += 1;\n\t\tif ( res.ok ) {\n\t\t\tif ( res.skip ) {\n\t\t\t\tself.skip += 1;\n\t\t\t} else if ( res.todo ) {\n\t\t\t\tself.todo += 1;\n\t\t\t}\n\t\t\tself.pass += 1;\n\t\t}\n\t\t// According to the TAP spec, todos pass even if not \"ok\"...\n\t\telse if ( res.todo ) {\n\t\t\tself.pass += 1;\n\t\t\tself.todo += 1;\n\t\t}\n\t\t// Everything else is a failure...\n\t\telse {\n\t\t\tself.fail += 1;\n\t\t}\n\t\tres = encodeAssertion( res, self.total );\n\t\tself._stream.write( res );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar TransformStream = require( '@stdlib/streams/node/transform' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar nextTick = require( './../utils/next_tick.js' );\n\n\n// VARIABLES //\n\nvar TAP_HEADER = 'TAP version 13';\n\n\n// MAIN //\n\n/**\n* Creates a results stream.\n*\n* @private\n* @param {Options} [options] - stream options\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {TransformStream} transform stream\n*/\nfunction createStream( options ) {\n\t/* eslint-disable no-invalid-this */\n\tvar stream;\n\tvar opts;\n\tvar self;\n\tvar id;\n\n\tself = this;\n\tif ( arguments.length ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\tstream = new TransformStream( opts );\n\tif ( opts.objectMode ) {\n\t\tid = 0;\n\t\tthis.on( '_push', onPush );\n\t\tthis.on( 'done', onDone );\n\t} else {\n\t\tstream.write( TAP_HEADER+'\\n' );\n\t\tthis._stream.pipe( stream );\n\t}\n\tthis.on( '_run', onRun );\n\treturn stream;\n\n\t/**\n\t* Runs the next benchmark.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tnextTick( onTick );\n\t}\n\n\t/**\n\t* Callback invoked upon the next tick.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onTick() {\n\t\tvar b = self._benchmarks.shift();\n\t\tif ( b ) {\n\t\t\tb.run();\n\t\t\tif ( !b.ended() ) {\n\t\t\t\treturn b.once( 'end', next );\n\t\t\t}\n\t\t\treturn next();\n\t\t}\n\t\tself._running = false;\n\t\tself.emit( 'done' );\n\t}\n\n\t/**\n\t* Callback invoked upon a run event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onRun() {\n\t\tif ( !self._running ) {\n\t\t\tself._running = true;\n\t\t\treturn next();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a push event.\n\t*\n\t* @private\n\t* @param {Benchmark} b - benchmark\n\t*/\n\tfunction onPush( b ) {\n\t\tvar bid = id;\n\t\tid += 1;\n\n\t\tb.once( 'prerun', onPreRun );\n\t\tb.on( 'result', onResult );\n\t\tb.on( 'end', onEnd );\n\n\t\t/**\n\t\t* Callback invoked upon a `prerun` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onPreRun() {\n\t\t\tvar row = {\n\t\t\t\t'type': 'benchmark',\n\t\t\t\t'name': b.name,\n\t\t\t\t'id': bid\n\t\t\t};\n\t\t\tstream.write( row );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked upon a `result` event.\n\t\t*\n\t\t* @private\n\t\t* @param {(Object|string)} res - result\n\t\t*/\n\t\tfunction onResult( res ) {\n\t\t\tif ( isString( res ) ) {\n\t\t\t\tres = {\n\t\t\t\t\t'benchmark': bid,\n\t\t\t\t\t'type': 'comment',\n\t\t\t\t\t'name': res\n\t\t\t\t};\n\t\t\t} else if ( res.operator === 'result' ) {\n\t\t\t\tres.benchmark = bid;\n\t\t\t\tres.type = 'result';\n\t\t\t} else {\n\t\t\t\tres.benchmark = bid;\n\t\t\t\tres.type = 'assert';\n\t\t\t}\n\t\t\tstream.write( res );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked upon an `end` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onEnd() {\n\t\t\tstream.write({\n\t\t\t\t'benchmark': bid,\n\t\t\t\t'type': 'end'\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `done` event.\n\t*\n\t* @private\n\t*/\n\tfunction onDone() {\n\t\tstream.destroy();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = createStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Runs pending benchmarks.\n*\n* @private\n*/\nfunction run() {\n\t/* eslint-disable no-invalid-this */\n\tthis.emit( '_run' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = run;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes any pending benchmarks.\n*\n* @private\n*/\nfunction clear() {\n\t/* eslint-disable no-invalid-this */\n\tthis._benchmarks.length = 0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = clear;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Closes a benchmark runner.\n*\n* @private\n* @returns {void}\n*/\nfunction closeRunner() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( this._closed ) {\n\t\treturn;\n\t}\n\tthis._closed = true;\n\tif ( this._benchmarks.length ) {\n\t\tthis.clear();\n\t\tthis._stream.write( '# WARNING: harness closed before completion.\\n' );\n\t} else {\n\t\tthis._stream.write( '#\\n' );\n\t\tthis._stream.write( '1..'+this.total+'\\n' );\n\t\tthis._stream.write( '# total '+this.total+'\\n' );\n\t\tthis._stream.write( '# pass  '+this.pass+'\\n' );\n\t\tif ( this.fail ) {\n\t\t\tthis._stream.write( '# fail  '+this.fail+'\\n' );\n\t\t}\n\t\tif ( this.skip ) {\n\t\t\tthis._stream.write( '# skip  '+this.skip+'\\n' );\n\t\t}\n\t\tif ( this.todo ) {\n\t\t\tthis._stream.write( '# todo  '+this.todo+'\\n' );\n\t\t}\n\t\tif ( !this.fail ) {\n\t\t\tthis._stream.write( '#\\n# ok\\n' );\n\t\t}\n\t}\n\tthis._stream.once( 'close', onClose );\n\tthis._stream.destroy();\n\n\t/**\n\t* Callback invoked upon a `close` event.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tself.emit( 'close' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = closeRunner;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Forcefully exits a benchmark runner.\n*\n* @private\n*/\nfunction exit() {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tvar i;\n\tfor ( i = 0; i < this._benchmarks.length; i++ ) {\n\t\tthis._benchmarks[ i ].exit();\n\t}\n\tself = this;\n\tthis.clear();\n\tthis._stream.once( 'close', onClose );\n\tthis._stream.destroy();\n\n\t/**\n\t* Callback invoked upon a `close` event.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tself.emit( 'close' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = exit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar EventEmitter = require( 'events' ).EventEmitter;\nvar inherit = require( '@stdlib/utils/inherit' );\nvar defineProperty = require( '@stdlib/utils/define-property' );\nvar TransformStream = require( '@stdlib/streams/node/transform' );\nvar push = require( './push.js' );\nvar createStream = require( './create_stream.js' );\nvar run = require( './run.js' );\nvar clear = require( './clear.js' );\nvar close = require( './close.js' ); // eslint-disable-line stdlib/no-redeclare\nvar exit = require( './exit.js' );\n\n\n// MAIN //\n\n/**\n* Benchmark runner.\n*\n* @private\n* @constructor\n* @returns {Runner} Runner instance\n*\n* @example\n* var runner = new Runner();\n*/\nfunction Runner() {\n\tif ( !( this instanceof Runner ) ) {\n\t\treturn new Runner();\n\t}\n\tEventEmitter.call( this );\n\n\t// Private properties:\n\tdefineProperty( this, '_benchmarks', {\n\t\t'value': [],\n\t\t'configurable': false,\n\t\t'writable': false,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_stream', {\n\t\t'value': new TransformStream(),\n\t\t'configurable': false,\n\t\t'writable': false,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_closed', {\n\t\t'value': false,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_running', {\n\t\t'value': false,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': false\n\t});\n\n\t// Public properties:\n\tdefineProperty( this, 'total', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'fail', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'pass', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'skip', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'todo', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\treturn this;\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Runner, EventEmitter );\n\n/**\n* Adds a new benchmark.\n*\n* @private\n* @memberof Runner.prototype\n* @function push\n* @param {Benchmark} b - benchmark\n*/\ndefineProperty( Runner.prototype, 'push', {\n\t'value': push,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Creates a results stream.\n*\n* @private\n* @memberof Runner.prototype\n* @function createStream\n* @param {Options} [options] - stream options\n* @returns {TransformStream} transform stream\n*/\ndefineProperty( Runner.prototype, 'createStream', {\n\t'value': createStream,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Runs pending benchmarks.\n*\n* @private\n* @memberof Runner.prototype\n* @function run\n*/\ndefineProperty( Runner.prototype, 'run', {\n\t'value': run,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Removes any pending benchmarks.\n*\n* @private\n* @memberof Runner.prototype\n* @function clear\n*/\ndefineProperty( Runner.prototype, 'clear', {\n\t'value': clear,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Closes a benchmark runner.\n*\n* @private\n* @memberof Runner.prototype\n* @function close\n*/\ndefineProperty( Runner.prototype, 'close', {\n\t'value': close,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Forcefully exits a benchmark runner.\n*\n* @private\n* @memberof Runner.prototype\n* @function exit\n*/\ndefineProperty( Runner.prototype, 'exit', {\n\t'value': exit,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n\n// EXPORTS //\n\nmodule.exports = Runner;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isNull = require( '@stdlib/assert/is-null' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {boolean} [options.skip] - boolean indicating whether to skip a benchmark\n* @param {(PositiveInteger|null)} [options.iterations] - number of iterations\n* @param {PositiveInteger} [options.repeats] - number of repeats\n* @param {PositiveInteger} [options.timeout] - number of milliseconds before a benchmark automatically fails\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'skip': false,\n*     'iterations': 1e6,\n*     'repeats': 3,\n*     'timeout': 10000\n* };\n*\n* var err = validate( opts, options );\n* if ( err ) {\n*    throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'skip' ) ) {\n\t\topts.skip = options.skip;\n\t\tif ( !isBoolean( opts.skip ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'skip', opts.skip ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iterations' ) ) {\n\t\topts.iterations = options.iterations;\n\t\tif (\n\t\t\t!isPositiveInteger( opts.iterations ) &&\n\t\t\t!isNull( opts.iterations )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a positive integer or null. Option: `%s`.', 'iterations', opts.iterations ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'repeats' ) ) {\n\t\topts.repeats = options.repeats;\n\t\tif ( !isPositiveInteger( opts.repeats ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'repeats', opts.repeats ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'timeout' ) ) {\n\t\topts.timeout = options.timeout;\n\t\tif ( !isPositiveInteger( opts.timeout ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'timeout', opts.timeout ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar copy = require( '@stdlib/utils/copy' );\nvar Benchmark = require( './../benchmark-class' );\n\n\n// MAIN //\n\n/**\n* Runs pretests to sanity check and/or catch failures.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} options - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after completing pretests\n*/\nfunction pretest( name, options, benchmark, clbk ) {\n\tvar fail;\n\tvar opts;\n\tvar tic;\n\tvar toc;\n\tvar b;\n\n\t// Counters to determine the number of `tic` and `toc` events:\n\ttic = 0;\n\ttoc = 0;\n\n\t// Local copy:\n\topts = copy( options );\n\topts.iterations = 1;\n\n\t// Pretest to check for minimum requirements and/or errors...\n\tb = new Benchmark( name, opts, benchmark );\n\tb.on( 'result', onResult );\n\tb.on( 'tic', onTic );\n\tb.on( 'toc', onToc );\n\tb.once( 'end', onEnd );\n\tb.run();\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif (\n\t\t\t!isString( result ) &&\n\t\t\t!result.ok &&\n\t\t\t!result.todo\n\t\t) {\n\t\t\tfail = true;\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `tic` event.\n\t*\n\t* @private\n\t*/\n\tfunction onTic() {\n\t\ttic += 1;\n\t}\n\n\t/**\n\t* Callback invoked upon a `toc` event.\n\t*\n\t* @private\n\t*/\n\tfunction onToc() {\n\t\ttoc += 1;\n\t}\n\n\t/**\n\t* Callback invoked upon an `end` event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onEnd() {\n\t\tvar err;\n\t\tif ( fail ) {\n\t\t\t// Possibility that failure is intermittent, but we will assume that the usual case is that the failure would persist across all repeats and no sense failing multiple times when once suffices.\n\t\t\terr = new Error( 'unexpected error. Benchmark failed.' );\n\t\t} else if ( tic !== 1 || toc !== 1 ) {\n\t\t\t// Unable to do anything definitive with timing information (e.g., a tic with no toc or vice versa, or benchmark function calls neither tic nor toc).\n\t\t\terr = new Error( 'unexpected error. Invalid benchmark.' );\n\t\t}\n\t\tif ( err ) {\n\t\t\treturn clbk( err );\n\t\t}\n\t\treturn clbk();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = pretest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar copy = require( '@stdlib/utils/copy' );\nvar Benchmark = require( './../benchmark-class' );\n\n\n// VARIABLES //\n\nvar MIN_TIME = 0.1; // seconds\nvar ITERATIONS = 10; // 10^1\nvar MAX_ITERATIONS = 10000000000; // 10^10\n\n\n// MAIN //\n\n/**\n* Determines the number of iterations.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} options - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after determining number of iterations\n* @returns {void}\n*/\nfunction iterations( name, options, benchmark, clbk ) {\n\tvar opts;\n\tvar time;\n\n\t// Elapsed time (in seconds):\n\ttime = 0;\n\n\t// Create a local copy:\n\topts = copy( options );\n\topts.iterations = ITERATIONS;\n\n\t// Begin running benchmarks:\n\treturn next();\n\n\t/**\n\t* Run a new benchmark.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar b = new Benchmark( name, opts, benchmark );\n\t\tb.on( 'result', onResult );\n\t\tb.once( 'end', onEnd );\n\t\tb.run();\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif ( !isString( result ) && result.operator === 'result' ) {\n\t\t\ttime = result.elapsed;\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon an `end` event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onEnd() {\n\t\tif (\n\t\t\ttime < MIN_TIME &&\n\t\t\topts.iterations < MAX_ITERATIONS\n\t\t) {\n\t\t\topts.iterations *= 10;\n\t\t\treturn next();\n\t\t}\n\t\tclbk( null, opts.iterations );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterations;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar pretest = require( './pretest.js' );\nvar iterations = require( './iterations.js' );\n\n\n// MAIN //\n\n/**\n* Performs benchmark initialization tasks.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} opts - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after completing initialization tasks\n* @returns {void}\n*/\nfunction init( name, opts, benchmark, clbk ) {\n\t// If no benchmark function, then the benchmark is considered a \"todo\", so no need to repeat multiple times...\n\tif ( !benchmark ) {\n\t\topts.repeats = 1;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n\t// If the `skip` option to `true`, no need to initialize or repeat multiple times as will not be running the benchmark:\n\tif ( opts.skip ) {\n\t\topts.repeats = 1;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n\t// Perform pretests:\n\tpretest( name, opts, benchmark, onPreTest );\n\n\t/**\n\t* Callback invoked upon completing pretests.\n\t*\n\t* @private\n\t* @param {Error} [error] - error object\n\t* @returns {void}\n\t*/\n\tfunction onPreTest( error ) {\n\t\t// If the pretests failed, don't run the benchmark multiple times...\n\t\tif ( error ) {\n\t\t\topts.repeats = 1;\n\t\t\topts.iterations = 1;\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\t// If a user specified an iteration number, we can begin running benchmarks...\n\t\tif ( opts.iterations ) {\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\t// Determine iteration number:\n\t\titerations( name, opts, benchmark, onIterations );\n\t}\n\n\t/**\n\t* Callback invoked upon determining an iteration number.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {PositiveInteger} iter - number of iterations\n\t* @returns {void}\n\t*/\n\tfunction onIterations( error, iter ) {\n\t\t// If provided an error, then a benchmark failed, and, similar to pretests, don't run the benchmark multiple times...\n\t\tif ( error ) {\n\t\t\topts.repeats = 1;\n\t\t\topts.iterations = 1;\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\topts.iterations = iter;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = init;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar Benchmark = require( './../benchmark-class' );\nvar Runner = require( './../runner' );\nvar nextTick = require( './../utils/next_tick.js' );\nvar DEFAULTS = require( './../defaults.json' );\nvar validate = require( './validate.js' );\nvar init = require( './init.js' );\n\n\n// MAIN //\n\n/**\n* Creates a benchmark harness.\n*\n* @param {Options} [options] - function options\n* @param {boolean} [options.autoclose] - boolean indicating whether to automatically close a harness after a harness finishes running all benchmarks\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*\n* @example\n* var bench = createHarness( onFinish );\n*\n* function onFinish() {\n*     bench.close();\n*     console.log( 'Exit code: %d', bench.exitCode );\n* }\n*\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n*\n* var stream = createHarness().createStream();\n* stream.pipe( stdout );\n*/\nfunction createHarness( options, clbk ) {\n\tvar exitCode;\n\tvar runner;\n\tvar queue;\n\tvar opts;\n\tvar cb;\n\n\topts = {};\n\tif ( arguments.length === 1 ) {\n\t\tif ( isFunction( options ) ) {\n\t\t\tcb = options;\n\t\t} else if ( isObject( options ) ) {\n\t\t\topts = options;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either an options object or a function. Value: `%s`.', options ) );\n\t\t}\n\t} else if ( arguments.length > 1 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'autoclose' ) ) {\n\t\t\topts.autoclose = options.autoclose;\n\t\t\tif ( !isBoolean( opts.autoclose ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'autoclose', opts.autoclose ) );\n\t\t\t}\n\t\t}\n\t\tcb = clbk;\n\t\tif ( !isFunction( cb ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', cb ) );\n\t\t}\n\t}\n\trunner = new Runner();\n\tif ( opts.autoclose ) {\n\t\trunner.once( 'done', close );\n\t}\n\tif ( cb ) {\n\t\trunner.once( 'done', cb );\n\t}\n\texitCode = 0;\n\tqueue = [];\n\n\t/**\n\t* Benchmark harness.\n\t*\n\t* @private\n\t* @param {string} name - benchmark name\n\t* @param {Options} [options] - benchmark options\n\t* @param {boolean} [options.skip=false] - boolean indicating whether to skip a benchmark\n\t* @param {(PositiveInteger|null)} [options.iterations=null] - number of iterations\n\t* @param {PositiveInteger} [options.repeats=3] - number of repeats\n\t* @param {PositiveInteger} [options.timeout=300000] - number of milliseconds before a benchmark automatically fails\n\t* @param {Function} [benchmark] - function containing benchmark code\n\t* @throws {TypeError} first argument must be a string\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {TypeError} benchmark argument must a function\n\t* @throws {Error} benchmark error\n\t* @returns {Function} benchmark harness\n\t*/\n\tfunction harness( name, options, benchmark ) {\n\t\tvar opts;\n\t\tvar err;\n\t\tvar b;\n\t\tif ( !isString( name ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', name ) );\n\t\t}\n\t\topts = copy( DEFAULTS );\n\t\tif ( arguments.length === 2 ) {\n\t\t\tif ( isFunction( options ) ) {\n\t\t\t\tb = options;\n\t\t\t} else {\n\t\t\t\terr = validate( opts, options );\n\t\t\t\tif ( err ) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( arguments.length > 2 ) {\n\t\t\terr = validate( opts, options );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tb = benchmark;\n\t\t\tif ( !isFunction( b ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', b ) );\n\t\t\t}\n\t\t}\n\t\t// Add the benchmark to the initialization queue:\n\t\tqueue.push( [ name, opts, b ] );\n\n\t\t// Perform initialization on the next turn of the event loop (note: this allows all benchmarks to be \"registered\" within the same turn of the loop; otherwise, we run the risk of registration-execution race conditions (i.e., a benchmark registers and executes before other benchmarks can register, depleting the benchmark queue and leading the harness to close)):\n\t\tif ( queue.length === 1 ) {\n\t\t\tnextTick( initialize );\n\t\t}\n\t\treturn harness;\n\t}\n\n\t/**\n\t* Initializes each benchmark.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction initialize() {\n\t\tvar idx = -1;\n\t\treturn next();\n\n\t\t/**\n\t\t* Initialize the next benchmark.\n\t\t*\n\t\t* @private\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next() {\n\t\t\tvar args;\n\n\t\t\tidx += 1;\n\n\t\t\t// If all benchmarks have been initialized, begin running the benchmarks:\n\t\t\tif ( idx === queue.length ) {\n\t\t\t\tqueue.length = 0;\n\t\t\t\treturn runner.run();\n\t\t\t}\n\t\t\t// Initialize the next benchmark:\n\t\t\targs = queue[ idx ];\n\t\t\tinit( args[ 0 ], args[ 1 ], args[ 2 ], onInit );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked after performing initialization tasks.\n\t\t*\n\t\t* @private\n\t\t* @param {string} name - benchmark name\n\t\t* @param {Options} opts - benchmark options\n\t\t* @param {(Function|undefined)} benchmark - function containing benchmark code\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction onInit( name, opts, benchmark ) {\n\t\t\tvar b;\n\t\t\tvar i;\n\n\t\t\t// Create a `Benchmark` instance for each repeat to ensure each benchmark has its own state...\n\t\t\tfor ( i = 0; i < opts.repeats; i++ ) {\n\t\t\t\tb = new Benchmark( name, opts, benchmark );\n\t\t\t\tb.on( 'result', onResult );\n\t\t\t\trunner.push( b );\n\t\t\t}\n\t\t\treturn next();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif (\n\t\t\t!isString( result ) &&\n\t\t\t!result.ok &&\n\t\t\t!result.todo\n\t\t) {\n\t\t\texitCode = 1;\n\t\t}\n\t}\n\n\t/**\n\t* Returns a results stream.\n\t*\n\t* @private\n\t* @param {Object} [options] - options\n\t* @returns {TransformStream} transform stream\n\t*/\n\tfunction createStream( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn runner.createStream( options );\n\t\t}\n\t\treturn runner.createStream();\n\t}\n\n\t/**\n\t* Closes a benchmark harness.\n\t*\n\t* @private\n\t*/\n\tfunction close() {\n\t\trunner.close();\n\t}\n\n\t/**\n\t* Forcefully exits a benchmark harness.\n\t*\n\t* @private\n\t*/\n\tfunction exit() {\n\t\trunner.exit();\n\t}\n\n\t/**\n\t* Returns the harness exit code.\n\t*\n\t* @private\n\t* @returns {NonNegativeInteger} exit code\n\t*/\n\tfunction getExitCode() {\n\t\treturn exitCode;\n\t}\n\n\tsetReadOnly( harness, 'createStream', createStream );\n\tsetReadOnly( harness, 'close', close );\n\tsetReadOnly( harness, 'exit', exit );\n\tsetReadOnlyAccessor( harness, 'exitCode', getExitCode );\n\n\treturn harness;\n}\n\n\n// EXPORTS //\n\nmodule.exports = createHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// EXPORTS //\n\nmodule.exports = proc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( './process.js' );\n\n\n// MAIN //\n\nvar bool = ( proc && typeof proc.exit === 'function' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar IS_BROWSER = require( '@stdlib/assert/is-browser' );\nvar canExit = require( './can_exit.js' );\n\n\n// MAIN //\n\nvar bool = ( !IS_BROWSER && canExit );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Writes a string to the console.\n*\n* @private\n* @param {string} str - string to write\n*/\nfunction log( str ) {\n\tconsole.log( str ); // eslint-disable-line no-console\n}\n\n\n// EXPORTS //\n\nmodule.exports = log;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar TransformStream = require( '@stdlib/streams/node/transform' );\nvar fromCodePoint = require( '@stdlib/string/from-code-point' );\nvar log = require( './log.js' );\n\n\n// MAIN //\n\n/**\n* Returns a Transform stream for logging to the console.\n*\n* @private\n* @returns {TransformStream} transform stream\n*/\nfunction createStream() {\n\tvar stream;\n\tvar line;\n\n\tstream = new TransformStream({\n\t\t'transform': transform,\n\t\t'flush': flush\n\t});\n\tline = '';\n\n\treturn stream;\n\n\t/**\n\t* Callback invoked upon receiving a new chunk.\n\t*\n\t* @private\n\t* @param {(Buffer|string)} chunk - chunk\n\t* @param {string} enc - Buffer encoding\n\t* @param {Callback} clbk - callback to invoke after transforming the streamed chunk\n\t*/\n\tfunction transform( chunk, enc, clbk ) {\n\t\tvar c;\n\t\tvar i;\n\n\t\tfor ( i = 0; i < chunk.length; i++ ) {\n\t\t\tc = fromCodePoint( chunk[ i ] );\n\t\t\tif ( c === '\\n' ) {\n\t\t\t\tflush();\n\t\t\t} else {\n\t\t\t\tline += c;\n\t\t\t}\n\t\t}\n\t\tclbk();\n\t}\n\n\t/**\n\t* Callback to flush data to `stdout`.\n\t*\n\t* @private\n\t* @param {Callback} [clbk] - callback to invoke after processing data\n\t* @returns {void}\n\t*/\n\tfunction flush( clbk ) {\n\t\ttry {\n\t\t\tlog( line );\n\t\t} catch ( err ) {\n\t\t\tstream.emit( 'error', err );\n\t\t}\n\t\tline = '';\n\t\tif ( clbk ) {\n\t\t\treturn clbk();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = createStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isNodeWritableStreamLike = require( '@stdlib/assert/is-node-writable-stream-like' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar pick = require( '@stdlib/utils/pick' );\nvar omit = require( '@stdlib/utils/omit' );\nvar noop = require( '@stdlib/utils/noop' );\nvar createHarness = require( './harness' );\nvar logStream = require( './log' );\nvar canEmitExit = require( './utils/can_emit_exit.js' );\nvar proc = require( './utils/process.js' );\n\n\n// MAIN //\n\n/**\n* Creates a benchmark harness which supports closing when a process exits.\n*\n* @private\n* @param {Options} [options] - function options\n* @param {boolean} [options.autoclose] - boolean indicating whether to automatically close a harness after a harness finishes running all benchmarks\n* @param {Stream} [options.stream] - output writable stream\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*\n* @example\n* var proc = require( 'process' );\n* var bench = createExitHarness( onFinish );\n*\n* function onFinish() {\n*     bench.close();\n* }\n*\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n*\n* var stream = createExitHarness().createStream();\n* stream.pipe( stdout );\n*/\nfunction createExitHarness() {\n\tvar exitCode;\n\tvar pipeline;\n\tvar harness;\n\tvar options;\n\tvar stream;\n\tvar topts;\n\tvar opts;\n\tvar clbk;\n\n\tif ( arguments.length === 0 ) {\n\t\toptions = {};\n\t\tclbk = noop;\n\t} else if ( arguments.length === 1 ) {\n\t\tif ( isFunction( arguments[ 0 ] ) ) {\n\t\t\toptions = {};\n\t\t\tclbk = arguments[ 0 ];\n\t\t} else if ( isObject( arguments[ 0 ] ) ) {\n\t\t\toptions = arguments[ 0 ];\n\t\t\tclbk = noop;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either an options object or a function. Value: `%s`.', arguments[ 0 ] ) );\n\t\t}\n\t} else {\n\t\toptions = arguments[ 0 ];\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t}\n\topts = {};\n\tif ( hasOwnProp( options, 'autoclose' ) ) {\n\t\topts.autoclose = options.autoclose;\n\t\tif ( !isBoolean( opts.autoclose ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'autoclose', opts.autoclose ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'stream' ) ) {\n\t\topts.stream = options.stream;\n\t\tif ( !isNodeWritableStreamLike( opts.stream ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a writable stream. Option: `%s`.', 'stream', opts.stream ) );\n\t\t}\n\t}\n\texitCode = 0;\n\n\t// Create a new harness:\n\ttopts = pick( opts, [ 'autoclose' ] );\n\tharness = createHarness( topts, done );\n\n\t// Create a results stream:\n\ttopts = omit( options, [ 'autoclose', 'stream' ] );\n\tstream = harness.createStream( topts );\n\n\t// Pipe results to an output stream:\n\tpipeline = stream.pipe( opts.stream || logStream() );\n\n\t// If a process can emit an 'exit' event, capture errors in order to set the exit code...\n\tif ( canEmitExit ) {\n\t\tpipeline.on( 'error', onError );\n\t\tproc.on( 'exit', onExit );\n\t}\n\treturn harness;\n\n\t/**\n\t* Callback invoked when a harness finishes.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction done() {\n\t\treturn clbk();\n\t}\n\n\t/**\n\t* Callback invoked upon a stream `error` event.\n\t*\n\t* @private\n\t* @param {Error} error - error object\n\t*/\n\tfunction onError() {\n\t\texitCode = 1;\n\t}\n\n\t/**\n\t* Callback invoked upon an `exit` event.\n\t*\n\t* @private\n\t* @param {integer} code - exit code\n\t*/\n\tfunction onExit( code ) {\n\t\tif ( code !== 0 ) {\n\t\t\t// Allow the process to exit...\n\t\t\treturn;\n\t\t}\n\t\tharness.close();\n\t\tproc.exit( exitCode || harness.exitCode );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = createExitHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar canEmitExit = require( './utils/can_emit_exit.js' );\nvar createExitHarness = require( './exit_harness.js' );\n\n\n// VARIABLES //\n\nvar harness;\n\n\n// MAIN //\n\n/**\n* Returns a benchmark harness. If a harness has already been created, returns the cached harness.\n*\n* @private\n* @param {Options} [options] - harness options\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @returns {Function} benchmark harness\n*/\nfunction getHarness( options, clbk ) {\n\tvar opts;\n\tvar cb;\n\tif ( harness ) {\n\t\treturn harness;\n\t}\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t\tcb = clbk;\n\t} else {\n\t\topts = {};\n\t\tcb = options;\n\t}\n\topts.autoclose = !canEmitExit;\n\tharness = createExitHarness( opts, cb );\n\n\t// Update state:\n\tgetHarness.cached = true;\n\n\treturn harness;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar TransformStream = require( '@stdlib/streams/node/transform' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\nvar createHarness = require( './harness' );\nvar harness = require( './get_harness.js' );\n\n\n// VARIABLES //\n\nvar listeners = [];\n\n\n// FUNCTIONS //\n\n/**\n* Callback invoked when a harness finishes running all benchmarks.\n*\n* @private\n*/\nfunction done() {\n\tvar len;\n\tvar f;\n\tvar i;\n\n\tlen = listeners.length;\n\n\t// Inform all the listeners that the harness has finished...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf = listeners.shift();\n\t\tf();\n\t}\n}\n\n/**\n* Creates a results stream.\n*\n* @private\n* @param {Options} [options] - stream options\n* @throws {Error} must provide valid stream options\n* @returns {TransformStream} results stream\n*/\nfunction createStream( options ) {\n\tvar stream;\n\tvar bench;\n\tvar opts;\n\tif ( arguments.length ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\t// If we have already created a harness, calling this function simply creates another results stream...\n\tif ( harness.cached ) {\n\t\tbench = harness();\n\t\treturn bench.createStream( opts );\n\t}\n\tstream = new TransformStream( opts );\n\topts.stream = stream;\n\n\t// Create a harness which uses the created output stream:\n\tharness( opts, done );\n\n\treturn stream;\n}\n\n/**\n* Adds a listener for when a harness finishes running all benchmarks.\n*\n* @private\n* @param {Callback} clbk - listener\n* @throws {TypeError} must provide a function\n* @throws {Error} must provide a listener only once\n* @returns {void}\n*/\nfunction onFinish( clbk ) {\n\tvar i;\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', clbk ) );\n\t}\n\t// Allow adding a listener only once...\n\tfor ( i = 0; i < listeners.length; i++ ) {\n\t\tif ( clbk === listeners[ i ] ) {\n\t\t\tthrow new Error( 'invalid argument. Attempted to add duplicate listener.' );\n\t\t}\n\t}\n\tlisteners.push( clbk );\n}\n\n\n// MAIN //\n\n/**\n* Runs a benchmark.\n*\n* @param {string} name - benchmark name\n* @param {Options} [options] - benchmark options\n* @param {boolean} [options.skip=false] - boolean indicating whether to skip a benchmark\n* @param {(PositiveInteger|null)} [options.iterations=null] - number of iterations\n* @param {PositiveInteger} [options.repeats=3] - number of repeats\n* @param {PositiveInteger} [options.timeout=300000] - number of milliseconds before a benchmark automatically fails\n* @param {Function} [benchmark] - function containing benchmark code\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} benchmark argument must a function\n* @returns {Benchmark} benchmark harness\n*\n* @example\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*/\nfunction bench( name, options, benchmark ) {\n\tvar h = harness( done );\n\tif ( arguments.length < 2 ) {\n\t\th( name );\n\t} else if ( arguments.length === 2 ) {\n\t\th( name, options );\n\t} else {\n\t\th( name, options, benchmark );\n\t}\n\treturn bench;\n}\n\n/**\n* Creates a benchmark harness.\n*\n* @name createHarness\n* @memberof bench\n* @type {Function}\n* @param {Options} [options] - harness options\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*/\nsetReadOnly( bench, 'createHarness', createHarness );\n\n/**\n* Creates a results stream.\n*\n* @name createStream\n* @memberof bench\n* @type {Function}\n* @param {Options} [options] - stream options\n* @throws {Error} must provide valid stream options\n* @returns {TransformStream} results stream\n*/\nsetReadOnly( bench, 'createStream', createStream );\n\n/**\n* Adds a listener for when a harness finishes running all benchmarks.\n*\n* @name onFinish\n* @memberof bench\n* @type {Function}\n* @param {Callback} clbk - listener\n* @throws {TypeError} must provide a function\n* @throws {Error} must provide a listener only once\n* @returns {void}\n*/\nsetReadOnly( bench, 'onFinish', onFinish );\n\n\n// EXPORTS //\n\nmodule.exports = bench;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Benchmark harness.\n*\n* @module @stdlib/bench/harness\n*\n* @example\n* var bench = require( '@stdlib/bench/harness' );\n*\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["set_timeout","setTimeout","clear_timeout","clearTimeout","timeout","require$$0","clear","require$$1","run_1","self","id","this","_skip","comment","name","end","_benchmark","_running","fail","once","emit","exit_1","_exited","_ended","ended_1","hasOwnProp","assert_1","ok","opts","result","_count","skip","todo","message","operator","actual","expected","error","Error","trim","replace","EOL","require$$2","REGEXP","RE_COMMENT","comment_1","msg","lines","i","split","length","skip_1","value","_assert","todo_1","fail_1","pass_1","ok_1","not_ok","equal_1","not_equal","deep_equal","not_deep_equal","next_tick","fcn","nextTick","end_1","EventEmitter","defineProperty","setReadOnly","require$$3","tic","require$$4","toc","require$$5","run","require$$6","exit","require$$7","ended","require$$8","assert","require$$9","require$$10","require$$11","require$$12","require$$13","pass","require$$14","require$$15","notOk","require$$16","equal","require$$17","notEqual","require$$18","deepEqual","require$$19","notDeepEqual","require$$20","require$$21","Benchmark","benchmark","hasTicked","hasTocked","time","call","configurable","enumerable","writable","elapsed","secs","rate","out","iterations","prototype","benchmarkClass","RE_EOL","RE_WHITESPACE","encode_assertion","count","actualStack","errorStack","stack","toString","indent","at","encode_result","YAML_INDENT","isString","isPrimitive","encodeAssertion","encodeResult","push_1","b","_benchmarks","push","_stream","write","on","res","total","TransformStream","create_stream","options","stream","arguments","objectMode","onPush","onDone","TAP_HEADER","pipe","onRun","next","onTick","shift","bid","row","type","destroy","clear_1","close","_closed","createStream","Runner","runner","isObject","isBoolean","isNull","isPositiveInteger","format","validate_1","TypeError","repeats","copy","pretest_1","clbk","err","pretest","onResult","onEnd","init_1","onIterations","iter","setReadOnlyAccessor","isFunction","DEFAULTS","validate","init","harness","exitCode","queue","cb","autoclose","initialize","idx","args","onInit","getExitCode","process","bool","can_emit_exit","fromCodePoint","log","str","console","log_1","line","transform","chunk","enc","c","flush","isNodeWritableStreamLike","pick","omit","noop","createHarness","logStream","canEmitExit","proc","exit_harness","pipeline","topts","done","onError","onExit","code","createExitHarness","get_harness","getHarness","cached","listeners","len","f","bench","h","lib"],"mappings":"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"}