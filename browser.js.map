{"version":3,"file":"browser.js","sources":["../node_modules/@stdlib/utils/define-property/lib/define_property.js","../node_modules/@stdlib/utils/define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils/define-property/lib/builtin.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_number.js","../node_modules/@stdlib/string/base/format-interpolate/lib/zero_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_integer.js","../node_modules/@stdlib/string/base/format-interpolate/lib/is_string.js","../node_modules/@stdlib/string/base/format-interpolate/lib/format_double.js","../node_modules/@stdlib/string/base/format-interpolate/lib/space_pad.js","../node_modules/@stdlib/string/base/format-interpolate/lib/main.js","../node_modules/@stdlib/string/base/format-tokenize/lib/main.js","../node_modules/@stdlib/string/format/lib/is_string.js","../node_modules/@stdlib/string/format/lib/main.js","../node_modules/@stdlib/string/base/format-interpolate/lib/index.js","../node_modules/@stdlib/string/format/lib/index.js","../node_modules/@stdlib/utils/define-property/lib/polyfill.js","../node_modules/@stdlib/utils/define-property/lib/index.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-property/lib/index.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/process-nextick-args/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/readable-browser.js","../node_modules/@stdlib/utils/inherit/lib/validate.js","../node_modules/@stdlib/utils/inherit/lib/native.js","../node_modules/@stdlib/utils/inherit/lib/polyfill.js","../node_modules/@stdlib/utils/inherit/lib/inherit.js","../node_modules/@stdlib/utils/inherit/lib/detect.js","../node_modules/@stdlib/utils/inherit/lib/index.js","../node_modules/@stdlib/assert/has-symbol-support/lib/main.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/main.js","../node_modules/@stdlib/assert/has-tostringtag-support/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/tostring.js","../node_modules/@stdlib/utils/native-class/lib/native_class.js","../node_modules/@stdlib/assert/has-own-property/lib/main.js","../node_modules/@stdlib/assert/has-own-property/lib/index.js","../node_modules/@stdlib/utils/native-class/lib/tostringtag.js","../node_modules/@stdlib/utils/native-class/lib/polyfill.js","../node_modules/@stdlib/utils/native-class/lib/index.js","../node_modules/@stdlib/assert/is-array/lib/main.js","../node_modules/@stdlib/assert/is-array/lib/index.js","../node_modules/@stdlib/assert/is-number/lib/primitive.js","../node_modules/@stdlib/number/ctor/lib/index.js","../node_modules/@stdlib/number/ctor/lib/number.js","../node_modules/@stdlib/assert/is-number/lib/try2serialize.js","../node_modules/@stdlib/assert/is-number/lib/tostring.js","../node_modules/@stdlib/assert/is-number/lib/object.js","../node_modules/@stdlib/assert/is-number/lib/main.js","../node_modules/@stdlib/assert/is-number/lib/index.js","../node_modules/@stdlib/constants/float64/pinf/lib/index.js","../node_modules/@stdlib/constants/float64/ninf/lib/index.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/is_integer.js","../node_modules/@stdlib/math/base/special/floor/lib/main.js","../node_modules/@stdlib/math/base/assert/is-integer/lib/index.js","../node_modules/@stdlib/assert/is-integer/lib/integer.js","../node_modules/@stdlib/assert/is-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-integer/lib/object.js","../node_modules/@stdlib/assert/is-integer/lib/main.js","../node_modules/@stdlib/assert/is-integer/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-integer/lib/index.js","../node_modules/@stdlib/assert/tools/array-function/lib/arrayfcn.js","../node_modules/@stdlib/assert/tools/array-function/lib/index.js","../node_modules/@stdlib/assert/is-object-like/lib/main.js","../node_modules/@stdlib/assert/is-object-like/lib/index.js","../node_modules/@stdlib/assert/is-buffer/lib/main.js","../node_modules/@stdlib/assert/is-buffer/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/re.js","../node_modules/@stdlib/assert/is-boolean/lib/primitive.js","../node_modules/@stdlib/assert/is-boolean/lib/try2serialize.js","../node_modules/@stdlib/assert/is-boolean/lib/tostring.js","../node_modules/@stdlib/assert/is-boolean/lib/object.js","../node_modules/@stdlib/assert/is-boolean/lib/main.js","../node_modules/@stdlib/assert/is-boolean/lib/index.js","../node_modules/@stdlib/utils/global/lib/codegen.js","../node_modules/@stdlib/utils/global/lib/self.js","../node_modules/@stdlib/utils/global/lib/window.js","../node_modules/@stdlib/utils/global/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/nodelist.js","../node_modules/@stdlib/utils/global/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/fixtures/typedarray.js","../node_modules/@stdlib/utils/type-of/lib/check.js","../node_modules/@stdlib/regexp/function-name/lib/main.js","../node_modules/@stdlib/regexp/function-name/lib/index.js","../node_modules/@stdlib/regexp/function-name/lib/regexp.js","../node_modules/@stdlib/utils/constructor-name/lib/main.js","../node_modules/@stdlib/utils/type-of/lib/typeof.js","../node_modules/@stdlib/utils/constructor-name/lib/index.js","../node_modules/@stdlib/utils/type-of/lib/polyfill.js","../node_modules/@stdlib/utils/type-of/lib/index.js","../node_modules/@stdlib/assert/is-function/lib/main.js","../node_modules/@stdlib/assert/is-function/lib/index.js","../node_modules/@stdlib/utils/get-prototype-of/lib/native.js","../node_modules/@stdlib/utils/get-prototype-of/lib/proto.js","../node_modules/@stdlib/utils/get-prototype-of/lib/polyfill.js","../node_modules/@stdlib/utils/get-prototype-of/lib/detect.js","../node_modules/@stdlib/utils/get-prototype-of/lib/get_prototype_of.js","../node_modules/@stdlib/utils/get-prototype-of/lib/index.js","../node_modules/@stdlib/assert/is-error/lib/main.js","../node_modules/@stdlib/assert/is-error/lib/index.js","../node_modules/@stdlib/assert/is-string/lib/primitive.js","../node_modules/@stdlib/assert/is-string/lib/try2valueof.js","../node_modules/@stdlib/assert/is-string/lib/valueof.js","../node_modules/@stdlib/assert/is-string/lib/object.js","../node_modules/@stdlib/assert/is-string/lib/main.js","../node_modules/@stdlib/assert/is-string/lib/index.js","../node_modules/@stdlib/regexp/regexp/lib/main.js","../node_modules/@stdlib/regexp/regexp/lib/index.js","../node_modules/@stdlib/regexp/regexp/lib/regexp.js","../node_modules/@stdlib/utils/regexp-from-string/lib/from_string.js","../node_modules/@stdlib/utils/regexp-from-string/lib/index.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/is-nan/lib/primitive.js","../node_modules/@stdlib/math/base/assert/is-nan/lib/index.js","../node_modules/@stdlib/assert/is-nan/lib/object.js","../node_modules/@stdlib/assert/is-nan/lib/main.js","../node_modules/@stdlib/assert/is-nan/lib/index.js","../node_modules/@stdlib/assert/is-collection/lib/main.js","../node_modules/@stdlib/assert/is-collection/lib/index.js","../node_modules/@stdlib/constants/array/max-typed-array-length/lib/index.js","../node_modules/@stdlib/utils/index-of/lib/index_of.js","../node_modules/@stdlib/utils/index-of/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin.js","../node_modules/@stdlib/utils/keys/lib/has_arguments_bug.js","../node_modules/@stdlib/utils/keys/lib/has_builtin.js","../node_modules/@stdlib/assert/is-arguments/lib/main.js","../node_modules/@stdlib/assert/is-arguments/lib/detect.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/has_string_enumerability_bug.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/native.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/main.js","../node_modules/@stdlib/assert/is-enumerable-property/lib/index.js","../node_modules/@stdlib/assert/is-arguments/lib/polyfill.js","../node_modules/@stdlib/assert/is-arguments/lib/index.js","../node_modules/@stdlib/utils/keys/lib/builtin_wrapper.js","../node_modules/@stdlib/utils/noop/lib/noop.js","../node_modules/@stdlib/utils/noop/lib/index.js","../node_modules/@stdlib/utils/keys/lib/has_enumerable_prototype_bug.js","../node_modules/@stdlib/utils/keys/lib/has_non_enumerable_properties_bug.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype.js","../node_modules/@stdlib/utils/keys/lib/has_automation_equality_bug.js","../node_modules/@stdlib/utils/keys/lib/window.js","../node_modules/@stdlib/utils/keys/lib/has_window.js","../node_modules/@stdlib/utils/keys/lib/is_constructor_prototype_wrapper.js","../node_modules/@stdlib/utils/keys/lib/polyfill.js","../node_modules/@stdlib/utils/keys/lib/main.js","../node_modules/@stdlib/utils/keys/lib/index.js","../node_modules/@stdlib/utils/property-names/lib/has_builtin.js","../node_modules/@stdlib/utils/property-names/lib/builtin.js","../node_modules/@stdlib/utils/property-names/lib/polyfill.js","../node_modules/@stdlib/utils/property-names/lib/index.js","../node_modules/@stdlib/utils/property-descriptor/lib/has_builtin.js","../node_modules/@stdlib/utils/property-descriptor/lib/builtin.js","../node_modules/@stdlib/utils/property-descriptor/lib/polyfill.js","../node_modules/@stdlib/utils/property-descriptor/lib/index.js","../node_modules/@stdlib/assert/has-node-buffer-support/lib/main.js","../node_modules/@stdlib/assert/has-node-buffer-support/lib/index.js","../node_modules/@stdlib/buffer/ctor/lib/polyfill.js","../node_modules/@stdlib/buffer/ctor/lib/index.js","../node_modules/@stdlib/buffer/ctor/lib/buffer.js","../node_modules/@stdlib/buffer/from-buffer/lib/has_from.js","../node_modules/@stdlib/buffer/from-buffer/lib/main.js","../node_modules/@stdlib/buffer/from-buffer/lib/polyfill.js","../node_modules/@stdlib/buffer/from-buffer/lib/index.js","../node_modules/@stdlib/assert/is-int8array/lib/main.js","../node_modules/@stdlib/assert/has-int8array-support/lib/int8array.js","../node_modules/@stdlib/assert/has-int8array-support/lib/main.js","../node_modules/@stdlib/constants/int8/min/lib/index.js","../node_modules/@stdlib/array/int8/lib/polyfill.js","../node_modules/@stdlib/array/int8/lib/index.js","../node_modules/@stdlib/array/int8/lib/int8array.js","../node_modules/@stdlib/assert/has-int8array-support/lib/index.js","../node_modules/@stdlib/assert/is-uint8array/lib/main.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/uint8array.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/main.js","../node_modules/@stdlib/array/uint8/lib/polyfill.js","../node_modules/@stdlib/array/uint8/lib/index.js","../node_modules/@stdlib/array/uint8/lib/uint8array.js","../node_modules/@stdlib/assert/has-uint8array-support/lib/index.js","../node_modules/@stdlib/assert/is-uint8clampedarray/lib/main.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/uint8clampedarray.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/main.js","../node_modules/@stdlib/array/uint8c/lib/polyfill.js","../node_modules/@stdlib/array/uint8c/lib/index.js","../node_modules/@stdlib/array/uint8c/lib/uint8clampedarray.js","../node_modules/@stdlib/assert/has-uint8clampedarray-support/lib/index.js","../node_modules/@stdlib/assert/is-int16array/lib/main.js","../node_modules/@stdlib/assert/has-int16array-support/lib/int16array.js","../node_modules/@stdlib/assert/has-int16array-support/lib/main.js","../node_modules/@stdlib/constants/int16/min/lib/index.js","../node_modules/@stdlib/array/int16/lib/polyfill.js","../node_modules/@stdlib/array/int16/lib/index.js","../node_modules/@stdlib/array/int16/lib/int16array.js","../node_modules/@stdlib/assert/has-int16array-support/lib/index.js","../node_modules/@stdlib/assert/is-uint16array/lib/main.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/uint16array.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/main.js","../node_modules/@stdlib/array/uint16/lib/polyfill.js","../node_modules/@stdlib/array/uint16/lib/index.js","../node_modules/@stdlib/array/uint16/lib/uint16array.js","../node_modules/@stdlib/assert/has-uint16array-support/lib/index.js","../node_modules/@stdlib/assert/is-int32array/lib/main.js","../node_modules/@stdlib/assert/has-int32array-support/lib/int32array.js","../node_modules/@stdlib/assert/has-int32array-support/lib/main.js","../node_modules/@stdlib/constants/int32/min/lib/index.js","../node_modules/@stdlib/array/int32/lib/polyfill.js","../node_modules/@stdlib/array/int32/lib/index.js","../node_modules/@stdlib/array/int32/lib/int32array.js","../node_modules/@stdlib/assert/has-int32array-support/lib/index.js","../node_modules/@stdlib/assert/is-uint32array/lib/main.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/uint32array.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/main.js","../node_modules/@stdlib/array/uint32/lib/polyfill.js","../node_modules/@stdlib/array/uint32/lib/index.js","../node_modules/@stdlib/array/uint32/lib/uint32array.js","../node_modules/@stdlib/assert/has-uint32array-support/lib/index.js","../node_modules/@stdlib/assert/is-float32array/lib/main.js","../node_modules/@stdlib/assert/has-float32array-support/lib/float32array.js","../node_modules/@stdlib/assert/has-float32array-support/lib/main.js","../node_modules/@stdlib/array/float32/lib/polyfill.js","../node_modules/@stdlib/array/float32/lib/index.js","../node_modules/@stdlib/array/float32/lib/float32array.js","../node_modules/@stdlib/assert/has-float32array-support/lib/index.js","../node_modules/@stdlib/assert/is-float64array/lib/main.js","../node_modules/@stdlib/assert/has-float64array-support/lib/float64array.js","../node_modules/@stdlib/assert/has-float64array-support/lib/main.js","../node_modules/@stdlib/array/float64/lib/polyfill.js","../node_modules/@stdlib/array/float64/lib/index.js","../node_modules/@stdlib/array/float64/lib/float64array.js","../node_modules/@stdlib/assert/has-float64array-support/lib/index.js","../node_modules/@stdlib/utils/copy/lib/typed_arrays.js","../node_modules/@stdlib/utils/copy/lib/deep_copy.js","../node_modules/@stdlib/utils/copy/lib/copy.js","../node_modules/@stdlib/utils/copy/lib/index.js","../node_modules/@stdlib/assert/is-object/lib/main.js","../node_modules/@stdlib/assert/is-plain-object/lib/main.js","../node_modules/@stdlib/assert/is-plain-object/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-number/lib/primitive.js","../node_modules/@stdlib/assert/is-nonnegative-number/lib/object.js","../node_modules/@stdlib/assert/is-nonnegative-number/lib/main.js","../node_modules/@stdlib/assert/is-nonnegative-number/lib/index.js","../node_modules/@stdlib/streams/node/transform/lib/validate.js","../node_modules/@stdlib/utils/next-tick/lib/main.js","../node_modules/@stdlib/streams/node/transform/lib/destroy.js","../node_modules/@stdlib/utils/next-tick/lib/index.js","../node_modules/@stdlib/streams/node/transform/lib/_transform.js","../node_modules/@stdlib/streams/node/transform/lib/main.js","../node_modules/@stdlib/streams/node/transform/lib/object_mode.js","../node_modules/@stdlib/streams/node/transform/lib/factory.js","../node_modules/@stdlib/streams/node/transform/lib/ctor.js","../node_modules/@stdlib/streams/node/transform/lib/index.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/main.js","../node_modules/@stdlib/utils/define-nonenumerable-read-only-accessor/lib/index.js","../node_modules/@stdlib/time/tic/lib/main.js","../node_modules/@stdlib/time/tic/lib/index.js","../node_modules/@stdlib/assert/is-array-like/lib/main.js","../node_modules/@stdlib/assert/tools/array-like-function/lib/arraylikefcn.js","../node_modules/@stdlib/constants/array/max-array-length/lib/index.js","../node_modules/@stdlib/assert/is-nonnegative-integer-array/lib/index.js","../node_modules/@stdlib/time/toc/lib/toc.js","../node_modules/@stdlib/time/toc/lib/index.js","../harness/lib/benchmark-class/set_timeout.js","../harness/lib/benchmark-class/clear_timeout.js","../harness/lib/benchmark-class/run.js","../harness/lib/benchmark-class/exit.js","../harness/lib/benchmark-class/ended.js","../harness/lib/benchmark-class/assert.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/main.js","../node_modules/@stdlib/utils/escape-regexp-string/lib/index.js","../node_modules/@stdlib/assert/is-regexp/lib/try2exec.js","../node_modules/@stdlib/assert/is-regexp/lib/exec.js","../node_modules/@stdlib/assert/is-regexp/lib/main.js","../node_modules/@stdlib/string/replace/lib/replace.js","../node_modules/@stdlib/string/replace/lib/index.js","../node_modules/@stdlib/string/trim/lib/trim.js","../node_modules/@stdlib/string/trim/lib/index.js","../node_modules/@stdlib/regexp/eol/lib/validate.js","../node_modules/@stdlib/regexp/eol/lib/main.js","../node_modules/@stdlib/regexp/eol/lib/index.js","../node_modules/@stdlib/regexp/eol/lib/regexp_capture.js","../node_modules/@stdlib/regexp/eol/lib/regexp.js","../harness/lib/benchmark-class/comment.js","../harness/lib/benchmark-class/skip.js","../harness/lib/benchmark-class/todo.js","../harness/lib/benchmark-class/fail.js","../harness/lib/benchmark-class/pass.js","../harness/lib/benchmark-class/ok.js","../harness/lib/benchmark-class/not_ok.js","../harness/lib/benchmark-class/equal.js","../harness/lib/benchmark-class/not_equal.js","../harness/lib/benchmark-class/deep_equal.js","../harness/lib/benchmark-class/not_deep_equal.js","../harness/lib/utils/next_tick.js","../harness/lib/benchmark-class/end.js","../harness/lib/benchmark-class/index.js","../harness/lib/runner/encode_assertion.js","../harness/lib/runner/encode_result.js","../harness/lib/runner/push.js","../harness/lib/runner/create_stream.js","../harness/lib/runner/run.js","../harness/lib/runner/clear.js","../harness/lib/runner/close.js","../harness/lib/runner/exit.js","../harness/lib/runner/index.js","../node_modules/@stdlib/assert/is-null/lib/main.js","../node_modules/@stdlib/assert/is-null/lib/index.js","../node_modules/@stdlib/assert/is-positive-integer/lib/primitive.js","../node_modules/@stdlib/assert/is-positive-integer/lib/object.js","../node_modules/@stdlib/assert/is-positive-integer/lib/main.js","../node_modules/@stdlib/assert/is-positive-integer/lib/index.js","../harness/lib/harness/validate.js","../harness/lib/harness/pretest.js","../harness/lib/harness/iterations.js","../harness/lib/harness/init.js","../harness/lib/harness/index.js","../harness/lib/utils/process.js","../harness/lib/utils/can_exit.js","../node_modules/@stdlib/assert/is-node-stream-like/lib/main.js","../node_modules/@stdlib/assert/is-node-writable-stream-like/lib/main.js","../node_modules/@stdlib/assert/is-node-writable-stream-like/lib/index.js","../node_modules/@stdlib/assert/is-string-array/lib/index.js","../node_modules/@stdlib/utils/pick/lib/pick.js","../node_modules/@stdlib/utils/pick/lib/index.js","../node_modules/@stdlib/utils/omit/lib/omit.js","../node_modules/@stdlib/utils/omit/lib/index.js","../node_modules/@stdlib/string/from-code-point/lib/main.js","../node_modules/@stdlib/constants/unicode/max/lib/index.js","../node_modules/@stdlib/constants/unicode/max-bmp/lib/index.js","../harness/lib/log/log.js","../harness/lib/log/index.js","../node_modules/@stdlib/string/from-code-point/lib/index.js","../harness/lib/exit_harness.js","../harness/lib/get_harness.js","../harness/lib/bench.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './define_property.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );  // NOTE: we inline the `isNumber.isPrimitive` function from `@stdlib/assert/is-number` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Tests if a string starts with a minus sign (`-`).\n*\n* @private\n* @param {string} str - input string\n* @returns {boolean} boolean indicating if a string starts with a minus sign (`-`)\n*/\nfunction startsWithMinus( str ) {\n\treturn str[ 0 ] === '-';\n}\n\n/**\n* Returns a string of `n` zeros.\n*\n* @private\n* @param {number} n - number of zeros\n* @returns {string} string of zeros\n*/\nfunction zeros( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += '0';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with zeros to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction zeroPad( str, width, right ) {\n\tvar negative = false;\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tif ( startsWithMinus( str ) ) {\n\t\tnegative = true;\n\t\tstr = str.substr( 1 );\n\t}\n\tstr = ( right ) ?\n\t\tstr + zeros( pad ) :\n\t\tzeros( pad ) + str;\n\tif ( negative ) {\n\t\tstr = '-' + str;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = zeroPad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as an integer.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid integer\n* @returns {string} formatted token argument\n*/\nfunction formatInteger( token ) {\n\tvar base;\n\tvar out;\n\tvar i;\n\n\tswitch ( token.specifier ) {\n\tcase 'b':\n\t\t// Case: %b (binary)\n\t\tbase = 2;\n\t\tbreak;\n\tcase 'o':\n\t\t// Case: %o (octal)\n\t\tbase = 8;\n\t\tbreak;\n\tcase 'x':\n\tcase 'X':\n\t\t// Case: %x, %X (hexadecimal)\n\t\tbase = 16;\n\t\tbreak;\n\tcase 'd':\n\tcase 'i':\n\tcase 'u':\n\tdefault:\n\t\t// Case: %d, %i, %u (decimal)\n\t\tbase = 10;\n\t\tbreak;\n\t}\n\tout = token.arg;\n\ti = parseInt( out, 10 );\n\tif ( !isFinite( i ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( out ) ) {\n\t\t\tthrow new Error( 'invalid integer. Value: ' + out );\n\t\t}\n\t\ti = 0;\n\t}\n\tif ( i < 0 && ( token.specifier === 'u' || base !== 10 ) ) {\n\t\ti = 0xffffffff + i + 1;\n\t}\n\tif ( i < 0 ) {\n\t\tout = ( -i ).toString( base );\n\t\tif ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tout = '-' + out;\n\t} else {\n\t\tout = i.toString( base );\n\t\tif ( !i && !token.precision ) {\n\t\t\tout = '';\n\t\t} else if ( token.precision ) {\n\t\t\tout = zeroPad( out, token.precision, token.padRight );\n\t\t}\n\t\tif ( token.sign ) {\n\t\t\tout = token.sign + out;\n\t\t}\n\t}\n\tif ( base === 16 ) {\n\t\tif ( token.alternate ) {\n\t\t\tout = '0x' + out;\n\t\t}\n\t\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\t\tuppercase.call( out ) :\n\t\t\tlowercase.call( out );\n\t}\n\tif ( base === 8 ) {\n\t\tif ( token.alternate && out.charAt( 0 ) !== '0' ) {\n\t\t\tout = '0' + out;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './is_number.js' );\n\n// NOTE: for the following, we explicitly avoid using stdlib packages in this particular package in order to avoid circular dependencies.\nvar abs = Math.abs; // eslint-disable-line stdlib/no-builtin-math\nvar lowercase = String.prototype.toLowerCase;\nvar uppercase = String.prototype.toUpperCase;\nvar replace = String.prototype.replace;\n\n\n// VARIABLES //\n\nvar RE_EXP_POS_DIGITS = /e\\+(\\d)$/;\nvar RE_EXP_NEG_DIGITS = /e-(\\d)$/;\nvar RE_ONLY_DIGITS = /^(\\d+)$/;\nvar RE_DIGITS_BEFORE_EXP = /^(\\d+)e/;\nvar RE_TRAILING_PERIOD_ZERO = /\\.0$/;\nvar RE_PERIOD_ZERO_EXP = /\\.0*e/;\nvar RE_ZERO_BEFORE_EXP = /(\\..*[^0])0*e/;\n\n\n// MAIN //\n\n/**\n* Formats a token object argument as a floating-point number.\n*\n* @private\n* @param {Object} token - token object\n* @throws {Error} must provide a valid floating-point number\n* @returns {string} formatted token argument\n*/\nfunction formatDouble( token ) {\n\tvar digits;\n\tvar out;\n\tvar f = parseFloat( token.arg );\n\tif ( !isFinite( f ) ) { // NOTE: We use the global `isFinite` function here instead of `@stdlib/math/base/assert/is-finite` in order to avoid circular dependencies.\n\t\tif ( !isNumber( token.arg ) ) {\n\t\t\tthrow new Error( 'invalid floating-point number. Value: ' + out );\n\t\t}\n\t\t// Case: NaN, Infinity, or -Infinity\n\t\tf = token.arg;\n\t}\n\tswitch ( token.specifier ) {\n\tcase 'e':\n\tcase 'E':\n\t\tout = f.toExponential( token.precision );\n\t\tbreak;\n\tcase 'f':\n\tcase 'F':\n\t\tout = f.toFixed( token.precision );\n\t\tbreak;\n\tcase 'g':\n\tcase 'G':\n\t\tif ( abs( f ) < 0.0001 ) {\n\t\t\tdigits = token.precision;\n\t\t\tif ( digits > 0 ) {\n\t\t\t\tdigits -= 1;\n\t\t\t}\n\t\t\tout = f.toExponential( digits );\n\t\t} else {\n\t\t\tout = f.toPrecision( token.precision );\n\t\t}\n\t\tif ( !token.alternate ) {\n\t\t\tout = replace.call( out, RE_ZERO_BEFORE_EXP, '$1e' );\n\t\t\tout = replace.call( out, RE_PERIOD_ZERO_EXP, 'e');\n\t\t\tout = replace.call( out, RE_TRAILING_PERIOD_ZERO, '' );\n\t\t}\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( 'invalid double notation. Value: ' + token.specifier );\n\t}\n\tout = replace.call( out, RE_EXP_POS_DIGITS, 'e+0$1' );\n\tout = replace.call( out, RE_EXP_NEG_DIGITS, 'e-0$1' );\n\tif ( token.alternate ) {\n\t\tout = replace.call( out, RE_ONLY_DIGITS, '$1.' );\n\t\tout = replace.call( out, RE_DIGITS_BEFORE_EXP, '$1.e' );\n\t}\n\tif ( f >= 0 && token.sign ) {\n\t\tout = token.sign + out;\n\t}\n\tout = ( token.specifier === uppercase.call( token.specifier ) ) ?\n\t\tuppercase.call( out ) :\n\t\tlowercase.call( out );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatDouble;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Returns `n` spaces.\n*\n* @private\n* @param {number} n - number of spaces\n* @returns {string} string of spaces\n*/\nfunction spaces( n ) {\n\tvar out = '';\n\tvar i;\n\tfor ( i = 0; i < n; i++ ) {\n\t\tout += ' ';\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Pads a token with spaces to the specified width.\n*\n* @private\n* @param {string} str - token argument\n* @param {number} width - token width\n* @param {boolean} [right=false] - boolean indicating whether to pad to the right\n* @returns {string} padded token argument\n*/\nfunction spacePad( str, width, right ) {\n\tvar pad = width - str.length;\n\tif ( pad < 0 ) {\n\t\treturn str;\n\t}\n\tstr = ( right ) ?\n\t\tstr + spaces( pad ) :\n\t\tspaces( pad ) + str;\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = spacePad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar formatInteger = require( './format_integer.js' );\nvar isString = require( './is_string.js' );\nvar formatDouble = require( './format_double.js' );\nvar spacePad = require( './space_pad.js' );\nvar zeroPad = require( './zero_pad.js' );\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\nvar isnan = isNaN; // NOTE: We use the global `isNaN` function here instead of `@stdlib/math/base/assert/is-nan` to avoid circular dependencies.\nvar isArray = Array.isArray; // NOTE: We use the global `Array.isArray` function here instead of `@stdlib/assert/is-array` to avoid circular dependencies.\n\n\n// FUNCTIONS //\n\n/**\n* Initializes token object with properties of supplied format identifier object or default values if not present.\n*\n* @private\n* @param {Object} token - format identifier object\n* @returns {Object} token object\n*/\nfunction initialize( token ) {\n\tvar out = {};\n\tout.specifier = token.specifier;\n\tout.precision = ( token.precision === void 0 ) ? 1 : token.precision;\n\tout.width = token.width;\n\tout.flags = token.flags || '';\n\tout.mapping = token.mapping;\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Generates string from a token array by interpolating values.\n*\n* @param {Array} tokens - string parts and format identifier objects\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be an array\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var tokens = [ 'beep ', { 'specifier': 's' } ];\n* var out = formatInterpolate( tokens, 'boop' );\n* // returns 'beep boop'\n*/\nfunction formatInterpolate( tokens ) {\n\tvar hasPeriod;\n\tvar flags;\n\tvar token;\n\tvar flag;\n\tvar num;\n\tvar out;\n\tvar pos;\n\tvar i;\n\tvar j;\n\n\tif ( !isArray( tokens ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array. Value: `' + tokens + '`.' );\n\t}\n\tout = '';\n\tpos = 1;\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isString( token ) ) {\n\t\t\tout += token;\n\t\t} else {\n\t\t\thasPeriod = token.precision !== void 0;\n\t\t\ttoken = initialize( token );\n\t\t\tif ( !token.specifier ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Token is missing `specifier` property. Index: `'+ i +'`. Value: `' + token + '`.' );\n\t\t\t}\n\t\t\tif ( token.mapping ) {\n\t\t\t\tpos = token.mapping;\n\t\t\t}\n\t\t\tflags = token.flags;\n\t\t\tfor ( j = 0; j < flags.length; j++ ) {\n\t\t\t\tflag = flags.charAt( j );\n\t\t\t\tswitch ( flag ) {\n\t\t\t\tcase ' ':\n\t\t\t\t\ttoken.sign = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '+':\n\t\t\t\t\ttoken.sign = '+';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '0':\n\t\t\t\t\ttoken.padZeros = flags.indexOf( '-' ) < 0; // NOTE: We use built-in `Array.prototype.indexOf` here instead of `@stdlib/assert/contains` in order to avoid circular dependencies.\n\t\t\t\t\tbreak;\n\t\t\t\tcase '#':\n\t\t\t\t\ttoken.alternate = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'invalid flag: ' + flag );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( token.width === '*' ) {\n\t\t\t\ttoken.width = parseInt( arguments[ pos ], 10 );\n\t\t\t\tpos += 1;\n\t\t\t\tif ( isnan( token.width ) ) {\n\t\t\t\t\tthrow new TypeError( 'the argument for * width at position ' + pos + ' is not a number. Value: `' + token.width + '`.' );\n\t\t\t\t}\n\t\t\t\tif ( token.width < 0 ) {\n\t\t\t\t\ttoken.padRight = true;\n\t\t\t\t\ttoken.width = -token.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasPeriod ) {\n\t\t\t\tif ( token.precision === '*' ) {\n\t\t\t\t\ttoken.precision = parseInt( arguments[ pos ], 10 );\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tif ( isnan( token.precision ) ) {\n\t\t\t\t\t\tthrow new TypeError( 'the argument for * precision at position ' + pos + ' is not a number. Value: `' + token.precision + '`.' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( token.precision < 0 ) {\n\t\t\t\t\t\ttoken.precision = 1;\n\t\t\t\t\t\thasPeriod = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoken.arg = arguments[ pos ];\n\t\t\tswitch ( token.specifier ) {\n\t\t\tcase 'b':\n\t\t\tcase 'o':\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\t// Case: %b (binary), %o (octal), %x, %X (hexadecimal), %d, %i (decimal), %u (unsigned decimal)\n\t\t\t\tif ( hasPeriod ) {\n\t\t\t\t\ttoken.padZeros = false;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatInteger( token );\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\t// Case: %s (string)\n\t\t\t\ttoken.maxWidth = ( hasPeriod ) ? token.precision : -1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\t// Case: %c (character)\n\t\t\t\tif ( !isnan( token.arg ) ) {\n\t\t\t\t\tnum = parseInt( token.arg, 10 );\n\t\t\t\t\tif ( num < 0 || num > 127 ) {\n\t\t\t\t\t\tthrow new Error( 'invalid character code. Value: ' + token.arg );\n\t\t\t\t\t}\n\t\t\t\t\ttoken.arg = ( isnan( num ) ) ?\n\t\t\t\t\t\tString( token.arg ) :\n\t\t\t\t\t\tfromCharCode( num );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'E':\n\t\t\tcase 'f':\n\t\t\tcase 'F':\n\t\t\tcase 'g':\n\t\t\tcase 'G':\n\t\t\t\t// Case: %e, %E (scientific notation), %f, %F (decimal floating point), %g, %G (uses the shorter of %e/E or %f/F)\n\t\t\t\tif ( !hasPeriod ) {\n\t\t\t\t\ttoken.precision = 6;\n\t\t\t\t}\n\t\t\t\ttoken.arg = formatDouble( token );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'invalid specifier: ' + token.specifier );\n\t\t\t}\n\t\t\t// Fit argument into field width...\n\t\t\tif ( token.maxWidth >= 0 && token.arg.length > token.maxWidth ) {\n\t\t\t\ttoken.arg = token.arg.substring( 0, token.maxWidth );\n\t\t\t}\n\t\t\tif ( token.padZeros ) {\n\t\t\t\ttoken.arg = zeroPad( token.arg, token.width || token.precision, token.padRight ); // eslint-disable-line max-len\n\t\t\t} else if ( token.width ) {\n\t\t\t\ttoken.arg = spacePad( token.arg, token.width, token.padRight );\n\t\t\t}\n\t\t\tout += token.arg || '';\n\t\t\tpos += 1;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar RE = /%(?:([1-9]\\d*)\\$)?([0 +\\-#]*)(\\*|\\d+)?(?:(\\.)(\\*|\\d+)?)?[hlL]?([%A-Za-z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Parses a delimiter.\n*\n* @private\n* @param {Array} match - regular expression match\n* @returns {Object} delimiter token object\n*/\nfunction parse( match ) {\n\tvar token = {\n\t\t'mapping': ( match[ 1 ] ) ? parseInt( match[ 1 ], 10 ) : void 0,\n\t\t'flags': match[ 2 ],\n\t\t'width': match[ 3 ],\n\t\t'precision': match[ 5 ],\n\t\t'specifier': match[ 6 ]\n\t};\n\tif ( match[ 4 ] === '.' && match[ 5 ] === void 0 ) {\n\t\ttoken.precision = '1';\n\t}\n\treturn token;\n}\n\n\n// MAIN //\n\n/**\n* Tokenizes a string into an array of string parts and format identifier objects.\n*\n* @param {string} str - input string\n* @returns {Array} tokens\n*\n* @example\n* var tokens = formatTokenize( 'Hello %s!' );\n* // returns [ 'Hello ', {...}, '!' ]\n*/\nfunction formatTokenize( str ) {\n\tvar content;\n\tvar tokens;\n\tvar match;\n\tvar prev;\n\n\ttokens = [];\n\tprev = 0;\n\tmatch = RE.exec( str );\n\twhile ( match ) {\n\t\tcontent = str.slice( prev, RE.lastIndex - match[ 0 ].length );\n\t\tif ( content.length ) {\n\t\t\ttokens.push( content );\n\t\t}\n\t\ttokens.push( parse( match ) );\n\t\tprev = RE.lastIndex;\n\t\tmatch = RE.exec( str );\n\t}\n\tcontent = str.slice( prev );\n\tif ( content.length ) {\n\t\ttokens.push( content );\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = formatTokenize;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' ); // NOTE: we inline the `isString.isPrimitive` function from `@stdlib/assert/is-string` in order to avoid circular dependencies.\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar interpolate = require( './../../base/format-interpolate' );\nvar tokenize = require( './../../base/format-tokenize' );\nvar isString = require( './is_string.js' );\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar tokens;\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\ttokens = tokenize( str );\n\targs = new Array( arguments.length );\n\targs[ 0 ] = tokens;\n\tfor ( i = 1; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate string from a token array by interpolating values.\n*\n* @module @stdlib/string/base/format-interpolate\n*\n* @example\n* var formatInterpolate = require( '@stdlib/string/base/format-interpolate' );\n*\n* var tokens = ['Hello ', { 'specifier': 's' }, '!' ];\n* var out = formatInterpolate( tokens, 'World' );\n* // returns 'Hello World!'\n*/\n\n// MODULES //\n\nvar formatInterpolate = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = formatInterpolate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Insert supplied variable values into a format string.\n*\n* @module @stdlib/string/format\n*\n* @example\n* var format = require( '@stdlib/string/format' );\n*\n* var out = format( '%s %s!', 'Hello', 'World' );\n* // returns 'Hello World!'\n*\n* out = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\n\n// MODULES //\n\nvar format = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = format;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Property descriptor must be an object. Value: `%s`.', descriptor ) );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils/define-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( './has_define_property_support.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only property.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-property\n*\n* @example\n* var setNonEnumerableReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setNonEnumerableReadOnly = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests that a value is a valid constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var ctor = function ctor() {};\n*\n* var err = validate( ctor );\n* // returns null\n*\n* err = validate( null );\n* // returns <TypeError>\n*/\nfunction validate( value ) {\n\tvar type = typeof value;\n\tif (\n\t\tvalue === null ||\n\t\t(type !== 'object' && type !== 'function')\n\t) {\n\t\treturn new TypeError( format( 'invalid argument. A provided constructor must be either an object (except null) or a function. Value: `%s`.', value ) );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = Object.create;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Ctor() {\n\t// Empty...\n}\n\n\n// MAIN //\n\n/**\n* An `Object.create` shim for older JavaScript engines.\n*\n* @private\n* @param {Object} proto - prototype\n* @returns {Object} created object\n*\n* @example\n* var obj = createObject( Object.prototype );\n* // returns {}\n*/\nfunction createObject( proto ) {\n\tCtor.prototype = proto;\n\treturn new Ctor();\n}\n\n\n// EXPORTS //\n\nmodule.exports = createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar createObject = require( './detect.js' );\n\n\n// MAIN //\n\n/**\n* Implements prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor.\n*\n* ## Notes\n*\n* -   This implementation is not designed to work with ES2015/ES6 classes. For ES2015/ES6 classes, use `class` with `extends`.\n* -   For reference, see [node#3455](https://github.com/nodejs/node/pull/3455), [node#4179](https://github.com/nodejs/node/issues/4179), [node#3452](https://github.com/nodejs/node/issues/3452), and [node commit](https://github.com/nodejs/node/commit/29da8cf8d7ab8f66b9091ab22664067d4468461e#diff-3deb3f32958bb937ae05c6f3e4abbdf5).\n*\n*\n* @param {(Object|Function)} ctor - constructor which will inherit\n* @param {(Object|Function)} superCtor - super (parent) constructor\n* @throws {TypeError} first argument must be either an object or a function which can inherit\n* @throws {TypeError} second argument must be either an object or a function from which a constructor can inherit\n* @throws {TypeError} second argument must have an inheritable prototype\n* @returns {(Object|Function)} child constructor\n*\n* @example\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.beep = function beep() {\n*     return 'boop';\n* };\n*\n* function Bar() {\n*     Foo.call( this );\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n* var v = bar.beep();\n* // returns 'boop'\n*/\nfunction inherit( ctor, superCtor ) {\n\tvar err = validate( ctor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\terr = validate( superCtor );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( typeof superCtor.prototype === 'undefined' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must have a prototype from which another object can inherit. Value: `%s`.', superCtor.prototype ) );\n\t}\n\t// Create a prototype which inherits from the parent prototype:\n\tctor.prototype = createObject( superCtor.prototype );\n\n\t// Set the constructor to refer to the child constructor:\n\tdefineProperty( ctor.prototype, 'constructor', {\n\t\t'configurable': true,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': ctor\n\t});\n\n\treturn ctor;\n}\n\n\n// EXPORTS //\n\nmodule.exports = inherit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar builtin = require( './native.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar createObject;\nif ( typeof builtin === 'function' ) {\n\tcreateObject = builtin;\n} else {\n\tcreateObject = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = createObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Implement prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor.\n*\n* @module @stdlib/utils/inherit\n*\n* @example\n* var inherit = require( '@stdlib/utils/inherit' );\n*\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.beep = function beep() {\n*     return 'boop';\n* };\n*\n* function Bar() {\n*     Foo.call( this );\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n* var v = bar.beep();\n* // returns 'boop'\n*/\n\n// MODULES //\n\nvar inherit = require( './inherit.js' );\n\n\n// EXPORTS //\n\nmodule.exports = inherit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasSymbols = require( './../../has-symbol-support' );\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `toStringTag` support.\n*\n* @module @stdlib/assert/has-tostringtag-support\n*\n* @example\n* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );\n*\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasToStringTagSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStr = Object.prototype.toString;\n\n\n// EXPORTS //\n\nmodule.exports = toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\treturn toStr.call( v );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property.\n*\n* @module @stdlib/assert/has-own-property\n*\n* @example\n* var hasOwnProp = require( '@stdlib/assert/has-own-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasOwnProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasOwnProp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar toStrTag = ( typeof Symbol === 'function' ) ? Symbol.toStringTag : '';\n\n\n// EXPORTS //\n\nmodule.exports = toStrTag;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar toStringTag = require( './tostringtag.js' );\nvar toStr = require( './tostring.js' );\n\n\n// MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\nfunction nativeClass( v ) {\n\tvar isOwn;\n\tvar tag;\n\tvar out;\n\n\tif ( v === null || v === void 0 ) {\n\t\treturn toStr.call( v );\n\t}\n\ttag = v[ toStringTag ];\n\tisOwn = hasOwnProp( v, toStringTag );\n\n\t// Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\ttry {\n\t\tv[ toStringTag ] = void 0;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn toStr.call( v );\n\t}\n\tout = toStr.call( v );\n\n\tif ( isOwn ) {\n\t\tv[ toStringTag ] = tag;\n\t} else {\n\t\tdelete v[ toStringTag ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils/native-class\n*\n* @example\n* var nativeClass = require( '@stdlib/utils/native-class' );\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n// MODULES //\n\nvar hasToStringTag = require( '@stdlib/assert/has-tostringtag-support' );\nvar builtin = require( './native_class.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar nativeClass;\nif ( hasToStringTag() ) {\n\tnativeClass = polyfill;\n} else {\n\tnativeClass = builtin;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nmodule.exports = f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array.\n*\n* @module @stdlib/assert/is-array\n*\n* @example\n* var isArray = require( '@stdlib/assert/is-array' );\n*\n* var bool = isArray( [] );\n* // returns true\n*\n* bool = isArray( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Constructor which returns a `Number` object.\n*\n* @module @stdlib/number/ctor\n*\n* @example\n* var Number = require( '@stdlib/number/ctor' );\n*\n* var v = new Number( 10.0 );\n* // returns <Number>\n*/\n\n// MODULES //\n\nvar Number = require( './number.js' );\n\n\n// EXPORTS //\n\nmodule.exports = Number;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = Number; // eslint-disable-line stdlib/require-globals\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar Number = require( '@stdlib/number/ctor' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' );\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isObject;\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants/float64/pinf\n* @type {number}\n*\n* @example\n* var FLOAT64_PINF = require( '@stdlib/constants/float64/pinf' );\n* // returns Infinity\n*/\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_PINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/float64/ninf\n* @type {number}\n*\n* @example\n* var FLOAT64_NINF = require( '@stdlib/constants/float64/ninf' );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT64_NINF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( './../../../../base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is an integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is an integer\n*\n* @example\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( 3.14 );\n* // returns false\n*/\nfunction isInteger( x ) {\n\treturn (floor(x) === x);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a double-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floor( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floor( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floor( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floor( NaN );\n* // returns NaN\n*/\nvar floor = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\n\nmodule.exports = floor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is an integer.\n*\n* @module @stdlib/math/base/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/math/base/assert/is-integer' );\n*\n* var bool = isInteger( 1.0 );\n* // returns true\n*\n* bool = isInteger( 3.14 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInteger = require( './is_integer.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar isInt = require( '@stdlib/math/base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/assert/is-integer' );\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isObject;\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isObject;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../../is-array' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which tests if every element in an array passes a test condition.\n*\n* @module @stdlib/assert/tools/array-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arrayfcn = require( '@stdlib/assert/tools/array-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n// MODULES //\n\nvar arrayfcn = require( './arrayfcn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' );\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-function' );\nvar isObjectLike = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( isObjectLike, 'isObjectLikeArray', arrayfun( isObjectLike ) );\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( './../../is-object-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Buffer instance.\n*\n* @module @stdlib/assert/is-buffer\n*\n* @example\n* var isBuffer = require( '@stdlib/assert/is-buffer' );\n*\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* v = isBuffer( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBuffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar RE = /./;\n\n\n// EXPORTS //\n\nmodule.exports = RE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* var isBoolean = require( '@stdlib/assert/is-boolean' );\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* // Use interface to check for boolean primitives...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* // Use interface to check for boolean objects...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isBoolean = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isBoolean, 'isPrimitive', isPrimitive );\nsetReadOnly( isBoolean, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the global object using code generation.\n*\n* @private\n* @returns {Object} global object\n*/\nfunction getGlobal() {\n\treturn new Function( 'return this;' )(); // eslint-disable-line no-new-func\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof self === 'object' ) ? self : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar obj = ( typeof window === 'object' ) ? window : null;\n\n\n// EXPORTS //\n\nmodule.exports = obj;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar getThis = require( './codegen.js' );\nvar Self = require( './self.js' );\nvar Win = require( './window.js' );\nvar Global = require( './global.js' );\n\n\n// MAIN //\n\n/**\n* Returns the global object.\n*\n* ## Notes\n*\n* -   Using code generation is the **most** reliable way to resolve the global object; however, doing so is likely to violate content security policies (CSPs) in, e.g., Chrome Apps and elsewhere.\n*\n* @param {boolean} [codegen=false] - boolean indicating whether to use code generation to resolve the global object\n* @throws {TypeError} must provide a boolean\n* @throws {Error} unable to resolve global object\n* @returns {Object} global object\n*\n* @example\n* var g = getGlobal();\n* // returns {...}\n*/\nfunction getGlobal( codegen ) {\n\tif ( arguments.length ) {\n\t\tif ( !isBoolean( codegen ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a boolean. Value: `%s`.', codegen ) );\n\t\t}\n\t\tif ( codegen ) {\n\t\t\treturn getThis();\n\t\t}\n\t\t// Fall through...\n\t}\n\t// Case: browsers and web workers\n\tif ( Self ) {\n\t\treturn Self;\n\t}\n\t// Case: browsers\n\tif ( Win ) {\n\t\treturn Win;\n\t}\n\t// Case: Node.js\n\tif ( Global ) {\n\t\treturn Global;\n\t}\n\t// Case: unknown\n\tthrow new Error( 'unexpected error. Unable to resolve global object.' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( './../../../global' );\n\n\n// MAIN //\n\nvar root = getGlobal();\nvar nodeList = root.document && root.document.childNodes;\n\n\n// EXPORTS //\n\nmodule.exports = nodeList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the global object.\n*\n* @module @stdlib/utils/global\n*\n* @example\n* var getGlobal = require( '@stdlib/utils/global' );\n*\n* var g = getGlobal();\n* // returns {...}\n*/\n\n// MODULES //\n\nvar getGlobal = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getGlobal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar typedarray = Int8Array; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = typedarray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar RE = require( './fixtures/re.js' );\nvar nodeList = require( './fixtures/nodelist.js' );\nvar typedarray = require( './fixtures/typedarray.js' );\n\n\n// MAIN //\n\n/**\n* Checks whether a polyfill is needed when using the `typeof` operator.\n*\n* @private\n* @returns {boolean} boolean indicating whether a polyfill is needed\n*/\nfunction check() {\n\tif (\n\t\t// Chrome 1-12 returns 'function' for regular expression instances (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof):\n\t\ttypeof RE === 'function' ||\n\n\t\t// Safari 8 returns 'object' for typed array and weak map constructors (underscore #1929):\n\t\ttypeof typedarray === 'object' ||\n\n\t\t// PhantomJS 1.9 returns 'function' for `NodeList` instances (underscore #2236):\n\t\ttypeof nodeList === 'function'\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* var reFunctionName = require( '@stdlib/regexp/function-name' );\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reFunctionName = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reFunctionName, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFunctionName = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( './../../native-class' );\nvar RE = require( '@stdlib/regexp/function-name' ).REGEXP;\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( './../../constructor-name' );\n\n\n// NOTES //\n\n/*\n* Built-in `typeof` operator behavior:\n*\n* ```text\n* typeof null => 'object'\n* typeof undefined => 'undefined'\n* typeof 'a' => 'string'\n* typeof 5 => 'number'\n* typeof NaN => 'number'\n* typeof true => 'boolean'\n* typeof false => 'boolean'\n* typeof {} => 'object'\n* typeof [] => 'object'\n* typeof function foo(){} => 'function'\n* typeof function* foo(){} => 'object'\n* typeof Symbol() => 'symbol'\n* ```\n*\n*/\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\tvar type;\n\n\t// Address `typeof null` => `object` (see http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null):\n\tif ( v === null ) {\n\t\treturn 'null';\n\t}\n\ttype = typeof v;\n\n\t// If the `typeof` operator returned something other than `object`, we are done. Otherwise, we need to check for an internal class name or search for a constructor.\n\tif ( type === 'object' ) {\n\t\treturn ctorName( v ).toLowerCase();\n\t}\n\treturn type;\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the name of a value's constructor.\n*\n* @module @stdlib/utils/constructor-name\n*\n* @example\n* var constructorName = require( '@stdlib/utils/constructor-name' );\n*\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* v = constructorName( {} );\n* // returns 'Object'\n*\n* v = constructorName( true );\n* // returns 'Boolean'\n*/\n\n// MODULES //\n\nvar constructorName = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = constructorName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( './../../constructor-name' );\n\n\n// MAIN //\n\n/**\n* Determines a value's type.\n*\n* @param {*} v - input value\n* @returns {string} string indicating the value's type\n*/\nfunction typeOf( v ) {\n\treturn ctorName( v ).toLowerCase();\n}\n\n\n// EXPORTS //\n\nmodule.exports = typeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine a value's type.\n*\n* @module @stdlib/utils/type-of\n*\n* @example\n* var typeOf = require( '@stdlib/utils/type-of' );\n*\n* var str = typeOf( 'a' );\n* // returns 'string'\n*\n* str = typeOf( 5 );\n* // returns 'number'\n*/\n\n// MODULES //\n\nvar usePolyfill = require( './check.js' );\nvar typeOf = require( './typeof.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main = ( usePolyfill() ) ? polyfill : typeOf;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar typeOf = require( '@stdlib/utils/type-of' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a function.\n*\n* @module @stdlib/assert/is-function\n*\n* @example\n* var isFunction = require( '@stdlib/assert/is-function' );\n*\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\n\n// MODULES //\n\nvar isFunction = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar getProto = Object.getPrototypeOf;\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the value of the `__proto__` property.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {*} value of `__proto__` property\n*/\nfunction getProto( obj ) {\n\t// eslint-disable-next-line no-proto\n\treturn obj.__proto__;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( './../../native-class' );\nvar getProto = require( './proto.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @private\n* @param {Object} obj - input object\n* @returns {(Object|null)} prototype\n*/\nfunction getPrototypeOf( obj ) {\n\tvar proto = getProto( obj );\n\tif ( proto || proto === null ) {\n\t\treturn proto;\n\t}\n\tif ( nativeClass( obj.constructor ) === '[object Function]' ) {\n\t\t// May break if the constructor has been tampered with...\n\t\treturn obj.constructor.prototype;\n\t}\n\tif ( obj instanceof Object ) {\n\t\treturn Object.prototype;\n\t}\n\t// Return `null` for objects created via `Object.create( null )`. Also return `null` for cross-realm objects on browsers that lack `__proto__` support, such as IE < 11.\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar builtin = require( './native.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar getProto;\nif ( isFunction( Object.getPrototypeOf ) ) {\n\tgetProto = builtin;\n} else {\n\tgetProto = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getProto;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getProto = require( './detect.js' );\n\n\n// MAIN //\n\n/**\n* Returns the prototype of a provided object.\n*\n* @param {*} value - input value\n* @returns {(Object|null)} prototype\n*\n* @example\n* var proto = getPrototypeOf( {} );\n* // returns {}\n*/\nfunction getPrototypeOf( value ) {\n\tif (\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t) {\n\t\treturn null;\n\t}\n\t// In order to ensure consistent ES5/ES6 behavior, cast input value to an object (strings, numbers, booleans); ES5 `Object.getPrototypeOf` throws when provided primitives and ES6 `Object.getPrototypeOf` casts:\n\tvalue = Object( value );\n\n\treturn getProto( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the prototype of a provided object.\n*\n* @module @stdlib/utils/get-prototype-of\n*\n* @example\n* var getPrototype = require( '@stdlib/utils/get-prototype-of' );\n*\n* var proto = getPrototype( {} );\n* // returns {}\n*/\n\n// MODULES //\n\nvar getPrototype = require( './get_prototype_of.js' );\n\n\n// EXPORTS //\n\nmodule.exports = getPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an `Error` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `Error` object\n*\n* @example\n* var bool = isError( new Error( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isError( {} );\n* // returns false\n*/\nfunction isError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `Error` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof Error ) {\n\t\treturn true;\n\t}\n\t// Walk the prototype tree until we find an object having the desired native class...\n\twhile ( value ) {\n\t\tif ( nativeClass( value ) === '[object Error]' ) {\n\t\t\treturn true;\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `Error` object.\n*\n* @module @stdlib/assert/is-error\n*\n* @example\n* var isError = require( '@stdlib/assert/is-error' );\n*\n* var bool = isError( new Error( 'beep' ) );\n* // returns true\n*\n* bool = isError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar valueOf = require( './valueof.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2valueof.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' );\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isObject;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isPrimitive;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isString = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isString, 'isPrimitive', isPrimitive );\nsetReadOnly( isString, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to parse a regular expression string.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*/\nfunction reRegExp() {\n\treturn /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to parse a regular expression string.\n*\n* @module @stdlib/regexp/regexp\n*\n* @example\n* var reRegExp = require( '@stdlib/regexp/regexp' );\n*\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*\n* @example\n* var reRegExp = require( '@stdlib/regexp/regexp' );\n*\n* var RE_REGEXP = reRegExp();\n*\n* var parts = RE_REGEXP.exec( '/^.*$/ig' );\n* // returns [ '/^.*$/ig', '^.*$', 'ig', 'index': 0, 'input': '/^.*$/ig' ]\n*/\n\n// MAIN //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reRegExp = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reRegExp, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reRegExp = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches parts of a regular expression string.\n*\n* Regular expression: `/^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/`\n*\n* -   `/^\\/`\n*     -   match a string that begins with a `/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `(?:)+`\n*     -   capture, but do not remember, a group of characters which occur one or more times\n*\n* -   `\\\\\\/`\n*     -   match the literal `\\/`\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]`\n*     -   anything which is not the literal `\\/`\n*\n* -   `\\/`\n*     -   match the literal `/`\n*\n* -   `([imgy]*)`\n*     -   capture any characters matching `imgy` occurring zero or more times\n*\n* -   `$/`\n*     -   string end\n*\n*\n* @constant\n* @type {RegExp}\n* @default /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/\n*/\nvar RE_REGEXP = reRegExp();\n\n\n// EXPORTS //\n\nmodule.exports = RE_REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar reRegExp = require( '@stdlib/regexp/regexp' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Parses a regular expression string and returns a new regular expression.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} must provide a regular expression string\n* @returns {(RegExp|null)} regular expression or null\n*\n* @example\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\nfunction reFromString( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Capture the regular expression pattern and any flags:\n\tstr = reRegExp().exec( str );\n\n\t// Create a new regular expression:\n\treturn ( str ) ? new RegExp( str[1], str[2] ) : null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a regular expression from a regular expression string.\n*\n* @module @stdlib/utils/regexp-from-string\n*\n* @example\n* var reFromString = require( '@stdlib/utils/regexp-from-string' );\n*\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\n\n// MODULES //\n\nvar reFromString = require( './from_string.js' );\n\n\n// EXPORTS //\n\nmodule.exports = reFromString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a double-precision floating-point numeric value is `NaN`.\n*\n* @module @stdlib/math/base/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/math/base/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 7.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isnan = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isPrimitive;\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isObject;\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isnan = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isnan, 'isPrimitive', isPrimitive );\nsetReadOnly( isnan, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a collection.\n*\n* @module @stdlib/assert/is-collection\n*\n* @example\n* var isCollection = require( '@stdlib/assert/is-collection' );\n*\n* var bool = isCollection( [] );\n* // returns true\n*\n* bool = isCollection( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCollection = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a typed array.\n*\n* @module @stdlib/constants/array/max-typed-array-length\n*\n* @example\n* var MAX_TYPED_ARRAY_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n* // returns 9007199254740991\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a typed array.\n*\n* ```tex\n* 2^{53} - 1\n* ```\n*\n* @constant\n* @type {number}\n* @default 9007199254740991\n*/\nvar MAX_TYPED_ARRAY_LENGTH = 9007199254740991;\n\n\n// EXPORTS //\n\nmodule.exports = MAX_TYPED_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/assert/is-nan' );\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns the first index at which a given element can be found.\n*\n* @param {ArrayLike} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {integer} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @throws {TypeError} must provide an array-like object\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} index or -1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* @example\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 5 );\n* // returns -1\n*\n* @example\n* // Using a `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* @example\n* // `fromIndex` which exceeds `array` length:\n* var arr = [ 1, 2, 3, 4, 2, 5 ];\n* var idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* @example\n* // Negative `fromIndex`:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* var idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* @example\n* // Negative `fromIndex` exceeding input `array` length:\n* var arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* var idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* @example\n* // Array-like objects:\n* var str = 'bebop';\n* var idx = indexOf( str, 'o' );\n* // returns 3\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\t// Check for `NaN`...\n\tif ( isnan( searchElement ) ) {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( isnan( arr[i] ) ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nmodule.exports = indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the first index at which a given element can be found.\n*\n* @module @stdlib/utils/index-of\n*\n* @example\n* var indexOf = require( '@stdlib/utils/index-of' );\n*\n* var arr = [ 4, 3, 2, 1 ];\n* var idx = indexOf( arr, 3 );\n* // returns 1\n*\n* arr = [ 4, 3, 2, 1 ];\n* idx = indexOf( arr, 5 );\n* // returns -1\n*\n* // Using a `fromIndex`:\n* arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* idx = indexOf( arr, 2, 3 );\n* // returns 5\n*\n* // `fromIndex` which exceeds `array` length:\n* arr = [ 1, 2, 3, 4, 2, 5 ];\n* idx = indexOf( arr, 2, 10 );\n* // returns -1\n*\n* // Negative `fromIndex`:\n* arr = [ 1, 2, 3, 4, 5, 2, 6, 2 ];\n* idx = indexOf( arr, 2, -4 );\n* // returns 5\n*\n* idx = indexOf( arr, 2, -1 );\n* // returns 7\n*\n* // Negative `fromIndex` exceeding input `array` length:\n* arr = [ 1, 2, 3, 4, 5, 2, 6 ];\n* idx = indexOf( arr, 2, -10 );\n* // returns 1\n*\n* // Array-like objects:\n* var str = 'bebop';\n* idx = indexOf( str, 'o' );\n* // returns 3\n*/\n\n// MODULES //\n\nvar indexOf = require( './index_of.js' );\n\n\n// EXPORTS //\n\nmodule.exports = indexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.keys()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\treturn Object.keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar keys = require( './builtin.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests the built-in `Object.keys()` implementation when provided `arguments`.\n*\n* @private\n* @returns {boolean} boolean indicating whether the built-in implementation returns the expected number of keys\n*/\nfunction test() {\n\treturn ( keys( arguments ) || '' ).length !== 2;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether the built-in `Object.keys()` implementation supports providing `arguments` as an input value.\n*\n* ## Notes\n*\n* -   Safari 5.0 does **not** support `arguments` as an input value.\n*\n* @private\n* @returns {boolean} boolean indicating whether a built-in implementation supports `arguments`\n*/\nfunction check() {\n\treturn test( 1, 2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = check;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.keys !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArguments = require( './main.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnum = require( './native.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' );\nvar isnan = require( './../../is-nan' ).isPrimitive;\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar isEnum = require( './native.js' );\nvar hasStringEnumBug = require( './has_string_enumerability_bug.js' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is enumerable.\n*\n* @module @stdlib/assert/is-enumerable-property\n*\n* @example\n* var isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEnumerableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\nvar isEnumerableProperty = require( './../../is-enumerable-property' );\nvar isArray = require( './../../is-array' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/uint32/max' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert/is-arguments\n*\n* @example\n* var isArguments = require( '@stdlib/assert/is-arguments' );\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasArgumentsClass = require( './detect.js' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArguments = require( '@stdlib/assert/is-arguments' );\nvar builtin = require( './builtin.js' );\n\n\n// VARIABLES //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tif ( isArguments( value ) ) {\n\t\treturn builtin( slice.call( value ) );\n\t}\n\treturn builtin( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @example\n* noop();\n* // ...does nothing.\n*/\nfunction noop() {\n\t// Empty function...\n}\n\n\n// EXPORTS //\n\nmodule.exports = noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* No operation.\n*\n* @module @stdlib/utils/noop\n*\n* @example\n* var noop = require( '@stdlib/utils/noop' );\n*\n* noop();\n* // ...does nothing.\n*/\n\n// MODULES //\n\nvar noop = require( './noop.js' );\n\n\n// EXPORTS //\n\nmodule.exports = noop;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\nvar noop = require( './../../noop' );\n\n\n// MAIN //\n\n// Note: certain environments treat an object's prototype as enumerable, which, as a matter of convention, it shouldn't be...\nvar bool = isEnumerableProperty( noop, 'prototype' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\n\n\n// VARIABLES //\n\nvar obj = {\n\t'toString': null\n};\n\n\n// MAIN //\n\n// Note: certain environments don't allow enumeration of overwritten properties which are considered non-enumerable...\nvar bool = !isEnumerableProperty( obj, 'toString' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests whether a value equals the prototype of its constructor.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction isConstructorPrototype( value ) {\n\treturn ( value.constructor && value.constructor.prototype === value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isConstructorPrototype;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar indexOf = require( './../../index-of' );\nvar typeOf = require( './../../type-of' );\nvar isConstructorPrototype = require( './is_constructor_prototype.js' );\nvar EXCLUDED_KEYS = require( './excluded_keys.json' );\nvar win = require( './window.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Determines whether an environment throws when comparing to the prototype of a value's constructor (e.g., [IE9][1]).\n*\n* [1]: https://stackoverflow.com/questions/7688070/why-is-comparing-the-constructor-property-of-two-windows-unreliable\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment is buggy\n*/\nfunction check() {\n\tvar k;\n\tif ( typeOf( win ) === 'undefined' ) {\n\t\treturn false;\n\t}\n\tfor ( k in win ) { // eslint-disable-line guard-for-in\n\t\ttry {\n\t\t\tif (\n\t\t\t\tindexOf( EXCLUDED_KEYS, k ) === -1 &&\n\t\t\t\thasOwnProp( win, k ) &&\n\t\t\t\twin[ k ] !== null &&\n\t\t\t\ttypeOf( win[ k ] ) === 'object'\n\t\t\t) {\n\t\t\t\tisConstructorPrototype( win[ k ] );\n\t\t\t}\n\t\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\nbool = check();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar w = ( typeof window === 'undefined' ) ? void 0 : window;\n\n\n// EXPORTS //\n\nmodule.exports = w;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof window !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasAutomationEqualityBug = require( './has_automation_equality_bug.js' );\nvar isConstructorPrototype = require( './is_constructor_prototype.js' );\nvar HAS_WINDOW = require( './has_window.js' );\n\n\n// MAIN //\n\n/**\n* Wraps the test for constructor prototype equality to accommodate buggy environments (e.g., environments which throw when testing equality).\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value equals the prototype of its constructor\n*/\nfunction wrapper( value ) {\n\tif ( HAS_WINDOW === false && !hasAutomationEqualityBug ) {\n\t\treturn isConstructorPrototype( value );\n\t}\n\ttry {\n\t\treturn isConstructorPrototype( value );\n\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrapper;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( '@stdlib/assert/is-object-like' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isArguments = require( '@stdlib/assert/is-arguments' );\nvar HAS_ENUM_PROTO_BUG = require( './has_enumerable_prototype_bug.js' );\nvar HAS_NON_ENUM_PROPS_BUG = require( './has_non_enumerable_properties_bug.js' );\nvar isConstructorPrototype = require( './is_constructor_prototype_wrapper.js' );\nvar NON_ENUMERABLE = require( './non_enumerable.json' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction keys( value ) {\n\tvar skipConstructor;\n\tvar skipPrototype;\n\tvar isFcn;\n\tvar out;\n\tvar k;\n\tvar p;\n\tvar i;\n\n\tout = [];\n\tif ( isArguments( value ) ) {\n\t\t// Account for environments which treat `arguments` differently...\n\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\tout.push( i.toString() );\n\t\t}\n\t\t// Note: yes, we are precluding the `arguments` array-like object from having other enumerable properties; however, this should (1) be very rare and (2) not be encouraged (e.g., doing something like `arguments.a = 'b'`; in certain engines directly manipulating the `arguments` value results in automatic de-optimization).\n\t\treturn out;\n\t}\n\tif ( typeof value === 'string' ) {\n\t\t// Account for environments which do not treat string character indices as \"own\" properties...\n\t\tif ( value.length > 0 && !hasOwnProp( value, '0' ) ) {\n\t\t\tfor ( i = 0; i < value.length; i++ ) {\n\t\t\t\tout.push( i.toString() );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tisFcn = ( typeof value === 'function' );\n\t\tif ( isFcn === false && !isObjectLike( value ) ) {\n\t\t\treturn out;\n\t\t}\n\t\tskipPrototype = ( HAS_ENUM_PROTO_BUG && isFcn );\n\t}\n\tfor ( k in value ) {\n\t\tif ( !( skipPrototype && k === 'prototype' ) && hasOwnProp( value, k ) ) {\n\t\t\tout.push( String( k ) );\n\t\t}\n\t}\n\tif ( HAS_NON_ENUM_PROPS_BUG ) {\n\t\tskipConstructor = isConstructorPrototype( value );\n\t\tfor ( i = 0; i < NON_ENUMERABLE.length; i++ ) {\n\t\t\tp = NON_ENUMERABLE[ i ];\n\t\t\tif ( !( skipConstructor && p === 'constructor' ) && hasOwnProp( value, p ) ) {\n\t\t\t\tout.push( String( p ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasArgumentsBug = require( './has_arguments_bug.js' );\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar builtin = require( './builtin.js' );\nvar wrapper = require( './builtin_wrapper.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names.\n*\n* @name keys\n* @type {Function}\n* @param {*} value - input object\n* @returns {Array} a list of own enumerable property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nvar keys;\nif ( HAS_BUILTIN ) {\n\tif ( hasArgumentsBug() ) {\n\t\tkeys = wrapper;\n\t} else {\n\t\tkeys = builtin;\n\t}\n} else {\n\tkeys = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable property names.\n*\n* @module @stdlib/utils/keys\n*\n* @example\n* var keys = require( '@stdlib/utils/keys' );\n*\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var k = keys( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\n\n// MODULES //\n\nvar keys = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = keys;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyNames !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyNames = Object.getOwnPropertyNames;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn propertyNames( Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar keys = require( './../../keys' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable and non-enumerable property names.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyNames()`, this function returns an empty array if provided `undefined` or `null`, rather than throwing an error.\n* -   In environments lacking support for `Object.getOwnPropertyNames()`, property descriptors are unavailable, and thus all properties can be safely assumed to be enumerable. Hence, we can defer to calling `Object.keys`, which retrieves all own enumerable property names.\n*\n* @private\n* @param {*} value - input object\n* @returns {Array} a list of own property names\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var keys = getOwnPropertyNames( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction getOwnPropertyNames( value ) {\n\treturn keys( Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = getOwnPropertyNames;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable and non-enumerable property names.\n*\n* @module @stdlib/utils/property-names\n*\n* @example\n* var getOwnPropertyNames = require( '@stdlib/utils/property-names' );\n*\n* var keys = getOwnPropertyNames({\n*   'foo': 'bar',\n*   'beep': 'boop'\n* });\n* // e.g., returns [ 'foo', 'beep' ]\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar bool = ( typeof Object.getOwnPropertyDescriptor !== 'undefined' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar propertyDescriptor = Object.getOwnPropertyDescriptor;\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tvar desc;\n\tif ( value === null || value === void 0 ) {\n\t\treturn null;\n\t}\n\tdesc = propertyDescriptor( value, property );\n\treturn ( desc === void 0 ) ? null : desc;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Returns a property descriptor for an object's own property.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if provided `undefined` or `null`, rather than throwing an error.\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptor()`, this function returns `null` if an object does not have a provided property, rather than `undefined`.\n* -   In environments lacking `Object.getOwnPropertyDescriptor()` support, property descriptors do not exist. In non-supporting environment, if an object has a provided property, this function returns a descriptor object equivalent to that returned in a supporting environment; otherwise, the function returns `null`.\n*\n* @private\n* @param {*} value - input object\n* @param {(string|symbol)} property - property\n* @returns {(Object|null)} property descriptor or null\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var desc = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':3.14}\n*/\nfunction getOwnPropertyDescriptor( value, property ) {\n\tif ( hasOwnProp( value, property ) ) {\n\t\treturn {\n\t\t\t'configurable': true,\n\t\t\t'enumerable': true,\n\t\t\t'writable': true,\n\t\t\t'value': value[ property ]\n\t\t};\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getOwnPropertyDescriptor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a property descriptor for an object's own property.\n*\n* @module @stdlib/utils/property-descriptor\n*\n* @example\n* var getOwnPropertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n*\n* var obj = {\n*   'foo': 'bar',\n*   'beep': 'boop'\n* };\n*\n* var keys = getOwnPropertyDescriptor( obj, 'foo' );\n* // returns {'configurable':true,'enumerable':true,'writable':true,'value':'bar'}\n*/\n\n// MODULES //\n\nvar HAS_BUILTIN = require( './has_builtin.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main;\nif ( HAS_BUILTIN ) {\n\tmain = builtin;\n} else {\n\tmain = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( './../../is-buffer' );\nvar GlobalBuffer = require( './buffer.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Buffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Buffer` support\n*\n* @example\n* var bool = hasNodeBufferSupport();\n* // returns <boolean>\n*/\nfunction hasNodeBufferSupport() {\n\tvar bool;\n\tvar b;\n\n\tif ( typeof GlobalBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tif ( typeof GlobalBuffer.from === 'function' ) {\n\t\t\tb = GlobalBuffer.from( [ 1, 2, 3, 4 ] );\n\t\t} else {\n\t\t\tb = new GlobalBuffer( [ 1, 2, 3, 4 ] ); // Note: this is deprecated behavior starting in Node v6 (see https://nodejs.org/api/buffer.html#buffer_new_buffer_array)\n\t\t}\n\t\tbool = (\n\t\t\tisBuffer( b ) &&\n\t\t\tb[ 0 ] === 1 &&\n\t\t\tb[ 1 ] === 2 &&\n\t\t\tb[ 2 ] === 3 &&\n\t\t\tb[ 3 ] === 4\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasNodeBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Buffer` support.\n*\n* @module @stdlib/assert/has-node-buffer-support\n*\n* @example\n* var hasNodeBufferSupport = require( '@stdlib/assert/has-node-buffer-support' );\n*\n* var bool = hasNodeBufferSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasNodeBufferSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasNodeBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write (browser) polyfill\n\n// MAIN //\n\n/**\n* Buffer constructor.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Buffer constructor.\n*\n* @module @stdlib/buffer/ctor\n*\n* @example\n* var ctor = require( '@stdlib/buffer/ctor' );\n*\n* var b = new ctor( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar hasNodeBufferSupport = require( '@stdlib/assert/has-node-buffer-support' );\nvar main = require( './buffer.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasNodeBufferSupport() ) {\n\tctor = main;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = require( 'buffer' ).Buffer; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.from );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar format = require( '@stdlib/string/format' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a Buffer. Value: `%s`.', buffer ) );\n\t}\n\treturn Buffer.from( buffer );\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar format = require( '@stdlib/string/format' );\nvar Buffer = require( './../../ctor' );\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a Buffer. Value: `%s`.', buffer ) );\n\t}\n\treturn new Buffer( buffer ); // eslint-disable-line no-buffer-constructor\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy buffer data to a new `Buffer` instance.\n*\n* @module @stdlib/buffer/from-buffer\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n* var copyBuffer = require( '@stdlib/buffer/from-buffer' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = copyBuffer( b1 );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar hasFrom = require( './has_from.js' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar copyBuffer;\nif ( hasFrom ) {\n\tcopyBuffer = main;\n} else {\n\tcopyBuffer = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = copyBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt8Array = ( typeof Int8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int8Array\n*\n* @example\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt8Array( [] );\n* // returns false\n*/\nfunction isInt8Array( value ) {\n\treturn (\n\t\t( hasInt8Array && value instanceof Int8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int8Array === 'function' ) ? Int8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt8Array = require( './../../is-int8array' );\nvar INT8_MAX = require( '@stdlib/constants/int8/max' );\nvar INT8_MIN = require( '@stdlib/constants/int8/min' );\nvar GlobalInt8Array = require( './int8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int8Array` support\n*\n* @example\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt8Array( [ 1, 3.14, -3.14, INT8_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&     // truncation\n\t\t\tarr[ 2 ] === -3 &&    // truncation\n\t\t\tarr[ 3 ] === INT8_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 8-bit integer.\n*\n* @module @stdlib/constants/int8/min\n* @type {integer32}\n*\n* @example\n* var INT8_MIN = require( '@stdlib/constants/int8/min' );\n* // returns -128\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 8-bit integer.\n*\n* ## Notes\n*\n* The number is given by\n*\n* ```tex\n* -(2^{7})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -128\n*/\nvar INT8_MIN = -128|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT8_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 8-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int8\n*\n* @example\n* var ctor = require( '@stdlib/array/int8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int8Array>\n*/\n\n// MODULES //\n\nvar hasInt8ArraySupport = require( '@stdlib/assert/has-int8array-support' );\nvar builtin = require( './int8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int8Array === 'function' ) ? Int8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int8Array` support.\n*\n* @module @stdlib/assert/has-int8array-support\n*\n* @example\n* var hasInt8ArraySupport = require( '@stdlib/assert/has-int8array-support' );\n*\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8Array = require( './../../is-uint8array' );\nvar UINT8_MAX = require( '@stdlib/constants/uint8/max' );\nvar GlobalUint8Array = require( './uint8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint8\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\nvar builtin = require( './uint8array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8Array === 'function' ) ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8Array` support.\n*\n* @module @stdlib/assert/has-uint8array-support\n*\n* @example\n* var hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\n*\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8ClampedArray = ( typeof Uint8ClampedArray === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8ClampedArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8ClampedArray\n*\n* @example\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8ClampedArray( [] );\n* // returns false\n*/\nfunction isUint8ClampedArray( value ) {\n\treturn (\n\t\t( hasUint8ClampedArray && value instanceof Uint8ClampedArray ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8ClampedArray]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8ClampedArray = require( './../../is-uint8clampedarray' );\nvar GlobalUint8ClampedArray = require( './uint8clampedarray.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8ClampedArray` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8ClampedArray` support\n*\n* @example\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ClampedArraySupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8ClampedArray !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalUint8ClampedArray( [ -1, 0, 1, 3.14, 4.99, 255, 256 ] );\n\t\tbool = (\n\t\t\tisUint8ClampedArray( arr ) &&\n\t\t\tarr[ 0 ] === 0 &&   // clamped\n\t\t\tarr[ 1 ] === 0 &&\n\t\t\tarr[ 2 ] === 1 &&\n\t\t\tarr[ 3 ] === 3 &&   // round to nearest\n\t\t\tarr[ 4 ] === 5 &&   // round to nearest\n\t\t\tarr[ 5 ] === 255 &&\n\t\t\tarr[ 6 ] === 255    // clamped\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order clamped to 0-255.\n*\n* @module @stdlib/array/uint8c\n*\n* @example\n* var ctor = require( '@stdlib/array/uint8c' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8ClampedArray>\n*/\n\n// MODULES //\n\nvar hasUint8ClampedArraySupport = require( '@stdlib/assert/has-uint8clampedarray-support' ); // eslint-disable-line id-length\nvar builtin = require( './uint8clampedarray.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint8ClampedArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8ClampedArray` support.\n*\n* @module @stdlib/assert/has-uint8clampedarray-support\n*\n* @example\n* var hasUint8ClampedArraySupport = require( '@stdlib/assert/has-uint8clampedarray-support' );\n*\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ClampedArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt16Array = ( typeof Int16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int16Array\n*\n* @example\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt16Array( [] );\n* // returns false\n*/\nfunction isInt16Array( value ) {\n\treturn (\n\t\t( hasInt16Array && value instanceof Int16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int16Array === 'function' ) ? Int16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt16Array = require( './../../is-int16array' );\nvar INT16_MAX = require( '@stdlib/constants/int16/max' );\nvar INT16_MIN = require( '@stdlib/constants/int16/min' );\nvar GlobalInt16Array = require( './int16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int16Array` support\n*\n* @example\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt16Array( [ 1, 3.14, -3.14, INT16_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT16_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 16-bit integer.\n*\n* @module @stdlib/constants/int16/min\n* @type {integer32}\n*\n* @example\n* var INT16_MIN = require( '@stdlib/constants/int16/min' );\n* // returns -32768\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{15})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 1000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -32768\n*/\nvar INT16_MIN = -32768|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT16_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 16-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int16\n*\n* @example\n* var ctor = require( '@stdlib/array/int16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int16Array>\n*/\n\n// MODULES //\n\nvar hasInt16ArraySupport = require( '@stdlib/assert/has-int16array-support' );\nvar builtin = require( './int16array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int16Array === 'function' ) ? Int16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int16Array` support.\n*\n* @module @stdlib/assert/has-int16array-support\n*\n* @example\n* var hasInt16ArraySupport = require( '@stdlib/assert/has-int16array-support' );\n*\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint16Array = require( './../../is-uint16array' );\nvar UINT16_MAX = require( '@stdlib/constants/uint16/max' );\nvar GlobalUint16Array = require( './uint16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint16\n*\n* @example\n* var ctor = require( '@stdlib/array/uint16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\nvar builtin = require( './uint16array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint16ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint16Array === 'function' ) ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint16Array` support.\n*\n* @module @stdlib/assert/has-uint16array-support\n*\n* @example\n* var hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\n*\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt32Array = ( typeof Int32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int32Array\n*\n* @example\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt32Array( [] );\n* // returns false\n*/\nfunction isInt32Array( value ) {\n\treturn (\n\t\t( hasInt32Array && value instanceof Int32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int32Array === 'function' ) ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt32Array = require( './../../is-int32array' );\nvar INT32_MAX = require( '@stdlib/constants/int32/max' );\nvar INT32_MIN = require( '@stdlib/constants/int32/min' );\nvar GlobalInt32Array = require( './int32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt32Array( [ 1, 3.14, -3.14, INT32_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT32_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Minimum signed 32-bit integer.\n*\n* @module @stdlib/constants/int32/min\n* @type {integer32}\n*\n* @example\n* var INT32_MIN = require( '@stdlib/constants/int32/min' );\n* // returns -2147483648\n*/\n\n\n// MAIN //\n\n/**\n* Minimum signed 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* -(2^{31})\n* ```\n*\n* which corresponds to the two's complement bit sequence\n*\n* ```binarystring\n* 10000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {integer32}\n* @default -2147483648\n*/\nvar INT32_MIN = -2147483648|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = INT32_MIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of twos-complement 32-bit signed integers in the platform byte order.\n*\n* @module @stdlib/array/int32\n*\n* @example\n* var ctor = require( '@stdlib/array/int32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Int32Array>\n*/\n\n// MODULES //\n\nvar hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\nvar builtin = require( './int32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasInt32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Int32Array === 'function' ) ? Int32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int32Array` support.\n*\n* @module @stdlib/assert/has-int32array-support\n*\n* @example\n* var hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\n*\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint32Array = require( './../../is-uint32array' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar GlobalUint32Array = require( './uint32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array/uint32\n*\n* @example\n* var ctor = require( '@stdlib/array/uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\nvar builtin = require( './uint32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasUint32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Uint32Array === 'function' ) ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint32Array` support.\n*\n* @module @stdlib/assert/has-uint32array-support\n*\n* @example\n* var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\n*\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/\nfunction isFloat32Array( value ) {\n\treturn (\n\t\t( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat32Array = require( './../../is-float32array' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar GlobalFloat32Array = require( './float32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.140000104904175 &&\n\t\t\tarr[ 2 ] === -3.140000104904175 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of single-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of single-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float32\n*\n* @example\n* var ctor = require( '@stdlib/array/float32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float32Array>\n*/\n\n// MODULES //\n\nvar hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );\nvar builtin = require( './float32array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat32ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float32Array === 'function' ) ? Float32Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float32Array` support.\n*\n* @module @stdlib/assert/has-float32array-support\n*\n* @example\n* var hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );\n*\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat64Array = require( './../../is-float64array' );\nvar GlobalFloat64Array = require( './float64array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: write polyfill\n\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\nfunction polyfill() {\n\tthrow new Error( 'not implemented' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array/float64\n*\n* @example\n* var ctor = require( '@stdlib/array/float64' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\nvar builtin = require( './float64array.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar ctor;\nif ( hasFloat64ArraySupport() ) {\n\tctor = builtin;\n} else {\n\tctor = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar ctor = ( typeof Float64Array === 'function' ) ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float64Array` support.\n*\n* @module @stdlib/assert/has-float64array-support\n*\n* @example\n* var hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\n*\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( '@stdlib/array/int8' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array/uint8c' );\nvar Int16Array = require( '@stdlib/array/int16' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float32Array = require( '@stdlib/array/float32' );\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\n\nmodule.exports = hash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar isError = require( '@stdlib/assert/is-error' );\nvar typeOf = require( './../../type-of' );\nvar regexp = require( './../../regexp-from-string' );\nvar indexOf = require( './../../index-of' );\nvar objectKeys = require( './../../keys' );\nvar propertyNames = require( './../../property-names' );\nvar propertyDescriptor = require( './../../property-descriptor' );\nvar getPrototypeOf = require( './../../get-prototype-of' );\nvar defineProperty = require( './../../define-property' );\nvar copyBuffer = require( '@stdlib/buffer/from-buffer' );\nvar typedArrays = require( './typed_arrays.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepCopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert/is-array' );\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar deepCopy = require( './deep_copy.js' );\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', level ) );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy or deep clone a value to an arbitrary depth.\n*\n* @module @stdlib/utils/copy\n*\n* @example\n* var copy = require( '@stdlib/utils/copy' );\n*\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var copy = require( '@stdlib/utils/copy' );\n*\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ {'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\n\n// MODULES //\n\nvar copy = require( './copy.js' );\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( './../../is-object' );\nvar isFunction = require( './../../is-function' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasOwnProp = require( './../../has-own-property' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a plain object.\n*\n* @module @stdlib/assert/is-plain-object\n*\n* @example\n* var isPlainObject = require( '@stdlib/assert/is-plain-object' );\n*\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* bool = isPlainObject( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPlainObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative number value\n*\n* @example\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue >= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative number value\n*\n* @example\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() >= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative number\n*\n* @example\n* var bool = isNonNegativeNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeNumber( null );\n* // returns false\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative number.\n*\n* @module @stdlib/assert/is-nonnegative-number\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' );\n*\n* var bool = isNonNegativeNumber( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeNumber( 3.14 );\n* // returns true\n*\n* bool = isNonNegativeNumber( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeNumber( null );\n* // returns false\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\n*\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isObject;\n*\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isNonNegative = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {Function} [options.transform] - callback to invoke upon receiving a new chunk\n* @param {Function} [options.flush] - callback to invoke after receiving all chunks and prior to the stream closing\n* @param {boolean} [options.objectMode] - specifies whether a stream should operate in object mode\n* @param {(string|null)} [options.encoding] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the `Buffer` level for when `write()` starts returning `false`\n* @param {boolean} [options.allowHalfOpen] - specifies whether the stream should remain open even if one side ends\n* @param {boolean} [options.decodeStrings] - specifies whether to decode `strings` into `Buffer` objects when writing\n* @returns {(Error|null)} null or an error object\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'transform' ) ) {\n\t\topts.transform = options.transform;\n\t\tif ( !isFunction( opts.transform ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a function. Option: `%s`.', 'transform', opts.transform ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'flush' ) ) {\n\t\topts.flush = options.flush;\n\t\tif ( !isFunction( opts.flush ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a function. Option: `%s`.', 'flush', opts.flush ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'objectMode' ) ) {\n\t\topts.objectMode = options.objectMode;\n\t\tif ( !isBoolean( opts.objectMode ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'objectMode', opts.objectMode ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'encoding' ) ) {\n\t\topts.encoding = options.encoding;\n\t\tif ( !isString( opts.encoding ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'encoding', opts.encoding ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'allowHalfOpen' ) ) {\n\t\topts.allowHalfOpen = options.allowHalfOpen;\n\t\tif ( !isBoolean( opts.allowHalfOpen ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'allowHalfOpen', opts.allowHalfOpen ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'highWaterMark' ) ) {\n\t\topts.highWaterMark = options.highWaterMark;\n\t\tif ( !isNonNegative( opts.highWaterMark ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'highWaterMark', opts.highWaterMark ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'decodeStrings' ) ) {\n\t\topts.decodeStrings = options.decodeStrings;\n\t\tif ( !isBoolean( opts.decodeStrings ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decodeStrings', opts.decodeStrings ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Adds a callback to the \"next tick queue\".\n*\n* ## Notes\n*\n* -   The queue is fully drained after the current operation on the JavaScript stack runs to completion and before the event loop is allowed to continue.\n*\n* @param {Callback} clbk - callback\n* @param {...*} [args] - arguments to provide to the callback upon invocation\n*\n* @example\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* nextTick( beep );\n*/\nfunction nextTick( clbk ) {\n\tvar args;\n\tvar i;\n\n\targs = [];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\tproc.nextTick( wrapper );\n\n\t/**\n\t* Callback wrapper.\n\t*\n\t* ## Notes\n\t*\n\t* -   The ability to provide additional arguments was added in Node.js v1.8.1. The wrapper provides support for earlier Node.js versions.\n\t*\n\t* @private\n\t*/\n\tfunction wrapper() {\n\t\tclbk.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = nextTick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar nextTick = require( '@stdlib/utils/next-tick' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'transform-stream:destroy' );\n\n\n// MAIN //\n\n/**\n* Gracefully destroys a stream, providing backward compatibility.\n*\n* @private\n* @param {Object} [error] - optional error message\n* @returns {Stream} stream instance\n*/\nfunction destroy( error ) {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tif ( this._destroyed ) {\n\t\tdebug( 'Attempted to destroy an already destroyed stream.' );\n\t\treturn this;\n\t}\n\tself = this;\n\tthis._destroyed = true;\n\n\tnextTick( close );\n\n\treturn this;\n\n\t/**\n\t* Closes a stream.\n\t*\n\t* @private\n\t*/\n\tfunction close() {\n\t\tif ( error ) {\n\t\t\tdebug( 'Stream was destroyed due to an error. Error: %s.', JSON.stringify( error ) );\n\t\t\tself.emit( 'error', error );\n\t\t}\n\t\tdebug( 'Closing the stream...' );\n\t\tself.emit( 'close' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = destroy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Add a callback to the \"next tick queue\".\n*\n* @module @stdlib/utils/next-tick\n*\n* @example\n* var nextTick = require( '@stdlib/utils/next-tick' );\n*\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* nextTick( beep );\n*/\n\n// MODULES //\n\nvar nextTick = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = nextTick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'transform-stream:transform' );\n\n\n// MAIN //\n\n/**\n* Implements the `_transform` method as a pass through.\n*\n* @private\n* @param {(Uint8Array|Buffer|string)} chunk - streamed chunk\n* @param {string} encoding - Buffer encoding\n* @param {Callback} clbk - callback to invoke after transforming the streamed chunk\n*/\nfunction transform( chunk, encoding, clbk ) {\n\tdebug( 'Received a new chunk. Chunk: %s. Encoding: %s.', chunk.toString(), encoding );\n\tclbk( null, chunk );\n}\n\n\n// EXPORTS //\n\nmodule.exports = transform;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar Transform = require( 'readable-stream' ).Transform;\nvar inherit = require( '@stdlib/utils/inherit' );\nvar copy = require( '@stdlib/utils/copy' );\nvar DEFAULTS = require( './defaults.json' );\nvar validate = require( './validate.js' );\nvar destroy = require( './destroy.js' );\nvar _transform = require( './_transform.js' ); // eslint-disable-line no-underscore-dangle\n\n\n// VARIABLES //\n\nvar debug = logger( 'transform-stream:main' );\n\n\n// MAIN //\n\n/**\n* Transform stream constructor.\n*\n* @constructor\n* @param {Options} [options] - stream options\n* @param {Function} [options.transform] - callback to invoke upon receiving a new chunk\n* @param {Function} [options.flush] - callback to invoke after receiving all chunks and prior to the stream closing\n* @param {boolean} [options.objectMode=false] - specifies whether stream should operate in object mode\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the `Buffer` level for when `write()` starts returning `false`\n* @param {boolean} [options.allowHalfOpen=false] - specifies whether the stream should remain open even if one side ends\n* @param {boolean} [options.decodeStrings=true] - specifies whether to decode `strings` into `Buffer` objects when writing\n* @throws {TypeError} must provide valid options\n* @returns {TransformStream} transform stream\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n*\n* function transform( chunk, enc, clbk ) {\n*     clbk( null, chunk.toString()+'\\n' );\n* }\n*\n* var opts = {\n*     'transform': transform\n* };\n* var stream = new TransformStream( opts );\n*\n* stream.pipe( stdout );\n*\n* stream.write( '1' );\n* stream.write( '2' );\n* stream.write( '3' );\n*\n* stream.end();\n*\n* // prints: '1\\n2\\n3\\n'\n*/\nfunction TransformStream( options ) {\n\tvar opts;\n\tvar err;\n\tif ( !( this instanceof TransformStream ) ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn new TransformStream( options );\n\t\t}\n\t\treturn new TransformStream();\n\t}\n\topts = copy( DEFAULTS );\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tdebug( 'Creating a transform stream configured with the following options: %s.', JSON.stringify( opts ) );\n\tTransform.call( this, opts );\n\tthis._destroyed = false;\n\tif ( opts.transform ) {\n\t\tthis._transform = opts.transform;\n\t} else {\n\t\tthis._transform = _transform;\n\t}\n\tif ( opts.flush ) {\n\t\tthis._flush = opts.flush;\n\t}\n\treturn this;\n}\n\n/*\n* Inherit from the `Transform` prototype.\n*/\ninherit( TransformStream, Transform );\n\n/**\n* Gracefully destroys a stream, providing backward compatibility.\n*\n* @name destroy\n* @memberof TransformStream.prototype\n* @type {Function}\n* @param {Object} [error] - optional error message\n* @returns {TransformStream} stream instance\n*/\nTransformStream.prototype.destroy = destroy;\n\n\n// EXPORTS //\n\nmodule.exports = TransformStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar Stream = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Returns a transform stream with `objectMode` set to `true`.\n*\n* @param {Options} [options] - stream options\n* @param {Function} [options.transform] - callback to invoke upon receiving a new chunk\n* @param {Function} [options.flush] - callback to invoke after receiving all chunks and prior to the stream closing\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the `Buffer` level for when `write()` starts returning `false`\n* @param {boolean} [options.allowHalfOpen=false] - specifies whether the stream should remain open even if one side ends\n* @param {boolean} [options.decodeStrings=true] - specifies whether to decode `strings` into `Buffer` objects when writing\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {TransformStream} transform stream\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n*\n* function stringify( chunk, enc, clbk ) {\n*     clbk( null, JSON.stringify( chunk ) );\n* }\n*\n* function newline( chunk, enc, clbk ) {\n*     clbk( null, chunk+'\\n' );\n* }\n*\n* var s1 = objectMode({\n*     'transform': stringify\n* });\n*\n* var s2 = objectMode({\n*     'transform': newline\n* });\n*\n* s1.pipe( s2 ).pipe( stdout );\n*\n* s1.write( {'value': 'a'} );\n* s1.write( {'value': 'b'} );\n* s1.write( {'value': 'c'} );\n*\n* s1.end();\n*\n* // prints: '{\"value\":\"a\"}\\n{\"value\":\"b\"}\\n{\"value\":\"c\"}\\n'\n*/\nfunction objectMode( options ) {\n\tvar opts;\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\topts = copy( options );\n\t} else {\n\t\topts = {};\n\t}\n\topts.objectMode = true;\n\treturn new Stream( opts );\n}\n\n\n// EXPORTS //\n\nmodule.exports = objectMode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar Stream = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Creates a reusable transform stream factory.\n*\n* @param {Options} [options] - stream options\n* @param {boolean} [options.objectMode=false] - specifies whether a stream should operate in object mode\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the `Buffer` level for when `write()` starts returning `false`\n* @param {boolean} [options.allowHalfOpen=false] - specifies whether the stream should remain open even if one side ends\n* @param {boolean} [options.decodeStrings=true] - specifies whether to decode `strings` into `Buffer` objects when writing\n* @throws {TypeError} options argument must be an object\n* @returns {Function} transform stream factory\n*\n* @example\n* function transform( chunk, enc, clbk ) {\n*     clbk( null, chunk.toString()+'\\n' );\n* }\n*\n* var opts = {\n*     'objectMode': true,\n*     'encoding': 'utf8',\n*     'highWaterMark': 64,\n*     'decodeStrings': false\n* };\n*\n* var factory = streamFactory( opts );\n*\n* // Create 10 identically configured streams...\n* var streams = [];\n* var i;\n* for ( i = 0; i < 10; i++ ) {\n*     streams.push( factory( transform ) );\n* }\n*/\nfunction streamFactory( options ) {\n\tvar opts;\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\topts = copy( options );\n\t} else {\n\t\topts = {};\n\t}\n\treturn createStream;\n\n\t/**\n\t* Creates a transform stream.\n\t*\n\t* @private\n\t* @param {Function} transform - callback to invoke upon receiving a new chunk\n\t* @param {Function} [flush] - callback to invoke after receiving all chunks and prior to the stream closing\n\t* @throws {TypeError} must provide valid options\n\t* @throws {TypeError} transform callback must be a function\n\t* @throws {TypeError} flush callback must be a function\n\t* @returns {TransformStream} transform stream\n\t*/\n\tfunction createStream( transform, flush ) {\n\t\topts.transform = transform;\n\t\tif ( arguments.length > 1 ) {\n\t\t\topts.flush = flush;\n\t\t} else {\n\t\t\tdelete opts.flush; // clear any previous `flush`\n\t\t}\n\t\treturn new Stream( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = streamFactory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar Transform = require( 'readable-stream' ).Transform;\nvar inherit = require( '@stdlib/utils/inherit' );\nvar copy = require( '@stdlib/utils/copy' );\nvar DEFAULTS = require( './defaults.json' );\nvar validate = require( './validate.js' );\nvar destroy = require( './destroy.js' );\nvar _transform = require( './_transform.js' ); // eslint-disable-line no-underscore-dangle\n\n\n// VARIABLES //\n\nvar debug = logger( 'transform-stream:ctor' );\n\n\n// MAIN //\n\n/**\n* Transform stream constructor factory.\n*\n* @param {Options} [options] - stream options\n* @param {Function} [options.transform] - callback to invoke upon receiving a new chunk\n* @param {Function} [options.flush] - callback to invoke after receiving all chunks and prior to the stream closing\n* @param {boolean} [options.objectMode=false] - specifies whether a stream should operate in object mode\n* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n* @param {NonNegativeNumber} [options.highWaterMark] - specifies the `Buffer` level for when `write()` starts returning `false`\n* @param {boolean} [options.allowHalfOpen=false] - specifies whether the stream should remain open even if one side ends\n* @param {boolean} [options.decodeStrings=true] - specifies whether to decode `strings` into `Buffer` objects when writing\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} Transform stream constructor\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n*\n* function transform( chunk, enc, clbk ) {\n*     clbk( null, chunk.toString()+'\\n' );\n* }\n*\n* var opts = {\n*     'transform': transform\n* };\n*\n* var TransformStream = ctor( opts );\n*\n* var stream = new TransformStream();\n*\n* stream.pipe( stdout );\n*\n* stream.write( '1' );\n* stream.write( '2' );\n* stream.write( '3' );\n*\n* stream.end();\n*\n* // prints: '1\\n2\\n3\\n'\n*/\nfunction ctor( options ) {\n\tvar transform;\n\tvar copts;\n\tvar err;\n\n\tcopts = copy( DEFAULTS );\n\tif ( arguments.length ) {\n\t\terr = validate( copts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( copts.transform ) {\n\t\ttransform = copts.transform;\n\t} else {\n\t\ttransform = _transform;\n\t}\n\t/**\n\t* Transform stream constructor.\n\t*\n\t* @private\n\t* @constructor\n\t* @param {Options} [options] - stream options\n\t* @param {boolean} [options.objectMode=false] - specifies whether a stream should operate in object mode\n\t* @param {(string|null)} [options.encoding=null] - specifies how `Buffer` objects should be decoded to `strings`\n\t* @param {NonNegativeNumber} [options.highWaterMark] - specifies the `Buffer` level for when `write()` starts returning `false`\n\t* @param {boolean} [options.allowHalfOpen=false] - specifies whether the stream should remain open even if one side ends\n\t* @param {boolean} [options.decodeStrings=true] - specifies whether to decode `strings` into `Buffer` objects when writing\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @returns {TransformStream} transform stream\n\t*\n\t* @example\n\t* var stdout = require( './../../../node/stdout' );\n\t*\n\t* var stream = new TransformStream();\n\t*\n\t* stream.pipe( stdout );\n\t*\n\t* stream.write( '1' );\n\t* stream.write( '2' );\n\t* stream.write( '3' );\n\t*\n\t* stream.end();\n\t*\n\t* // prints: '1\\n2\\n3\\n'\n\t*/\n\tfunction TransformStream( options ) {\n\t\tvar opts;\n\t\tvar err;\n\t\tif ( !( this instanceof TransformStream ) ) {\n\t\t\tif ( arguments.length ) {\n\t\t\t\treturn new TransformStream( options );\n\t\t\t}\n\t\t\treturn new TransformStream();\n\t\t}\n\t\topts = copy( copts );\n\t\tif ( arguments.length ) {\n\t\t\terr = validate( opts, options );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\tdebug( 'Creating a transform stream configured with the following options: %s.', JSON.stringify( opts ) );\n\t\tTransform.call( this, opts );\n\t\tthis._destroyed = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t* Inherit from the `Transform` prototype.\n\t*/\n\tinherit( TransformStream, Transform );\n\n\t/**\n\t* Implements the `_transform` method.\n\t*\n\t* @private\n\t* @name _transform\n\t* @memberof TransformStream.prototype\n\t* @type {Function}\n\t* @param {(Buffer|string)} chunk - streamed chunk\n\t* @param {string} encoding - Buffer encoding\n\t* @param {Callback} clbk - callback to invoke after transforming the streamed chunk\n\t*/\n\tTransformStream.prototype._transform = transform; // eslint-disable-line no-underscore-dangle\n\n\tif ( copts.flush ) {\n\t\t/**\n\t\t* Implements the `_flush` method.\n\t\t*\n\t\t* @private\n\t\t* @name _flush\n\t\t* @memberof TransformStream.prototype\n\t\t* @type {Function}\n\t\t* @param {Callback} callback to invoke after performing flush tasks\n\t\t*/\n\t\tTransformStream.prototype._flush = copts.flush; // eslint-disable-line no-underscore-dangle\n\t}\n\n\t/**\n\t* Gracefully destroys a stream, providing backward compatibility.\n\t*\n\t* @private\n\t* @name destroy\n\t* @memberof TransformStream.prototype\n\t* @type {Function}\n\t* @param {Object} [error] - optional error message\n\t* @returns {TransformStream} stream instance\n\t*/\n\tTransformStream.prototype.destroy = destroy;\n\n\treturn TransformStream;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ctor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Transform stream.\n*\n* @module @stdlib/streams/node/transform\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* function transform( chunk, enc, clbk ) {\n*     clbk( null, chunk.toString()+'\\n' );\n* }\n*\n* var opts = {\n*     'transform': transform\n* };\n* var stream = transformStream( opts );\n*\n* stream.pipe( stdout );\n*\n* stream.write( '1' );\n* stream.write( '2' );\n* stream.write( '3' );\n*\n* stream.end();\n* // => '1\\n2\\n3\\n'\n*\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* function transform( chunk, enc, clbk ) {\n*     clbk( null, chunk.toString()+'\\n' );\n* }\n*\n* var opts = {\n*     'objectMode': true,\n*     'encoding': 'utf8',\n*     'highWaterMark': 64,\n*     'decodeStrings': false\n* };\n*\n* var factory = transformStream.factory( opts );\n*\n* // Create 10 identically configured streams...\n* var streams = [];\n* var i;\n* for ( i = 0; i < 10; i++ ) {\n*     streams.push( factory( transform ) );\n* }\n*\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* function stringify( chunk, enc, clbk ) {\n*     clbk( null, JSON.stringify( chunk ) );\n* }\n*\n* function newline( chunk, enc, clbk ) {\n*     clbk( null, chunk+'\\n' );\n* }\n*\n* var s1 = transformStream.objectMode({\n*     'transform': stringify\n* });\n*\n* var s2 = transformStream.objectMode({\n*     'transform': newline\n* });\n*\n* s1.pipe( s2 ).pipe( stdout );\n*\n* s1.write( {'value': 'a'} );\n* s1.write( {'value': 'b'} );\n* s1.write( {'value': 'c'} );\n*\n* s1.end();\n* // => '{\"value\":\"a\"}\\n{\"value\":\"b\"}\\n{\"value\":\"c\"}\\n'\n*\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* function transform( chunk, enc, clbk ) {\n*     clbk( null, chunk.toString()+'\\n' );\n* }\n*\n* var opts = {\n*     'transform': transform\n* };\n*\n* var Stream = transformStream.ctor( opts );\n*\n* var stream = new Stream();\n*\n* stream.pipe( stdout );\n*\n* stream.write( '1' );\n* stream.write( '2' );\n* stream.write( '3' );\n*\n* stream.end();\n* // => '1\\n2\\n3\\n'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar transform = require( './main.js' );\nvar objectMode = require( './object_mode.js' );\nvar factory = require( './factory.js' );\nvar ctor = require( './ctor.js' );\n\n\n// MAIN //\n\nsetReadOnly( transform, 'objectMode', objectMode );\nsetReadOnly( transform, 'factory', factory );\nsetReadOnly( transform, 'ctor', ctor );\n\n\n// EXPORTS //\n\nmodule.exports = transform;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './../../define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} getter - accessor\n*\n* @example\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnlyAccessor( obj, prop, getter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'get': getter\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a non-enumerable read-only accessor.\n*\n* @module @stdlib/utils/define-nonenumerable-read-only-accessor\n*\n* @example\n* var setNonEnumerableReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\n*\n* function getter() {\n*     return 'bar';\n* }\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnlyAccessor( obj, 'foo', getter );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n// MODULES //\n\nvar setNonEnumerableReadOnlyAccessor = require( './main.js' ); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnlyAccessor;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns a high-resolution time.\n*\n* ## Notes\n*\n* -   Output format: `[seconds, nanoseconds]`.\n*\n*\n* @returns {NumberArray} high resolution time\n*\n* @example\n* var t = tic();\n* // returns [<number>,<number>]\n*/\nfunction tic() {\n\treturn proc.hrtime();\n}\n\n\n// EXPORTS //\n\nmodule.exports = tic;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a high-resolution time.\n*\n* @module @stdlib/time/tic\n*\n* @example\n* var tic = require( '@stdlib/time/tic' );\n*\n* var t = tic();\n* // returns [<number>,<number>]\n*/\n\n// MODULES //\n\nvar tic = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = tic;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is array-like\n*\n* @example\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLike( {'length':10} );\n* // returns true\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( './../../../is-array-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array-like object passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array-like object function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arraylikefcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array-like object passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array-like object for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArrayLike( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum length of a generic array.\n*\n* @module @stdlib/constants/array/max-array-length\n*\n* @example\n* var MAX_ARRAY_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n* // returns 4294967295\n*/\n\n// MAIN //\n\n/**\n* Maximum length of a generic array.\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\nvar MAX_ARRAY_LENGTH = 4294967295>>>0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = MAX_ARRAY_LENGTH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only nonnegative integers.\n*\n* @module @stdlib/assert/is-nonnegative-integer-array\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' );\n*\n* var bool = isNonNegativeIntegerArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' ).primitives;\n*\n* var bool = isNonNegativeIntegerArray( [ 1.0, 0.0, 10.0 ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' ).objects;\n*\n* var bool = isNonNegativeIntegerArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 1.0, 0.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonNegativeInteger = require( './../../is-nonnegative-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isNonNegativeIntegerArray = arrayfun( isNonNegativeInteger );\nsetReadOnly( isNonNegativeIntegerArray, 'primitives', arrayfun( isNonNegativeInteger.isPrimitive ) );\nsetReadOnly( isNonNegativeIntegerArray, 'objects', arrayfun( isNonNegativeInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' ).primitives;\nvar format = require( '@stdlib/string/format' );\nvar tic = require( './../../tic' );\n\n\n// MAIN //\n\n/**\n* Returns a high-resolution time difference.\n*\n* ## Notes\n*\n* -   Output format: `[seconds, nanoseconds]`.\n*\n*\n* @param {NonNegativeIntegerArray} time - high-resolution time\n* @throws {TypeError} must provide a nonnegative integer array\n* @throws {RangeError} input array must have length `2`\n* @returns {NumberArray} high resolution time difference\n*\n* @example\n* var tic = require( '@stdlib/time/tic' );\n*\n* var start = tic();\n* var delta = toc( start );\n* // returns [<number>,<number>]\n*/\nfunction toc( time ) {\n\tvar now = tic();\n\tvar sec;\n\tvar ns;\n\tif ( !isNonNegativeIntegerArray( time ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array of nonnegative integers. Value: `%s`.', time ) );\n\t}\n\tif ( time.length !== 2 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Input array must contain two elements. Value: `%s`.', time ) );\n\t}\n\tsec = now[ 0 ] - time[ 0 ];\n\tns = now[ 1 ] - time[ 1 ];\n\tif ( sec > 0 && ns < 0 ) {\n\t\tsec -= 1;\n\t\tns += 1e9;\n\t}\n\telse if ( sec < 0 && ns > 0 ) {\n\t\tsec += 1;\n\t\tns -= 1e9;\n\t}\n\treturn [ sec, ns ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = toc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a high-resolution time difference.\n*\n* @module @stdlib/time/toc\n*\n* @example\n* var tic = require( '@stdlib/time/tic' );\n* var toc = require( '@stdlib/time/toc' );\n*\n* var start = tic();\n* var delta = toc( start );\n* // returns [<number>,<number>]\n*/\n\n// MODULES //\n\nvar toc = require( './toc.js' );\n\n\n// EXPORTS //\n\nmodule.exports = toc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = setTimeout;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = clearTimeout;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar timeout = require( './set_timeout.js' );\nvar clear = require( './clear_timeout.js' );\n\n\n// MAIN //\n\n/**\n* Runs a benchmark.\n*\n* @private\n* @returns {void}\n*/\nfunction run() {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tvar id;\n\tif ( this._skip ) {\n\t\tthis.comment( 'SKIP '+this.name );\n\t\treturn this.end();\n\t}\n\tif ( !this._benchmark ) {\n\t\tthis.comment( 'TODO '+this.name );\n\t\treturn this.end();\n\t}\n\tself = this;\n\tthis._running = true;\n\n\tid = timeout( onTimeout, this.timeout );\n\tthis.once( 'end', endTimeout );\n\n\tthis.emit( 'prerun' );\n\tthis._benchmark( this );\n\tthis.emit( 'run' );\n\n\t/**\n\t* Callback invoked once a timeout ends.\n\t*\n\t* @private\n\t*/\n\tfunction onTimeout() {\n\t\tself.fail( 'benchmark timed out after '+self.timeout+'ms' );\n\t}\n\n\t/**\n\t* Clears a timeout.\n\t*\n\t* @private\n\t*/\n\tfunction endTimeout() {\n\t\tclear( id );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = run;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Forcefully ends a benchmark.\n*\n* @private\n* @returns {void}\n*/\nfunction exit() {\n\t/* eslint-disable no-invalid-this */\n\tif ( this._exited ) {\n\t\t// If we have already \"exited\", do not create more failing assertions when one should suffice...\n\t\treturn;\n\t}\n\t// Only \"exit\" when a benchmark has either not yet been run or is currently running. If a benchmark has already ended, no need to generate a failing assertion.\n\tif ( !this._ended ) {\n\t\tthis._exited = true;\n\t\tthis.fail( 'benchmark exited without ending' );\n\n\t\t// Allow running benchmarks to call `end` on their own...\n\t\tif ( !this._running ) {\n\t\t\tthis.end();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = exit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a `boolean` indicating if a benchmark has ended.\n*\n* @private\n* @returns {boolean} boolean indicating if a benchmark has ended\n*/\nfunction ended() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._ended;\n}\n\n\n// EXPORTS //\n\nmodule.exports = ended;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Generates an assertion.\n*\n* @private\n* @param {boolean} ok - assertion outcome\n* @param {Options} opts - options\n*/\nfunction assert( ok, opts ) {\n\tvar result;\n\tvar err;\n\n\tresult = {\n\t\t'id': this._count,\n\t\t'ok': ok,\n\t\t'skip': opts.skip,\n\t\t'todo': opts.todo,\n\t\t'name': opts.message || '(unnamed assert)',\n\t\t'operator': opts.operator\n\t};\n\tif ( hasOwnProp( opts, 'actual' ) ) {\n\t\tresult.actual = opts.actual;\n\t}\n\tif ( hasOwnProp( opts, 'expected' ) ) {\n\t\tresult.expected = opts.expected;\n\t}\n\tif ( !ok ) {\n\t\tresult.error = opts.error || new Error( this.name );\n\t\terr = new Error( 'not implemented' ); // eslint-disable-line no-unused-vars\n\n\t\t// TODO: generate an exception in order to locate the calling function (https://github.com/substack/tape/blob/master/lib/test.js#L215)\n\t}\n\tthis._count += 1;\n\tthis.emit( 'result', result );\n}\n\n\n// EXPORTS //\n\nmodule.exports = assert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar RE_CHARS = /[-\\/\\\\^$*+?.()|[\\]{}]/g; // eslint-disable-line no-useless-escape\n\n\n// MAIN //\n\n/**\n* Escapes a regular expression string.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} first argument must be a string\n* @returns {string} escaped string\n*\n* @example\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\nfunction rescape( str ) {\n\tvar len;\n\tvar s;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression string. Value: `%s`.', str ) );\n\t}\n\t// Check if the string starts with a forward slash...\n\tif ( str[ 0 ] === '/' ) {\n\t\t// Find the last forward slash...\n\t\tlen = str.length;\n\t\tfor ( i = len-1; i >= 0; i-- ) {\n\t\t\tif ( str[ i ] === '/' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// If we searched the string to no avail or if the first letter is not `/`, assume that the string is not of the form `/[...]/[guimy]`:\n\tif ( i === void 0 || i <= 0 ) {\n\t\treturn str.replace( RE_CHARS, '\\\\$&' );\n\t}\n\t// We need to de-construct the string...\n\ts = str.substring( 1, i );\n\n\t// Only escape the characters between the `/`:\n\ts = s.replace( RE_CHARS, '\\\\$&' );\n\n\t// Reassemble:\n\tstr = str[ 0 ] + s + str.substring( i );\n\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rescape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Escape a regular expression string or pattern.\n*\n* @module @stdlib/utils/escape-regexp-string\n*\n* @example\n* var rescape = require( '@stdlib/utils/escape-regexp-string' );\n*\n* var str = rescape( '[A-Z]*' );\n* // returns '\\\\[A\\\\-Z\\\\]\\\\*'\n*/\n\n// MODULES //\n\nvar rescape = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = rescape;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exec = require( './exec.js' );\n\n\n// MAIN //\n\n/**\n* Attempts to call a `RegExp` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `RegExp` method\n*/\nfunction test( value ) {\n\ttry {\n\t\texec.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar exec = RegExp.prototype.exec; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = exec;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2exec.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a regular expression.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a regular expression\n*\n* @example\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* @example\n* var bool = isRegExp( {} );\n* // returns false\n*/\nfunction isRegExp( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof RegExp ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object RegExp]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar rescape = require( '@stdlib/utils/escape-regexp-string' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isRegExp = require( '@stdlib/assert/is-regexp' );\nvar format = require( './../../format' );\n\n\n// MAIN //\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @param {string} str - input string\n* @param {(string|RegExp)} search - search expression\n* @param {(string|Function)} newval - replacement value or function\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument argument must be a string or regular expression\n* @throws {TypeError} third argument must be a string or function\n* @returns {string} new string containing replacement(s)\n*\n* @example\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* @example\n* var str = 'Hello World';\n* var out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*\n* @example\n* var capitalize = require( '@stdlib/string/capitalize' );\n*\n* var str = 'Oranges and lemons say the bells of St. Clement\\'s';\n*\n* function replacer( match, p1 ) {\n*     return capitalize( p1 );\n* }\n*\n* var out = replace( str, /([^\\s]*)/gi, replacer);\n* // returns 'Oranges And Lemons Say The Bells Of St. Clement\\'s'\n*/\nfunction replace( str, search, newval ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( isString( search ) ) {\n\t\tsearch = rescape( search );\n\t\tsearch = new RegExp( search, 'g' );\n\t}\n\telse if ( !isRegExp( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string or regular expression. Value: `%s`.', search ) );\n\t}\n\tif ( !isString( newval ) && !isFunction( newval ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string or replacement function. Value: `%s`.', newval ) );\n\t}\n\treturn str.replace( search, newval );\n}\n\n\n// EXPORTS //\n\nmodule.exports = replace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Replace search occurrences with a replacement string.\n*\n* @module @stdlib/string/replace\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n*\n* var str = 'beep';\n* var out = replace( str, 'e', 'o' );\n* // returns 'boop'\n*\n* str = 'Hello World';\n* out = replace( str, /world/i, 'Mr. President' );\n* // returns 'Hello Mr. President'\n*/\n\n// MODULES //\n\nvar replace = require( './replace.js' );\n\n\n// EXPORTS //\n\nmodule.exports = replace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar replace = require( './../../replace' );\nvar format = require( './../../format' );\n\n\n// VARIABLES //\n\n// The following regular expression should suffice to polyfill (most?) all environments.\nvar RE = /^[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*([\\S\\s]*?)[\\u0020\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*$/;\n\n\n// MAIN //\n\n/**\n* Trim whitespace characters from beginning and end of a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} trimmed string\n*\n* @example\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* @example\n* var out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* @example\n* var out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\nfunction trim( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\treturn replace( str, RE, '$1' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Trim whitespace characters from the beginning and end of a string.\n*\n* @module @stdlib/string/trim\n*\n* @example\n* var trim = require( '@stdlib/string/trim' );\n*\n* var out = trim( '   Whitespace   ' );\n* // returns 'Whitespace'\n*\n* out = trim( '\\t\\t\\tTabs\\t\\t\\t' );\n* // returns 'Tabs'\n*\n* out = trim( '\\n\\n\\nNew Lines\\n\\n\\n' );\n* // returns 'New Lines'\n*/\n\n// MODULES //\n\nvar trim = require( './trim.js' );\n\n\n// EXPORTS //\n\nmodule.exports = trim;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching a decimal number with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '\\\\r?\\\\n';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a newline character sequence.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to create a capture group for the match\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EOL = reEOL();\n* var bool = RE_EOL.test( '\\r\\n' );\n* // returns true\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n*\n* var RE_EOL = reEOL({\n*     'flags': 'g'\n* });\n* var str = '1\\n2\\n3';\n* var out = replace( str, RE_EOL, '' );\n*/\nfunction reEOL( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /\\r?\\n/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reEOL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to match a newline character sequence.\n*\n* @module @stdlib/regexp/eol\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var RE_EOL = reEOL();\n*\n* var bool = RE_EOL.test( '\\n' );\n* // returns true\n*\n* bool = RE_EOL.test( '\\\\r\\\\n' );\n* // returns false\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var replace = require( '@stdlib/string/replace' );\n*\n* var RE_EOL = reEOL({\n*     'flags': 'g'\n* });\n* var str = '1\\n2\\n3';\n* var out = replace( str, RE_EOL, '' );\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var bool = reEOL.REGEXP.test( '\\r\\n' );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reEOL = require( './main.js' );\nvar REGEXP_CAPTURE = require( './regexp_capture.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reEOL, 'REGEXP', REGEXP );\nsetReadOnly( reEOL, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nmodule.exports = reEOL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reEOL = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /(\\r?\\n)/\n*/\nvar REGEXP_CAPTURE = reEOL({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP_CAPTURE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reEOL = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /\\r?\\n/\n*/\nvar REGEXP = reEOL();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar trim = require( '@stdlib/string/trim' );\nvar replace = require( '@stdlib/string/replace' );\nvar EOL = require( '@stdlib/regexp/eol' ).REGEXP;\n\n\n// VARIABLES //\n\nvar RE_COMMENT = /^#\\s*/;\n\n\n// MAIN //\n\n/**\n* Writes a comment.\n*\n* @private\n* @param {string} msg - comment message\n*/\nfunction comment( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tvar lines;\n\tvar i;\n\tmsg = trim( msg );\n\tlines = msg.split( EOL );\n\tfor ( i = 0; i < lines.length; i++ ) {\n\t\tmsg = trim( lines[ i ] );\n\t\tmsg = replace( msg, RE_COMMENT, '' );\n\t\tthis.emit( 'result', msg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = comment;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates an assertion which will be skipped.\n*\n* @private\n* @param {*} value - value\n* @param {string} msg - message\n*/\nfunction skip( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( true, {\n\t\t'message': msg,\n\t\t'operator': 'skip',\n\t\t'skip': true\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = skip;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates an assertion which should be implemented.\n*\n* @private\n* @param {*} value - value\n* @param {string} msg - message\n*/\nfunction todo( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !!value, {\n\t\t'message': msg,\n\t\t'operator': 'todo',\n\t\t'todo': true\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = todo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a failing assertion.\n*\n* @private\n* @param {string} msg - message\n*/\nfunction fail( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( false, {\n\t\t'message': msg,\n\t\t'operator': 'fail'\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = fail;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a passing assertion.\n*\n* @private\n* @param {string} msg - message\n*/\nfunction pass( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( true, {\n\t\t'message': msg,\n\t\t'operator': 'pass'\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = pass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that a `value` is truthy.\n*\n* @private\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nfunction ok( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !!value, {\n\t\t'message': msg || 'should be truthy',\n\t\t'operator': 'ok',\n\t\t'expected': true,\n\t\t'actual': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = ok;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that a `value` is falsy.\n*\n* @private\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nfunction notOk( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !value, {\n\t\t'message': msg || 'should be falsy',\n\t\t'operator': 'notOk',\n\t\t'expected': false,\n\t\t'actual': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = notOk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is strictly equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nfunction equal( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( actual === expected, {\n\t\t'message': msg || 'should be equal',\n\t\t'operator': 'equal',\n\t\t'expected': expected,\n\t\t'actual': actual\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = equal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is not strictly equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nfunction notEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( actual !== expected, {\n\t\t'message': msg || 'should not be equal',\n\t\t'operator': 'notEqual',\n\t\t'expected': expected,\n\t\t'actual': actual\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = notEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is deeply equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nfunction deepEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis.comment( 'actual: '+actual+'. expected: '+expected+'. msg: '+msg+'.' );\n\n\t// TODO: implement\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is not deeply equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nfunction notDeepEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis.comment( 'actual: '+actual+'. expected: '+expected+'. msg: '+msg+'.' );\n\n\t// TODO: implement\n}\n\n\n// EXPORTS //\n\nmodule.exports = notDeepEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Runs a function on a subsequent turn of the event loop.\n*\n* ## Notes\n*\n* -   `process.nextTick` is only Node.js.\n* -   `setImmediate` is non-standard.\n* -   Everything else is browser based (e.g., mutation observer, requestAnimationFrame, etc).\n* -   Only API which is universal is `setTimeout`.\n* -   Note that `0` is not actually `0ms`. Browser environments commonly have a minimum delay of `4ms`. This is acceptable. Here, the main intent of this function is to give the runtime a chance to run garbage collection, clear state, and tend to any other pending tasks before returning control to benchmark tasks. The larger aim (attainable or not) is to provide each benchmark run with as much of a fresh state as possible.\n*\n*\n* @private\n* @param {Function} fcn - function to run upon a subsequent turn of the event loop\n*/\nfunction nextTick( fcn ) {\n\tsetTimeout( fcn, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nextTick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nextTick = require( './../utils/next_tick.js' );\n\n\n// MAIN //\n\n/**\n* Ends a benchmark.\n*\n* @private\n*/\nfunction end() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( this._ended ) {\n\t\tthis.fail( '.end() called more than once' );\n\t} else {\n\t\t// Prevents releasing the zalgo when running synchronous benchmarks.\n\t\tnextTick( onTick );\n\t}\n\tthis._ended = true;\n\tthis._running = false;\n\n\t/**\n\t* Callback invoked upon a subsequent tick of the event loop.\n\t*\n\t* @private\n\t*/\n\tfunction onTick() {\n\t\tself.emit( 'end' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = end;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar EventEmitter = require( 'events' ).EventEmitter;\nvar inherit = require( '@stdlib/utils/inherit' );\nvar defineProperty = require( '@stdlib/utils/define-property' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar tic = require( '@stdlib/time/tic' );\nvar toc = require( '@stdlib/time/toc' );\nvar run = require( './run.js' );\nvar exit = require( './exit.js' );\nvar ended = require( './ended.js' );\nvar assert = require( './assert.js' );\nvar comment = require( './comment.js' );\nvar skip = require( './skip.js' );\nvar todo = require( './todo.js' );\nvar fail = require( './fail.js' );\nvar pass = require( './pass.js' );\nvar ok = require( './ok.js' );\nvar notOk = require( './not_ok.js' );\nvar equal = require( './equal.js' );\nvar notEqual = require( './not_equal.js' );\nvar deepEqual = require( './deep_equal.js' );\nvar notDeepEqual = require( './not_deep_equal.js' );\nvar end = require( './end.js' );\n\n\n// MAIN //\n\n/**\n* Benchmark constructor.\n*\n* @constructor\n* @param {string} name - benchmark name\n* @param {Options} opts - benchmark options\n* @param {boolean} opts.skip - boolean indicating whether to skip a benchmark\n* @param {PositiveInteger} opts.iterations - number of iterations\n* @param {PositiveInteger} opts.timeout - number of milliseconds before a benchmark automatically fails\n* @param {Function} [benchmark] - function containing benchmark code\n* @returns {Benchmark} Benchmark instance\n*\n* @example\n* var bench = new Benchmark( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.comment( 'Running benchmarks...' );\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.comment( 'Finished running benchmarks.' );\n*     b.end();\n* });\n*/\nfunction Benchmark( name, opts, benchmark ) {\n\tvar hasTicked;\n\tvar hasTocked;\n\tvar self;\n\tvar time;\n\tif ( !( this instanceof Benchmark ) ) {\n\t\treturn new Benchmark( name, opts, benchmark );\n\t}\n\tself = this;\n\thasTicked = false;\n\thasTocked = false;\n\n\tEventEmitter.call( this );\n\n\t// Private properties:\n\tsetReadOnly( this, '_benchmark', benchmark );\n\tsetReadOnly( this, '_skip', opts.skip );\n\n\tdefineProperty( this, '_ended', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_running', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_exited', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_count', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': 0\n\t});\n\n\t// Read-only:\n\tsetReadOnly( this, 'name', name );\n\tsetReadOnly( this, 'tic', start );\n\tsetReadOnly( this, 'toc', stop );\n\tsetReadOnly( this, 'iterations', opts.iterations );\n\tsetReadOnly( this, 'timeout', opts.timeout );\n\n\treturn this;\n\n\t/**\n\t* Starts a benchmark timer.\n\t*\n\t* ## Notes\n\t*\n\t* -   Using a scoped variable prevents nefarious mutation by bad actors hoping to manipulate benchmark results.\n\t* -   The one attack vector which remains is manipulation of the `require` cache for `tic` and `toc`.\n\t* -   One way to combat cache manipulation is by comparing the checksum of `Function#toString()` against known values.\n\t*\n\t* @private\n\t*/\n\tfunction start() {\n\t\tif ( hasTicked ) {\n\t\t\tself.fail( '.tic() called more than once' );\n\t\t} else {\n\t\t\tself.emit( 'tic' );\n\t\t\thasTicked = true;\n\t\t\ttime = tic();\n\t\t}\n\t}\n\n\t/**\n\t* Stops a benchmark timer.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction stop() {\n\t\tvar elapsed;\n\t\tvar secs;\n\t\tvar rate;\n\t\tvar out;\n\n\t\tif ( hasTicked === false ) {\n\t\t\treturn self.fail( '.toc() called before .tic()' );\n\t\t}\n\t\telapsed = toc( time );\n\t\tif ( hasTocked ) {\n\t\t\treturn self.fail( '.toc() called more than once' );\n\t\t}\n\t\thasTocked = true;\n\t\tself.emit( 'toc' );\n\n\t\tsecs = elapsed[ 0 ] + ( elapsed[ 1 ]/1e9 );\n\t\trate = self.iterations / secs;\n\n\t\tout = {\n\t\t\t'ok': true,\n\t\t\t'operator': 'result',\n\t\t\t'iterations': self.iterations,\n\t\t\t'elapsed': secs,\n\t\t\t'rate': rate\n\t\t};\n\t\tself.emit( 'result', out );\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Benchmark, EventEmitter );\n\n/**\n* Runs a benchmark.\n*\n* @private\n* @name run\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'run', run );\n\n/**\n* Forcefully ends a benchmark.\n*\n* @private\n* @name exit\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'exit', exit );\n\n/**\n* Returns a `boolean` indicating if a benchmark has ended.\n*\n* @private\n* @name ended\n* @memberof Benchmark.prototype\n* @type {Function}\n* @returns {boolean} boolean indicating if a benchmark has ended\n*/\nsetReadOnly( Benchmark.prototype, 'ended', ended );\n\n/**\n* Generates an assertion.\n*\n* @private\n* @name _assert\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {boolean} ok - assertion outcome\n* @param {Options} opts - options\n*/\nsetReadOnly( Benchmark.prototype, '_assert', assert );\n\n/**\n* Writes a comment.\n*\n* @name comment\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - comment message\n*/\nsetReadOnly( Benchmark.prototype, 'comment', comment );\n\n/**\n* Generates an assertion which will be skipped.\n*\n* @name skip\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'skip', skip );\n\n/**\n* Generates an assertion which should be implemented.\n*\n* @name todo\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'todo', todo );\n\n/**\n* Generates a failing assertion.\n*\n* @name fail\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'fail', fail );\n\n/**\n* Generates a passing assertion.\n*\n* @name pass\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'pass', pass );\n\n/**\n* Asserts that a `value` is truthy.\n*\n* @name ok\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'ok', ok );\n\n/**\n* Asserts that a `value` is falsy.\n*\n* @name notOk\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'notOk', notOk );\n\n/**\n* Asserts that `actual` is strictly equal to `expected`.\n*\n* @name equal\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'equal', equal );\n\n/**\n* Asserts that `actual` is not strictly equal to `expected`.\n*\n* @name notEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'notEqual', notEqual );\n\n/**\n* Asserts that `actual` is deeply equal to `expected`.\n*\n* @name deepEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nsetReadOnly( Benchmark.prototype, 'deepEqual', deepEqual );\n\n/**\n* Asserts that `actual` is not deeply equal to `expected`.\n*\n* @name notDeepEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nsetReadOnly( Benchmark.prototype, 'notDeepEqual', notDeepEqual );\n\n/**\n* Ends a benchmark.\n*\n* @name end\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'end', end );\n\n\n// EXPORTS //\n\nmodule.exports = Benchmark;\n","/* eslint-disable stdlib/jsdoc-require-throws-tags */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar replace = require( '@stdlib/string/replace' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar RE_EOL = require( '@stdlib/regexp/eol' ).REGEXP;\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\n\n\n// MAIN //\n\n/**\n* Encodes an assertion.\n*\n* @private\n* @param {Object} result - result\n* @param {PositiveInteger} count - result count\n* @returns {string} encoded assertion\n*/\nfunction encodeAssertion( result, count ) {\n\tvar actualStack;\n\tvar errorStack;\n\tvar expected;\n\tvar actual;\n\tvar indent;\n\tvar stack;\n\tvar lines;\n\tvar out;\n\tvar i;\n\n\tout = '';\n\n\tif ( !result.ok ) {\n\t\tout += 'not ';\n\t}\n\t// Add result count:\n\tout += 'ok ' + count;\n\n\t// Add description:\n\tif ( result.name ) {\n\t\tout += ' ' + replace( result.name.toString(), RE_WHITESPACE, ' ' );\n\t}\n\t// Append directives:\n\tif ( result.skip ) {\n\t\tout += ' # SKIP';\n\t} else if ( result.todo ) {\n\t\tout += ' # TODO';\n\t}\n\tout += '\\n';\n\tif ( result.ok ) {\n\t\treturn out;\n\t}\n\t// Format diagnostics as YAML...\n\tindent = '  ';\n\tout += indent + '---\\n';\n\tout += indent + 'operator: ' + result.operator + '\\n';\n\tif (\n\t\thasOwnProp( result, 'actual' ) ||\n\t\thasOwnProp( result, 'expected' )\n\t) {\n\t\t// TODO: inspect object logic (https://github.com/substack/tape/blob/master/lib/results.js#L145)\n\t\texpected = result.expected;\n\t\tactual = result.actual;\n\t\tif ( actual !== actual && expected !== expected ) {\n\t\t\tthrow new Error( 'unexpected error.' ); // TODO: remove me\n\t\t}\n\t}\n\tif ( result.at ) {\n\t\tout += indent + 'at: ' + result.at + '\\n';\n\t}\n\tif ( result.actual ) {\n\t\tactualStack = result.actual.stack;\n\t}\n\tif ( result.error ) {\n\t\terrorStack = result.error.stack;\n\t}\n\tif ( actualStack ) {\n\t\tstack = actualStack;\n\t} else {\n\t\tstack = errorStack;\n\t}\n\tif ( stack ) {\n\t\tlines = stack.toString().split( RE_EOL );\n\t\tout += indent + 'stack: |-\\n';\n\t\tfor ( i = 0; i < lines.length; i++ ) {\n\t\t\tout += indent + '  ' + lines[ i ] + '\\n';\n\t\t}\n\t}\n\tout += indent + '...\\n';\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = encodeAssertion;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar YAML_INDENT = '  ';\nvar YAML_BEGIN = YAML_INDENT + '---\\n';\nvar YAML_END = YAML_INDENT + '...\\n';\n\n\n// MAIN //\n\n/**\n* Encodes a result as a YAML block.\n*\n* @private\n* @param {Object} result - result\n* @returns {string} encoded result\n*/\nfunction encodeResult( result ) {\n\tvar out = YAML_BEGIN;\n\tout += YAML_INDENT + 'iterations: '+result.iterations+'\\n';\n\tout += YAML_INDENT + 'elapsed: '+result.elapsed+'\\n';\n\tout += YAML_INDENT + 'rate: '+result.rate+'\\n';\n\tout += YAML_END;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = encodeResult;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar encodeAssertion = require( './encode_assertion.js' );\nvar encodeResult = require( './encode_result.js' );\n\n\n// MAIN //\n\n/**\n* Adds a new benchmark.\n*\n* @private\n* @param {Benchmark} b - benchmark\n*/\nfunction push( b ) {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\n\tthis._benchmarks.push( b );\n\n\tb.once( 'prerun', onPreRun );\n\tb.on( 'result', onResult );\n\n\tthis.emit( '_push', b );\n\n\t/**\n\t* Callback invoked upon a `prerun` event.\n\t*\n\t* @private\n\t*/\n\tfunction onPreRun() {\n\t\tself._stream.write( '# '+b.name+'\\n' );\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(Object|string)} res - result\n\t* @returns {void}\n\t*/\n\tfunction onResult( res ) {\n\t\t// Check for a comment...\n\t\tif ( isString( res ) ) {\n\t\t\treturn self._stream.write( '# '+res+'\\n' );\n\t\t}\n\t\tif ( res.operator === 'result' ) {\n\t\t\tres = encodeResult( res );\n\t\t\treturn self._stream.write( res );\n\t\t}\n\t\tself.total += 1;\n\t\tif ( res.ok ) {\n\t\t\tif ( res.skip ) {\n\t\t\t\tself.skip += 1;\n\t\t\t} else if ( res.todo ) {\n\t\t\t\tself.todo += 1;\n\t\t\t}\n\t\t\tself.pass += 1;\n\t\t}\n\t\t// According to the TAP spec, todos pass even if not \"ok\"...\n\t\telse if ( res.todo ) {\n\t\t\tself.pass += 1;\n\t\t\tself.todo += 1;\n\t\t}\n\t\t// Everything else is a failure...\n\t\telse {\n\t\t\tself.fail += 1;\n\t\t}\n\t\tres = encodeAssertion( res, self.total );\n\t\tself._stream.write( res );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar TransformStream = require( '@stdlib/streams/node/transform' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar nextTick = require( './../utils/next_tick.js' );\n\n\n// VARIABLES //\n\nvar TAP_HEADER = 'TAP version 13';\n\n\n// MAIN //\n\n/**\n* Creates a results stream.\n*\n* @private\n* @param {Options} [options] - stream options\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {TransformStream} transform stream\n*/\nfunction createStream( options ) {\n\t/* eslint-disable no-invalid-this */\n\tvar stream;\n\tvar opts;\n\tvar self;\n\tvar id;\n\n\tself = this;\n\tif ( arguments.length ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\tstream = new TransformStream( opts );\n\tif ( opts.objectMode ) {\n\t\tid = 0;\n\t\tthis.on( '_push', onPush );\n\t\tthis.on( 'done', onDone );\n\t} else {\n\t\tstream.write( TAP_HEADER+'\\n' );\n\t\tthis._stream.pipe( stream );\n\t}\n\tthis.on( '_run', onRun );\n\treturn stream;\n\n\t/**\n\t* Runs the next benchmark.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tnextTick( onTick );\n\t}\n\n\t/**\n\t* Callback invoked upon the next tick.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onTick() {\n\t\tvar b = self._benchmarks.shift();\n\t\tif ( b ) {\n\t\t\tb.run();\n\t\t\tif ( !b.ended() ) {\n\t\t\t\treturn b.once( 'end', next );\n\t\t\t}\n\t\t\treturn next();\n\t\t}\n\t\tself._running = false;\n\t\tself.emit( 'done' );\n\t}\n\n\t/**\n\t* Callback invoked upon a run event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onRun() {\n\t\tif ( !self._running ) {\n\t\t\tself._running = true;\n\t\t\treturn next();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a push event.\n\t*\n\t* @private\n\t* @param {Benchmark} b - benchmark\n\t*/\n\tfunction onPush( b ) {\n\t\tvar bid = id;\n\t\tid += 1;\n\n\t\tb.once( 'prerun', onPreRun );\n\t\tb.on( 'result', onResult );\n\t\tb.on( 'end', onEnd );\n\n\t\t/**\n\t\t* Callback invoked upon a `prerun` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onPreRun() {\n\t\t\tvar row = {\n\t\t\t\t'type': 'benchmark',\n\t\t\t\t'name': b.name,\n\t\t\t\t'id': bid\n\t\t\t};\n\t\t\tstream.write( row );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked upon a `result` event.\n\t\t*\n\t\t* @private\n\t\t* @param {(Object|string)} res - result\n\t\t*/\n\t\tfunction onResult( res ) {\n\t\t\tif ( isString( res ) ) {\n\t\t\t\tres = {\n\t\t\t\t\t'benchmark': bid,\n\t\t\t\t\t'type': 'comment',\n\t\t\t\t\t'name': res\n\t\t\t\t};\n\t\t\t} else if ( res.operator === 'result' ) {\n\t\t\t\tres.benchmark = bid;\n\t\t\t\tres.type = 'result';\n\t\t\t} else {\n\t\t\t\tres.benchmark = bid;\n\t\t\t\tres.type = 'assert';\n\t\t\t}\n\t\t\tstream.write( res );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked upon an `end` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onEnd() {\n\t\t\tstream.write({\n\t\t\t\t'benchmark': bid,\n\t\t\t\t'type': 'end'\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `done` event.\n\t*\n\t* @private\n\t*/\n\tfunction onDone() {\n\t\tstream.destroy();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = createStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Runs pending benchmarks.\n*\n* @private\n*/\nfunction run() {\n\t/* eslint-disable no-invalid-this */\n\tthis.emit( '_run' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = run;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes any pending benchmarks.\n*\n* @private\n*/\nfunction clear() {\n\t/* eslint-disable no-invalid-this */\n\tthis._benchmarks.length = 0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = clear;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Closes a benchmark runner.\n*\n* @private\n* @returns {void}\n*/\nfunction closeRunner() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( this._closed ) {\n\t\treturn;\n\t}\n\tthis._closed = true;\n\tif ( this._benchmarks.length ) {\n\t\tthis.clear();\n\t\tthis._stream.write( '# WARNING: harness closed before completion.\\n' );\n\t} else {\n\t\tthis._stream.write( '#\\n' );\n\t\tthis._stream.write( '1..'+this.total+'\\n' );\n\t\tthis._stream.write( '# total '+this.total+'\\n' );\n\t\tthis._stream.write( '# pass  '+this.pass+'\\n' );\n\t\tif ( this.fail ) {\n\t\t\tthis._stream.write( '# fail  '+this.fail+'\\n' );\n\t\t}\n\t\tif ( this.skip ) {\n\t\t\tthis._stream.write( '# skip  '+this.skip+'\\n' );\n\t\t}\n\t\tif ( this.todo ) {\n\t\t\tthis._stream.write( '# todo  '+this.todo+'\\n' );\n\t\t}\n\t\tif ( !this.fail ) {\n\t\t\tthis._stream.write( '#\\n# ok\\n' );\n\t\t}\n\t}\n\tthis._stream.once( 'close', onClose );\n\tthis._stream.destroy();\n\n\t/**\n\t* Callback invoked upon a `close` event.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tself.emit( 'close' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = closeRunner;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Forcefully exits a benchmark runner.\n*\n* @private\n*/\nfunction exit() {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tvar i;\n\tfor ( i = 0; i < this._benchmarks.length; i++ ) {\n\t\tthis._benchmarks[ i ].exit();\n\t}\n\tself = this;\n\tthis.clear();\n\tthis._stream.once( 'close', onClose );\n\tthis._stream.destroy();\n\n\t/**\n\t* Callback invoked upon a `close` event.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tself.emit( 'close' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = exit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar EventEmitter = require( 'events' ).EventEmitter;\nvar inherit = require( '@stdlib/utils/inherit' );\nvar defineProperty = require( '@stdlib/utils/define-property' );\nvar TransformStream = require( '@stdlib/streams/node/transform' );\nvar push = require( './push.js' );\nvar createStream = require( './create_stream.js' );\nvar run = require( './run.js' );\nvar clear = require( './clear.js' );\nvar close = require( './close.js' ); // eslint-disable-line stdlib/no-redeclare\nvar exit = require( './exit.js' );\n\n\n// MAIN //\n\n/**\n* Benchmark runner.\n*\n* @private\n* @constructor\n* @returns {Runner} Runner instance\n*\n* @example\n* var runner = new Runner();\n*/\nfunction Runner() {\n\tif ( !( this instanceof Runner ) ) {\n\t\treturn new Runner();\n\t}\n\tEventEmitter.call( this );\n\n\t// Private properties:\n\tdefineProperty( this, '_benchmarks', {\n\t\t'value': [],\n\t\t'configurable': false,\n\t\t'writable': false,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_stream', {\n\t\t'value': new TransformStream(),\n\t\t'configurable': false,\n\t\t'writable': false,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_closed', {\n\t\t'value': false,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_running', {\n\t\t'value': false,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': false\n\t});\n\n\t// Public properties:\n\tdefineProperty( this, 'total', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'fail', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'pass', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'skip', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'todo', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\treturn this;\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Runner, EventEmitter );\n\n/**\n* Adds a new benchmark.\n*\n* @private\n* @memberof Runner.prototype\n* @function push\n* @param {Benchmark} b - benchmark\n*/\ndefineProperty( Runner.prototype, 'push', {\n\t'value': push,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Creates a results stream.\n*\n* @private\n* @memberof Runner.prototype\n* @function createStream\n* @param {Options} [options] - stream options\n* @returns {TransformStream} transform stream\n*/\ndefineProperty( Runner.prototype, 'createStream', {\n\t'value': createStream,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Runs pending benchmarks.\n*\n* @private\n* @memberof Runner.prototype\n* @function run\n*/\ndefineProperty( Runner.prototype, 'run', {\n\t'value': run,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Removes any pending benchmarks.\n*\n* @private\n* @memberof Runner.prototype\n* @function clear\n*/\ndefineProperty( Runner.prototype, 'clear', {\n\t'value': clear,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Closes a benchmark runner.\n*\n* @private\n* @memberof Runner.prototype\n* @function close\n*/\ndefineProperty( Runner.prototype, 'close', {\n\t'value': close,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Forcefully exits a benchmark runner.\n*\n* @private\n* @memberof Runner.prototype\n* @function exit\n*/\ndefineProperty( Runner.prototype, 'exit', {\n\t'value': exit,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n\n// EXPORTS //\n\nmodule.exports = Runner;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is `null`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is null\n*\n* @example\n* var bool = isNull( null );\n* // returns true\n*\n* bool = isNull( true );\n* // returns false\n*/\nfunction isNull( value ) {\n\treturn value === null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNull;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `null`.\n*\n* @module @stdlib/assert/is-null\n*\n* @example\n* var isNull = require( '@stdlib/assert/is-null' );\n*\n* var value = null;\n*\n* var bool = isNull( value );\n* // returns true\n*/\n\n// MODULES //\n\nvar isNull = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNull;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isObject;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isNull = require( '@stdlib/assert/is-null' );\nvar isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {boolean} [options.skip] - boolean indicating whether to skip a benchmark\n* @param {(PositiveInteger|null)} [options.iterations] - number of iterations\n* @param {PositiveInteger} [options.repeats] - number of repeats\n* @param {PositiveInteger} [options.timeout] - number of milliseconds before a benchmark automatically fails\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'skip': false,\n*     'iterations': 1e6,\n*     'repeats': 3,\n*     'timeout': 10000\n* };\n*\n* var err = validate( opts, options );\n* if ( err ) {\n*    throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'skip' ) ) {\n\t\topts.skip = options.skip;\n\t\tif ( !isBoolean( opts.skip ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'skip', opts.skip ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iterations' ) ) {\n\t\topts.iterations = options.iterations;\n\t\tif (\n\t\t\t!isPositiveInteger( opts.iterations ) &&\n\t\t\t!isNull( opts.iterations )\n\t\t) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a positive integer or null. Option: `%s`.', 'iterations', opts.iterations ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'repeats' ) ) {\n\t\topts.repeats = options.repeats;\n\t\tif ( !isPositiveInteger( opts.repeats ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'repeats', opts.repeats ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'timeout' ) ) {\n\t\topts.timeout = options.timeout;\n\t\tif ( !isPositiveInteger( opts.timeout ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'timeout', opts.timeout ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar copy = require( '@stdlib/utils/copy' );\nvar Benchmark = require( './../benchmark-class' );\n\n\n// MAIN //\n\n/**\n* Runs pretests to sanity check and/or catch failures.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} options - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after completing pretests\n*/\nfunction pretest( name, options, benchmark, clbk ) {\n\tvar fail;\n\tvar opts;\n\tvar tic;\n\tvar toc;\n\tvar b;\n\n\t// Counters to determine the number of `tic` and `toc` events:\n\ttic = 0;\n\ttoc = 0;\n\n\t// Local copy:\n\topts = copy( options );\n\topts.iterations = 1;\n\n\t// Pretest to check for minimum requirements and/or errors...\n\tb = new Benchmark( name, opts, benchmark );\n\tb.on( 'result', onResult );\n\tb.on( 'tic', onTic );\n\tb.on( 'toc', onToc );\n\tb.once( 'end', onEnd );\n\tb.run();\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif (\n\t\t\t!isString( result ) &&\n\t\t\t!result.ok &&\n\t\t\t!result.todo\n\t\t) {\n\t\t\tfail = true;\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `tic` event.\n\t*\n\t* @private\n\t*/\n\tfunction onTic() {\n\t\ttic += 1;\n\t}\n\n\t/**\n\t* Callback invoked upon a `toc` event.\n\t*\n\t* @private\n\t*/\n\tfunction onToc() {\n\t\ttoc += 1;\n\t}\n\n\t/**\n\t* Callback invoked upon an `end` event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onEnd() {\n\t\tvar err;\n\t\tif ( fail ) {\n\t\t\t// Possibility that failure is intermittent, but we will assume that the usual case is that the failure would persist across all repeats and no sense failing multiple times when once suffices.\n\t\t\terr = new Error( 'unexpected error. Benchmark failed.' );\n\t\t} else if ( tic !== 1 || toc !== 1 ) {\n\t\t\t// Unable to do anything definitive with timing information (e.g., a tic with no toc or vice versa, or benchmark function calls neither tic nor toc).\n\t\t\terr = new Error( 'unexpected error. Invalid benchmark.' );\n\t\t}\n\t\tif ( err ) {\n\t\t\treturn clbk( err );\n\t\t}\n\t\treturn clbk();\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = pretest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar copy = require( '@stdlib/utils/copy' );\nvar Benchmark = require( './../benchmark-class' );\n\n\n// VARIABLES //\n\nvar MIN_TIME = 0.1; // seconds\nvar ITERATIONS = 10; // 10^1\nvar MAX_ITERATIONS = 10000000000; // 10^10\n\n\n// MAIN //\n\n/**\n* Determines the number of iterations.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} options - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after determining number of iterations\n* @returns {void}\n*/\nfunction iterations( name, options, benchmark, clbk ) {\n\tvar opts;\n\tvar time;\n\n\t// Elapsed time (in seconds):\n\ttime = 0;\n\n\t// Create a local copy:\n\topts = copy( options );\n\topts.iterations = ITERATIONS;\n\n\t// Begin running benchmarks:\n\treturn next();\n\n\t/**\n\t* Run a new benchmark.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar b = new Benchmark( name, opts, benchmark );\n\t\tb.on( 'result', onResult );\n\t\tb.once( 'end', onEnd );\n\t\tb.run();\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif ( !isString( result ) && result.operator === 'result' ) {\n\t\t\ttime = result.elapsed;\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon an `end` event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onEnd() {\n\t\tif (\n\t\t\ttime < MIN_TIME &&\n\t\t\topts.iterations < MAX_ITERATIONS\n\t\t) {\n\t\t\topts.iterations *= 10;\n\t\t\treturn next();\n\t\t}\n\t\tclbk( null, opts.iterations );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterations;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar pretest = require( './pretest.js' );\nvar iterations = require( './iterations.js' );\n\n\n// MAIN //\n\n/**\n* Performs benchmark initialization tasks.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} opts - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after completing initialization tasks\n* @returns {void}\n*/\nfunction init( name, opts, benchmark, clbk ) {\n\t// If no benchmark function, then the benchmark is considered a \"todo\", so no need to repeat multiple times...\n\tif ( !benchmark ) {\n\t\topts.repeats = 1;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n\t// If the `skip` option to `true`, no need to initialize or repeat multiple times as will not be running the benchmark:\n\tif ( opts.skip ) {\n\t\topts.repeats = 1;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n\t// Perform pretests:\n\tpretest( name, opts, benchmark, onPreTest );\n\n\t/**\n\t* Callback invoked upon completing pretests.\n\t*\n\t* @private\n\t* @param {Error} [error] - error object\n\t* @returns {void}\n\t*/\n\tfunction onPreTest( error ) {\n\t\t// If the pretests failed, don't run the benchmark multiple times...\n\t\tif ( error ) {\n\t\t\topts.repeats = 1;\n\t\t\topts.iterations = 1;\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\t// If a user specified an iteration number, we can begin running benchmarks...\n\t\tif ( opts.iterations ) {\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\t// Determine iteration number:\n\t\titerations( name, opts, benchmark, onIterations );\n\t}\n\n\t/**\n\t* Callback invoked upon determining an iteration number.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {PositiveInteger} iter - number of iterations\n\t* @returns {void}\n\t*/\n\tfunction onIterations( error, iter ) {\n\t\t// If provided an error, then a benchmark failed, and, similar to pretests, don't run the benchmark multiple times...\n\t\tif ( error ) {\n\t\t\topts.repeats = 1;\n\t\t\topts.iterations = 1;\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\topts.iterations = iter;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = init;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils/define-nonenumerable-read-only-accessor' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar Benchmark = require( './../benchmark-class' );\nvar Runner = require( './../runner' );\nvar nextTick = require( './../utils/next_tick.js' );\nvar DEFAULTS = require( './../defaults.json' );\nvar validate = require( './validate.js' );\nvar init = require( './init.js' );\n\n\n// MAIN //\n\n/**\n* Creates a benchmark harness.\n*\n* @param {Options} [options] - function options\n* @param {boolean} [options.autoclose] - boolean indicating whether to automatically close a harness after a harness finishes running all benchmarks\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*\n* @example\n* var bench = createHarness( onFinish );\n*\n* function onFinish() {\n*     bench.close();\n*     console.log( 'Exit code: %d', bench.exitCode );\n* }\n*\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n*\n* var stream = createHarness().createStream();\n* stream.pipe( stdout );\n*/\nfunction createHarness( options, clbk ) {\n\tvar exitCode;\n\tvar runner;\n\tvar queue;\n\tvar opts;\n\tvar cb;\n\n\topts = {};\n\tif ( arguments.length === 1 ) {\n\t\tif ( isFunction( options ) ) {\n\t\t\tcb = options;\n\t\t} else if ( isObject( options ) ) {\n\t\t\topts = options;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either an options object or a function. Value: `%s`.', options ) );\n\t\t}\n\t} else if ( arguments.length > 1 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'autoclose' ) ) {\n\t\t\topts.autoclose = options.autoclose;\n\t\t\tif ( !isBoolean( opts.autoclose ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'autoclose', opts.autoclose ) );\n\t\t\t}\n\t\t}\n\t\tcb = clbk;\n\t\tif ( !isFunction( cb ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', cb ) );\n\t\t}\n\t}\n\trunner = new Runner();\n\tif ( opts.autoclose ) {\n\t\trunner.once( 'done', close );\n\t}\n\tif ( cb ) {\n\t\trunner.once( 'done', cb );\n\t}\n\texitCode = 0;\n\tqueue = [];\n\n\t/**\n\t* Benchmark harness.\n\t*\n\t* @private\n\t* @param {string} name - benchmark name\n\t* @param {Options} [options] - benchmark options\n\t* @param {boolean} [options.skip=false] - boolean indicating whether to skip a benchmark\n\t* @param {(PositiveInteger|null)} [options.iterations=null] - number of iterations\n\t* @param {PositiveInteger} [options.repeats=3] - number of repeats\n\t* @param {PositiveInteger} [options.timeout=300000] - number of milliseconds before a benchmark automatically fails\n\t* @param {Function} [benchmark] - function containing benchmark code\n\t* @throws {TypeError} first argument must be a string\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {TypeError} benchmark argument must a function\n\t* @throws {Error} benchmark error\n\t* @returns {Function} benchmark harness\n\t*/\n\tfunction harness( name, options, benchmark ) {\n\t\tvar opts;\n\t\tvar err;\n\t\tvar b;\n\t\tif ( !isString( name ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', name ) );\n\t\t}\n\t\topts = copy( DEFAULTS );\n\t\tif ( arguments.length === 2 ) {\n\t\t\tif ( isFunction( options ) ) {\n\t\t\t\tb = options;\n\t\t\t} else {\n\t\t\t\terr = validate( opts, options );\n\t\t\t\tif ( err ) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( arguments.length > 2 ) {\n\t\t\terr = validate( opts, options );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tb = benchmark;\n\t\t\tif ( !isFunction( b ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', b ) );\n\t\t\t}\n\t\t}\n\t\t// Add the benchmark to the initialization queue:\n\t\tqueue.push( [ name, opts, b ] );\n\n\t\t// Perform initialization on the next turn of the event loop (note: this allows all benchmarks to be \"registered\" within the same turn of the loop; otherwise, we run the risk of registration-execution race conditions (i.e., a benchmark registers and executes before other benchmarks can register, depleting the benchmark queue and leading the harness to close)):\n\t\tif ( queue.length === 1 ) {\n\t\t\tnextTick( initialize );\n\t\t}\n\t\treturn harness;\n\t}\n\n\t/**\n\t* Initializes each benchmark.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction initialize() {\n\t\tvar idx = -1;\n\t\treturn next();\n\n\t\t/**\n\t\t* Initialize the next benchmark.\n\t\t*\n\t\t* @private\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next() {\n\t\t\tvar args;\n\n\t\t\tidx += 1;\n\n\t\t\t// If all benchmarks have been initialized, begin running the benchmarks:\n\t\t\tif ( idx === queue.length ) {\n\t\t\t\tqueue.length = 0;\n\t\t\t\treturn runner.run();\n\t\t\t}\n\t\t\t// Initialize the next benchmark:\n\t\t\targs = queue[ idx ];\n\t\t\tinit( args[ 0 ], args[ 1 ], args[ 2 ], onInit );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked after performing initialization tasks.\n\t\t*\n\t\t* @private\n\t\t* @param {string} name - benchmark name\n\t\t* @param {Options} opts - benchmark options\n\t\t* @param {(Function|undefined)} benchmark - function containing benchmark code\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction onInit( name, opts, benchmark ) {\n\t\t\tvar b;\n\t\t\tvar i;\n\n\t\t\t// Create a `Benchmark` instance for each repeat to ensure each benchmark has its own state...\n\t\t\tfor ( i = 0; i < opts.repeats; i++ ) {\n\t\t\t\tb = new Benchmark( name, opts, benchmark );\n\t\t\t\tb.on( 'result', onResult );\n\t\t\t\trunner.push( b );\n\t\t\t}\n\t\t\treturn next();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif (\n\t\t\t!isString( result ) &&\n\t\t\t!result.ok &&\n\t\t\t!result.todo\n\t\t) {\n\t\t\texitCode = 1;\n\t\t}\n\t}\n\n\t/**\n\t* Returns a results stream.\n\t*\n\t* @private\n\t* @param {Object} [options] - options\n\t* @returns {TransformStream} transform stream\n\t*/\n\tfunction createStream( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn runner.createStream( options );\n\t\t}\n\t\treturn runner.createStream();\n\t}\n\n\t/**\n\t* Closes a benchmark harness.\n\t*\n\t* @private\n\t*/\n\tfunction close() {\n\t\trunner.close();\n\t}\n\n\t/**\n\t* Forcefully exits a benchmark harness.\n\t*\n\t* @private\n\t*/\n\tfunction exit() {\n\t\trunner.exit();\n\t}\n\n\t/**\n\t* Returns the harness exit code.\n\t*\n\t* @private\n\t* @returns {NonNegativeInteger} exit code\n\t*/\n\tfunction getExitCode() {\n\t\treturn exitCode;\n\t}\n\n\tsetReadOnly( harness, 'createStream', createStream );\n\tsetReadOnly( harness, 'close', close );\n\tsetReadOnly( harness, 'exit', exit );\n\tsetReadOnlyAccessor( harness, 'exitCode', getExitCode );\n\n\treturn harness;\n}\n\n\n// EXPORTS //\n\nmodule.exports = createHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// EXPORTS //\n\nmodule.exports = proc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( './process.js' );\n\n\n// MAIN //\n\nvar bool = ( proc && typeof proc.exit === 'function' );\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a value is Node stream-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is Node stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeStreamLike( stream );\n* // returns true\n*\n* bool = isNodeStreamLike( {} );\n* // returns false\n*/\nfunction isNodeStreamLike( value ) {\n\treturn (\n\t\t// Must be an object:\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\n\t\t// Should be an event emitter:\n\t\ttypeof value.on === 'function' &&\n\t\ttypeof value.once === 'function' &&\n\t\ttypeof value.emit === 'function' &&\n\t\ttypeof value.addListener === 'function' &&\n\t\ttypeof value.removeListener === 'function' &&\n\t\ttypeof value.removeAllListeners === 'function' &&\n\n\t\t// Should have a `pipe` method (Node streams inherit from `Stream`, including writable streams):\n\t\ttypeof value.pipe === 'function'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar isNodeStreamLike = require( './../../is-node-stream-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is Node writable stream-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is Node writable stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeWritableStreamLike( stream );\n* // returns true\n*\n* bool = isNodeWritableStreamLike( {} );\n* // returns false\n*/\nfunction isNodeWritableStreamLike( value ) {\n\treturn (\n\t\t// Must be stream-like:\n\t\tisNodeStreamLike( value ) &&\n\n\t\t// Should have writable stream methods:\n\t\ttypeof value._write === 'function' &&\n\n\t\t// Should have writable stream state:\n\t\ttypeof value._writableState === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeWritableStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is Node writable stream-like.\n*\n* @module @stdlib/assert/is-node-writable-stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n* var isNodeWritableStreamLike = require( '@stdlib/assert/is-node-writable-stream-like' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeWritableStreamLike( stream );\n* // returns true\n*\n* bool = isNodeWritableStreamLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNodeWritableStreamLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNodeWritableStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of strings.\n*\n* @module @stdlib/assert/is-string-array\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' );\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', 123 ] );\n* // returns false\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', new String( 'def' ) ] );\n* // returns false\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' ).objects;\n*\n* var bool = isStringArray( [ new String( 'abc' ), new String( 'def' ) ] );\n* // returns true\n*\n* bool = isStringArray( [ new String( 'abc' ), 'def' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-function' );\nvar isString = require( './../../is-string' );\n\n\n// MAIN //\n\nvar isStringArray = arrayfun( isString );\nsetReadOnly( isStringArray, 'primitives', arrayfun( isString.isPrimitive ) );\nsetReadOnly( isStringArray, 'objects', arrayfun( isString.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isStringArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy containing only specified keys. If a key does not exist as an own property in a source object, the key is ignored.\n*\n* @param {Object} obj - source object\n* @param {(string|StringArray)} keys - keys to copy\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be either a string or an array of strings\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pick( obj1, 'b' );\n* // returns { 'b': 2 }\n*/\nfunction pick( obj, keys ) {\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tout = {};\n\tif ( isString( keys ) ) {\n\t\tif ( hasOwnProp( obj, keys ) ) {\n\t\t\tout[ keys ] = obj[ keys ];\n\t\t}\n\t\treturn out;\n\t}\n\tif ( isStringArray( keys ) ) {\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. Second argument must be either a string or an array of strings. Value: `%s`.', keys ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a partial object copy containing only specified keys.\n*\n* @module @stdlib/utils/pick\n*\n* @example\n* var pick = require( '@stdlib/utils/pick' );\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pick( obj1, 'b' );\n* // returns { 'b': 2 }\n*/\n\n// MODULES //\n\nvar pick = require( './pick.js' );\n\n\n// EXPORTS //\n\nmodule.exports = pick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( './../../keys' );\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\nvar indexOf = require( './../../index-of' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy excluding specified keys.\n*\n* @param {Object} obj - source object\n* @param {(string|StringArray)} keys - keys to exclude\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be either a string or an array of strings\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = omit( obj1, 'b' );\n* // returns { 'a': 1 }\n*/\nfunction omit( obj, keys ) {\n\tvar ownKeys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\townKeys = objectKeys( obj );\n\tout = {};\n\tif ( isString( keys ) ) {\n\t\tfor ( i = 0; i < ownKeys.length; i++ ) {\n\t\t\tkey = ownKeys[ i ];\n\t\t\tif ( key !== keys ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tif ( isStringArray( keys ) ) {\n\t\tfor ( i = 0; i < ownKeys.length; i++ ) {\n\t\t\tkey = ownKeys[ i ];\n\t\t\tif ( indexOf( keys, key ) === -1 ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\tthrow new TypeError( format( 'invalid argument. Second argument must be either a string or an array of strings. Value: `%s`.', keys ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = omit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a partial object copy excluding specified keys.\n*\n* @module @stdlib/utils/omit\n*\n* @example\n* var omit = require( '@stdlib/utils/omit' );\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = omit( obj1, 'b' );\n* // returns { 'a': 1 }\n*/\n\n// MODULES //\n\nvar omit = require( './omit.js' );\n\n\n// EXPORTS //\n\nmodule.exports = omit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert/is-collection' );\nvar format = require( './../../format' );\nvar UNICODE_MAX = require( '@stdlib/constants/unicode/max' );\nvar UNICODE_MAX_BMP = require( '@stdlib/constants/unicode/max-bmp' );\n\n\n// VARIABLES //\n\nvar fromCharCode = String.fromCharCode;\n\n// Factor to rescale a code point from a supplementary plane:\nvar Ox10000 = 0x10000|0; // 65536\n\n// Factor added to obtain a high surrogate:\nvar OxD800 = 0xD800|0; // 55296\n\n// Factor added to obtain a low surrogate:\nvar OxDC00 = 0xDC00|0; // 56320\n\n// 10-bit mask: 2^10-1 = 1023 => 0x3ff => 00000000 00000000 00000011 11111111\nvar Ox3FF = 1023|0;\n\n\n// MAIN //\n\n/**\n* Creates a string from a sequence of Unicode code points.\n*\n* ## Notes\n*\n* -   UTF-16 encoding uses one 16-bit unit for non-surrogates (U+0000 to U+D7FF and U+E000 to U+FFFF).\n* -   UTF-16 encoding uses two 16-bit units (surrogate pairs) for U+10000 to U+10FFFF and encodes U+10000-U+10FFFF by subtracting 0x10000 from the code point, expressing the result as a 20-bit binary, and splitting the 20 bits of 0x0-0xFFFFF as upper and lower 10-bits. The respective 10-bits are stored in two 16-bit words: a high and a low surrogate.\n*\n*\n* @param {...NonNegativeInteger} args - sequence of code points\n* @throws {Error} must provide either an array-like object of code points or one or more code points as separate arguments\n* @throws {TypeError} a code point must be a nonnegative integer\n* @throws {RangeError} must provide a valid Unicode code point\n* @returns {string} created string\n*\n* @example\n* var str = fromCodePoint( 9731 );\n* // returns '☃'\n*/\nfunction fromCodePoint( args ) {\n\tvar len;\n\tvar str;\n\tvar arr;\n\tvar low;\n\tvar hi;\n\tvar pt;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 1 && isCollection( args ) ) {\n\t\tarr = arguments[ 0 ];\n\t\tlen = arr.length;\n\t} else {\n\t\tarr = [];\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tarr.push( arguments[ i ] );\n\t\t}\n\t}\n\tif ( len === 0 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide either an array of code points or one or more code points as separate arguments.' );\n\t}\n\tstr = '';\n\tfor ( i = 0; i < len; i++ ) {\n\t\tpt = arr[ i ];\n\t\tif ( !isNonNegativeInteger( pt ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide valid code points (i.e., nonnegative integers). Value: `%s`.', pt ) );\n\t\t}\n\t\tif ( pt > UNICODE_MAX ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Must provide a valid code point (i.e., cannot exceed %u). Value: `%s`.', UNICODE_MAX, pt ) );\n\t\t}\n\t\tif ( pt <= UNICODE_MAX_BMP ) {\n\t\t\tstr += fromCharCode( pt );\n\t\t} else {\n\t\t\t// Code point from a supplementary plane. Split into two 16-bit code units (surrogate pair).\n\t\t\tpt -= Ox10000;\n\t\t\thi = (pt >> 10) + OxD800;\n\t\t\tlow = (pt & Ox3FF) + OxDC00;\n\t\t\tstr += fromCharCode( hi, low );\n\t\t}\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromCodePoint;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum Unicode code point.\n*\n* @module @stdlib/constants/unicode/max\n* @type {integer32}\n*\n* @example\n* var UNICODE_MAX = require( '@stdlib/constants/unicode/max' );\n* // returns 1114111\n*/\n\n\n// MAIN //\n\n/**\n* Maximum Unicode code point.\n*\n* @constant\n* @type {integer32}\n* @default 1114111\n* @see [Unicode]{@link https://en.wikipedia.org/wiki/Unicode}\n*/\nvar UNICODE_MAX = 0x10FFFF|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = UNICODE_MAX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Maximum Unicode code point in the Basic Multilingual Plane (BMP).\n*\n* @module @stdlib/constants/unicode/max-bmp\n* @type {integer32}\n*\n* @example\n* var UNICODE_MAX_BMP = require( '@stdlib/constants/unicode/max-bmp' );\n* // returns 65535\n*/\n\n\n// MAIN //\n\n/**\n* Maximum Unicode code point in the Basic Multilingual Plane (BMP).\n*\n* @constant\n* @type {integer32}\n* @default 65535\n* @see [Unicode]{@link https://en.wikipedia.org/wiki/Unicode}\n*/\nvar UNICODE_MAX_BMP = 0xFFFF|0; // asm type annotation\n\n\n// EXPORTS //\n\nmodule.exports = UNICODE_MAX_BMP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Writes a string to the console.\n*\n* @private\n* @param {string} str - string to write\n*/\nfunction log( str ) {\n\tconsole.log( str ); // eslint-disable-line no-console\n}\n\n\n// EXPORTS //\n\nmodule.exports = log;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar TransformStream = require( '@stdlib/streams/node/transform' );\nvar fromCodePoint = require( '@stdlib/string/from-code-point' );\nvar log = require( './log.js' );\n\n\n// MAIN //\n\n/**\n* Returns a Transform stream for logging to the console.\n*\n* @private\n* @returns {TransformStream} transform stream\n*/\nfunction createStream() {\n\tvar stream;\n\tvar line;\n\n\tstream = new TransformStream({\n\t\t'transform': transform,\n\t\t'flush': flush\n\t});\n\tline = '';\n\n\treturn stream;\n\n\t/**\n\t* Callback invoked upon receiving a new chunk.\n\t*\n\t* @private\n\t* @param {(Buffer|string)} chunk - chunk\n\t* @param {string} enc - Buffer encoding\n\t* @param {Callback} clbk - callback to invoke after transforming the streamed chunk\n\t*/\n\tfunction transform( chunk, enc, clbk ) {\n\t\tvar c;\n\t\tvar i;\n\n\t\tfor ( i = 0; i < chunk.length; i++ ) {\n\t\t\tc = fromCodePoint( chunk[ i ] );\n\t\t\tif ( c === '\\n' ) {\n\t\t\t\tflush();\n\t\t\t} else {\n\t\t\t\tline += c;\n\t\t\t}\n\t\t}\n\t\tclbk();\n\t}\n\n\t/**\n\t* Callback to flush data to `stdout`.\n\t*\n\t* @private\n\t* @param {Callback} [clbk] - callback to invoke after processing data\n\t* @returns {void}\n\t*/\n\tfunction flush( clbk ) {\n\t\ttry {\n\t\t\tlog( line );\n\t\t} catch ( err ) {\n\t\t\tstream.emit( 'error', err );\n\t\t}\n\t\tline = '';\n\t\tif ( clbk ) {\n\t\t\treturn clbk();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = createStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a string from a sequence of Unicode code points.\n*\n* @module @stdlib/string/from-code-point\n*\n* @example\n* var fromCodePoint = require( '@stdlib/string/from-code-point' );\n*\n* var str = fromCodePoint( 9731 );\n* // returns '☃'\n*/\n\n// MODULES //\n\nvar fromCodePoint = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = fromCodePoint;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar isNodeWritableStreamLike = require( '@stdlib/assert/is-node-writable-stream-like' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\nvar pick = require( '@stdlib/utils/pick' );\nvar omit = require( '@stdlib/utils/omit' );\nvar noop = require( '@stdlib/utils/noop' );\nvar createHarness = require( './harness' );\nvar logStream = require( './log' );\nvar canEmitExit = require( './utils/can_emit_exit.js' );\nvar proc = require( './utils/process.js' );\n\n\n// MAIN //\n\n/**\n* Creates a benchmark harness which supports closing when a process exits.\n*\n* @private\n* @param {Options} [options] - function options\n* @param {boolean} [options.autoclose] - boolean indicating whether to automatically close a harness after a harness finishes running all benchmarks\n* @param {Stream} [options.stream] - output writable stream\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*\n* @example\n* var proc = require( 'process' );\n* var bench = createExitHarness( onFinish );\n*\n* function onFinish() {\n*     bench.close();\n* }\n*\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*\n* @example\n* var stdout = require( '@stdlib/streams/node/stdout' );\n*\n* var stream = createExitHarness().createStream();\n* stream.pipe( stdout );\n*/\nfunction createExitHarness() {\n\tvar exitCode;\n\tvar pipeline;\n\tvar harness;\n\tvar options;\n\tvar stream;\n\tvar topts;\n\tvar opts;\n\tvar clbk;\n\n\tif ( arguments.length === 0 ) {\n\t\toptions = {};\n\t\tclbk = noop;\n\t} else if ( arguments.length === 1 ) {\n\t\tif ( isFunction( arguments[ 0 ] ) ) {\n\t\t\toptions = {};\n\t\t\tclbk = arguments[ 0 ];\n\t\t} else if ( isObject( arguments[ 0 ] ) ) {\n\t\t\toptions = arguments[ 0 ];\n\t\t\tclbk = noop;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either an options object or a function. Value: `%s`.', arguments[ 0 ] ) );\n\t\t}\n\t} else {\n\t\toptions = arguments[ 0 ];\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t}\n\topts = {};\n\tif ( hasOwnProp( options, 'autoclose' ) ) {\n\t\topts.autoclose = options.autoclose;\n\t\tif ( !isBoolean( opts.autoclose ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'autoclose', opts.autoclose ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'stream' ) ) {\n\t\topts.stream = options.stream;\n\t\tif ( !isNodeWritableStreamLike( opts.stream ) ) {\n\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a writable stream. Option: `%s`.', 'stream', opts.stream ) );\n\t\t}\n\t}\n\texitCode = 0;\n\n\t// Create a new harness:\n\ttopts = pick( opts, [ 'autoclose' ] );\n\tharness = createHarness( topts, done );\n\n\t// Create a results stream:\n\ttopts = omit( options, [ 'autoclose', 'stream' ] );\n\tstream = harness.createStream( topts );\n\n\t// Pipe results to an output stream:\n\tpipeline = stream.pipe( opts.stream || logStream() );\n\n\t// If a process can emit an 'exit' event, capture errors in order to set the exit code...\n\tif ( canEmitExit ) {\n\t\tpipeline.on( 'error', onError );\n\t\tproc.on( 'exit', onExit );\n\t}\n\treturn harness;\n\n\t/**\n\t* Callback invoked when a harness finishes.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction done() {\n\t\treturn clbk();\n\t}\n\n\t/**\n\t* Callback invoked upon a stream `error` event.\n\t*\n\t* @private\n\t* @param {Error} error - error object\n\t*/\n\tfunction onError() {\n\t\texitCode = 1;\n\t}\n\n\t/**\n\t* Callback invoked upon an `exit` event.\n\t*\n\t* @private\n\t* @param {integer} code - exit code\n\t*/\n\tfunction onExit( code ) {\n\t\tif ( code !== 0 ) {\n\t\t\t// Allow the process to exit...\n\t\t\treturn;\n\t\t}\n\t\tharness.close();\n\t\tproc.exit( exitCode || harness.exitCode );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = createExitHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar canEmitExit = require( './utils/can_emit_exit.js' );\nvar createExitHarness = require( './exit_harness.js' );\n\n\n// VARIABLES //\n\nvar harness;\n\n\n// MAIN //\n\n/**\n* Returns a benchmark harness. If a harness has already been created, returns the cached harness.\n*\n* @private\n* @param {Options} [options] - harness options\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @returns {Function} benchmark harness\n*/\nfunction getHarness( options, clbk ) {\n\tvar opts;\n\tvar cb;\n\tif ( harness ) {\n\t\treturn harness;\n\t}\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t\tcb = clbk;\n\t} else {\n\t\topts = {};\n\t\tcb = options;\n\t}\n\topts.autoclose = !canEmitExit;\n\tharness = createExitHarness( opts, cb );\n\n\t// Update state:\n\tgetHarness.cached = true;\n\n\treturn harness;\n}\n\n\n// EXPORTS //\n\nmodule.exports = getHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar TransformStream = require( '@stdlib/streams/node/transform' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\nvar createHarness = require( './harness' );\nvar harness = require( './get_harness.js' );\n\n\n// VARIABLES //\n\nvar listeners = [];\n\n\n// FUNCTIONS //\n\n/**\n* Callback invoked when a harness finishes running all benchmarks.\n*\n* @private\n*/\nfunction done() {\n\tvar len;\n\tvar f;\n\tvar i;\n\n\tlen = listeners.length;\n\n\t// Inform all the listeners that the harness has finished...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf = listeners.shift();\n\t\tf();\n\t}\n}\n\n/**\n* Creates a results stream.\n*\n* @private\n* @param {Options} [options] - stream options\n* @throws {Error} must provide valid stream options\n* @returns {TransformStream} results stream\n*/\nfunction createStream( options ) {\n\tvar stream;\n\tvar bench;\n\tvar opts;\n\tif ( arguments.length ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\t// If we have already created a harness, calling this function simply creates another results stream...\n\tif ( harness.cached ) {\n\t\tbench = harness();\n\t\treturn bench.createStream( opts );\n\t}\n\tstream = new TransformStream( opts );\n\topts.stream = stream;\n\n\t// Create a harness which uses the created output stream:\n\tharness( opts, done );\n\n\treturn stream;\n}\n\n/**\n* Adds a listener for when a harness finishes running all benchmarks.\n*\n* @private\n* @param {Callback} clbk - listener\n* @throws {TypeError} must provide a function\n* @throws {Error} must provide a listener only once\n* @returns {void}\n*/\nfunction onFinish( clbk ) {\n\tvar i;\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', clbk ) );\n\t}\n\t// Allow adding a listener only once...\n\tfor ( i = 0; i < listeners.length; i++ ) {\n\t\tif ( clbk === listeners[ i ] ) {\n\t\t\tthrow new Error( 'invalid argument. Attempted to add duplicate listener.' );\n\t\t}\n\t}\n\tlisteners.push( clbk );\n}\n\n\n// MAIN //\n\n/**\n* Runs a benchmark.\n*\n* @param {string} name - benchmark name\n* @param {Options} [options] - benchmark options\n* @param {boolean} [options.skip=false] - boolean indicating whether to skip a benchmark\n* @param {(PositiveInteger|null)} [options.iterations=null] - number of iterations\n* @param {PositiveInteger} [options.repeats=3] - number of repeats\n* @param {PositiveInteger} [options.timeout=300000] - number of milliseconds before a benchmark automatically fails\n* @param {Function} [benchmark] - function containing benchmark code\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} benchmark argument must a function\n* @returns {Benchmark} benchmark harness\n*\n* @example\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*/\nfunction bench( name, options, benchmark ) {\n\tvar h = harness( done );\n\tif ( arguments.length < 2 ) {\n\t\th( name );\n\t} else if ( arguments.length === 2 ) {\n\t\th( name, options );\n\t} else {\n\t\th( name, options, benchmark );\n\t}\n\treturn bench;\n}\n\n/**\n* Creates a benchmark harness.\n*\n* @name createHarness\n* @memberof bench\n* @type {Function}\n* @param {Options} [options] - harness options\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*/\nsetReadOnly( bench, 'createHarness', createHarness );\n\n/**\n* Creates a results stream.\n*\n* @name createStream\n* @memberof bench\n* @type {Function}\n* @param {Options} [options] - stream options\n* @throws {Error} must provide valid stream options\n* @returns {TransformStream} results stream\n*/\nsetReadOnly( bench, 'createStream', createStream );\n\n/**\n* Adds a listener for when a harness finishes running all benchmarks.\n*\n* @name onFinish\n* @memberof bench\n* @type {Function}\n* @param {Callback} clbk - listener\n* @throws {TypeError} must provide a function\n* @throws {Error} must provide a listener only once\n* @returns {void}\n*/\nsetReadOnly( bench, 'onFinish', onFinish );\n\n\n// EXPORTS //\n\nmodule.exports = bench;\n"],"names":["defineProperty","Object","has_define_property_support","err","builtin","is_number","value","zeros","n","i","out","zero_pad","str","width","right","negative","pad","length","startsWithMinus","substr","isNumber","require$$0","zeroPad","require$$1","lowercase","String","prototype","toLowerCase","uppercase","toUpperCase","format_integer","token","base","specifier","arg","parseInt","isFinite","Error","toString","precision","padRight","sign","alternate","call","charAt","is_string","abs","Math","replace","RE_EXP_POS_DIGITS","RE_EXP_NEG_DIGITS","RE_ONLY_DIGITS","RE_DIGITS_BEFORE_EXP","RE_TRAILING_PERIOD_ZERO","RE_PERIOD_ZERO_EXP","RE_ZERO_BEFORE_EXP","format_double","digits","f","parseFloat","toExponential","toFixed","toPrecision","spaces","formatInteger","isString","formatDouble","require$$2","spacePad","require$$4","fromCharCode","isnan","isNaN","isArray","Array","initialize","flags","mapping","main","tokens","hasPeriod","flag","num","pos","j","TypeError","padZeros","indexOf","arguments","maxWidth","substring","RE","parse","match","interpolate","tokenize","content","prev","exec","slice","lastIndex","push","format","args","apply","lib","objectProtoype","toStr","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","polyfill","obj","prop","descriptor","hasValue","hasGet","hasSet","__proto__","get","set","configurable","enumerable","writable","Duplex","pna","require","Readable","ReadableState","EventEmitter","EElistenerCount","emitter","type","listeners","Stream","Buffer","OurUint8Array","global","Uint8Array","util","create","inherits","debugUtil","debug","debuglog","StringDecoder","BufferList","destroyImpl","kProxyEvents","options","stream","isDuplex","this","objectMode","readableObjectMode","hwm","highWaterMark","readableHwm","readableHighWaterMark","defaultHwm","floor","buffer","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","destroyed","defaultEncoding","awaitDrain","readingMore","decoder","encoding","_readableState","readable","read","_read","destroy","_destroy","readableAddChunk","chunk","addToFront","skipChunkCheck","er","state","end","emitReadable","onEofChunk","isBuffer","_isUint8Array","undefined","chunkInvalid","emit","getPrototypeOf","from","_uint8ArrayToBuffer","addChunk","write","maybeReadMore","needMoreData","unshift","Readable$1","_undestroy","undestroy","cb","isPaused","setEncoding","enc","MAX_HWM","howMuchToRead","head","data","computeNewHighWaterMark","nextTick","emitReadable_","flow","maybeReadMore_","len","nReadingNextTick","self","resume_","fromList","ret","shift","join","concat","clear","list","hasStrings","p","c","next","nb","tail","copyFromBufferString","allocUnsafe","copy","buf","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","x","l","nOrig","doRead","pipe","dest","pipeOpts","src","endFn","process","stdout","stderr","onend","unpipe","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","_writableState","needDrain","once","on","pipeOnDrain","increasedAwaitDrain","pause","event","fn","prependListener","_events","resume","dests","index","splice","ev","res","addListener","wrap","_this","paused","method","bind","_fromList","CorkedRequest","entry","finish","corkReq","callback","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","browser","version","setImmediate","Writable","WritableState","internalUtil","deprecate","realHasInstance","nop","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","_write","writev","_writev","final","_final","doWrite","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","current","_","Symbol","hasInstance","Function","object","Writable$1","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","module","exports","arg1","arg2","arg3","objectToString","o","util$3","isBoolean","isNull","isNullOrUndefined","isSymbol","isUndefined","isRegExp","re","isObject","isDate","d","isError","e","isFunction","isPrimitive","objectKeys","keys","key","_stream_duplex","require$$3","v","allowHalfOpen","onEndNT","Duplex$1","_stream_transform","Transform","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","done","Transform$3","_this2","err2","_stream_passthrough","PassThrough","validate_1","native","Ctor","proto","validate","createObject","inherit_1","ctor","superCtor","FLG","hasSymbols","toStringTag","tostring","native_class","has","hasOwnProperty","property","toStrTag","hasOwnProp","isOwn","tag","nativeClass","primitive","Number","test","setReadOnly","POSITIVE_INFINITY","NEGATIVE_INFINITY","PINF","NINF","isInt","integer","valueOf","isInteger","isNonNegativeInteger","predicate","isObjectLike","_isBuffer","constructor","Boolean","window","getThis","Self","Win","Global","codegen","root","nodeList","document","childNodes","typedarray","Int8Array","check_1","reFunctionName","REGEXP","name","ctorName","_typeof","typeOf","getProto","reRegExp","RegExp","isNan","isCollection","index_of","arr","searchElement","fromIndex","has_arguments_bug","has_builtin","bool","isArguments","bool$9","detect","detect_1","propertyIsEnumerable","bool$8","isEnum","hasStringEnumBug","isEnumerableProperty","builtin_wrapper","has_enumerable_prototype_bug","has_non_enumerable_properties_bug","is_constructor_prototype","w","isConstructorPrototype","EXCLUDED_KEYS","win","bool$5","k","check","hasAutomationEqualityBug","HAS_WINDOW","HAS_ENUM_PROTO_BUG","HAS_NON_ENUM_PROPS_BUG","error","NON_ENUMERABLE","wrapper","skipConstructor","skipPrototype","isFcn","getOwnPropertyNames","propertyNames","getOwnPropertyDescriptor","propertyDescriptor","desc","GlobalBuffer","b","hasInt8Array","isInt8Array","GlobalInt8Array","INT8_MAX","hasUint8Array","isUint8Array","GlobalUint8Array","UINT8_MAX","hasUint8ClampedArray","Uint8ClampedArray","isUint8ClampedArray","GlobalUint8ClampedArray","hasInt16Array","Int16Array","isInt16Array","GlobalInt16Array","INT16_MAX","hasUint16Array","Uint16Array","isUint16Array","GlobalUint16Array","UINT16_MAX","hasInt32Array","Int32Array","isInt32Array","GlobalInt32Array","INT32_MAX","hasUint32Array","Uint32Array","isUint32Array","GlobalUint32Array","UINT32_MAX","hasFloat32Array","Float32Array","isFloat32Array","GlobalFloat32Array","hasFloat64Array","Float64Array","isFloat64Array","GlobalFloat64Array","NaN","require$$5","require$$6","require$$7","int8array","uint8array","uint8clampedarray","int16array","uint16array","int32array","uint32array","float32array","float64array","regexp","require$$8","require$$9","require$$10","require$$11","copyBuffer","require$$12","typedArrays","deepCopy","val","cache","refs","level","parent","ref","tmp","message","stack","code","errno","syscall","copyError","Date","Set","Map","freeze","names","isExtensible","preventExtensions","isSealed","seal","isFrozen","cloneInstance","copy_1","objectPrototype","isPrototypeOf","ownProps","isNonNegativeNumber","isNonNegative","opts","proc","clbk","destroy_1","_destroyed","JSON","stringify","logger","inherit","DEFAULTS","TransformStream","object_mode","factory","createStream","ctor_1","copts","getter","hrtime","isArrayLike","arrayfun","isNonNegativeIntegerArray","primitives","tic","time","sec","ns","now","RangeError","set_timeout","setTimeout","clear_timeout","clearTimeout","timeout","run_1","id","_skip","comment","_benchmark","_running","fail","exit_1","_exited","_ended","ended_1","assert_1","ok","result","_count","skip","todo","operator","actual","expected","RE_CHARS","s","rescape","search","newval","capture","REGEXP_STRING","reEOL","REGEXP_CAPTURE","trim","EOL","RE_COMMENT","comment_1","msg","lines","split","skip_1","_assert","todo_1","fail_1","pass_1","ok_1","not_ok","equal_1","not_equal","deep_equal","not_deep_equal","next_tick","fcn","end_1","toc","run","exit","assert","require$$13","pass","require$$14","require$$15","notOk","require$$16","equal","require$$17","notEqual","require$$18","deepEqual","require$$19","notDeepEqual","require$$20","require$$21","Benchmark","benchmark","hasTicked","hasTocked","elapsed","secs","rate","iterations","setReadOnly$4","benchmarkClass","RE_EOL","RE_WHITESPACE","encodeAssertion","actualStack","errorStack","indent","at","encodeResult","YAML_INDENT","push_1","_benchmarks","_stream","total","TAP_HEADER","create_stream","onPush","onDone","onRun","onTick","bid","row","clear_1","close","_closed","Runner","runner","isPositiveInteger","pretest_1","pretest","onResult","onEnd","setReadOnlyAccessor","repeats","init","onIterations","iter","harness","exitCode","queue","autoclose","idx","onInit","getExitCode","isNodeStreamLike","removeAllListeners","isStringArray","pick_1","omit_1","ownKeys","UNICODE_MAX","pt","fromCodePoint","log","console","isNodeWritableStreamLike","pick","omit","noop","createHarness","logStream","line","exit_harness","topts","createExitHarness","get_harness","getHarness","cached","bench","h"],"mappings":"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"}